// Code generated by go-bindata.
// sources:
// index.html
// registration.html
// login.html
// base.html
// error.html
// apidocumentation.html
// smsconfirmation.html
// emailconfirmation.html
// DO NOT EDIT!

package html

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\xdd\x6e\xdb\xb8\x12\xbe\xcf\x53\x4c\xd5\x0b\xdf\x44\x52\x9b\xe4\x9c\x5d\xb4\xb6\x16\x45\x52\x14\x01\x16\x68\x51\x07\x28\x7a\x15\xd0\xd2\x48\x24\x22\x91\x2a\x49\xd9\x35\x16\x0b\xf4\x41\x76\x5f\xae\x4f\xb2\x33\xa4\x1c\xdb\x71\x83\xba\xc5\x2e\x8a\xc2\xa4\x38\xbf\xdf\x37\x33\x64\xa6\x4f\xae\xde\x5e\xde\x7c\x7c\xf7\x1a\xa4\xef\xda\xe2\x64\xca\x3f\xd0\x0a\xdd\xcc\x12\xd4\x09\x7f\x40\x51\x15\x27\x00\xd3\x0e\xbd\x20\x29\xdf\xa7\xf8\x69\x50\xcb\x59\x72\x69\xb4\x47\xed\xd3\x9b\x75\x8f\x09\x94\x71\x37\x4b\x3c\x7e\xf6\x39\x9b\x79\x09\xa5\x14\xd6\xa1\x9f\x0d\xbe\x4e\x7f\x4d\x20\xdf\xda\xd1\xa2\xc3\x59\xb2\x54\xb8\xea\x8d\xf5\x3b\xda\x2b\x55\x79\x39\xab\x70\xa9\x4a\x4c\xc3\xe6\x14\x94\x56\x5e\x89\x36\x75\xa5\x68\x71\xf6\x3c\x7b\x96\x04\x43\x5e\xf9\x16\x8b\x6b\x3f\x71\xf0\xd1\x0c\xf0\x56\xb7\x4a\xe3\x34\x8f\x9f\x59\x80\xf6\x77\x60\xb1\x9d\x25\xce\xaf\x5b\x74\x12\x91\x5c\x49\x8b\xf5\x2c\x11\x8e\x02\x73\x79\xe9\x5c\x1e\x0e\x33\x5a\x25\xf9\x8f\xa8\xd5\x14\x72\x2a\x56\xe8\x4c\x87\x59\xa7\xf4\x43\x0b\x41\x61\xc2\x80\xb9\x17\x79\x90\x76\x59\x63\x4c\xd3\xa2\xe8\x95\xcb\x4a\xd3\xb1\x99\xdf\x6a\xd1\xa9\x76\x3d\xfb\x80\x6d\x5b\xb7\xe4\xe9\xc5\xc5\xb3\x67\x93\xe0\x7e\xb2\x75\x3f\x01\x4f\x20\xcf\x26\x01\x5b\xd2\x9a\x04\x37\xe1\x9c\x57\xf2\x0c\xfe\x00\x3e\x4b\x9d\x14\x95\x59\xbd\x80\xb3\xfe\x73\xf8\xff\xf4\xfc\x92\xff\xbd\x84\x3f\x4f\x58\x23\x1f\x55\xa6\x79\xa4\x75\xba\x30\xd5\x1a\xca\x96\xd2\x9a\x25\x92\x12\xe9\x45\x83\x1b\xd6\xd1\x82\xaa\xe8\x73\x58\x46\xc8\x2b\xb5\xdc\x48\x8f\x8c\x85\xef\xe3\x09\x4b\xb7\xa6\x31\x49\x31\x15\x23\x5e\x4f\x93\x02\xae\xbd\x23\x7e\xb2\xc8\x0f\xc5\x20\x8a\x69\x4e\xe2\x3b\x8a\xa3\x49\xa7\x1a\x9d\xae\xac\xe8\x47\xa3\x74\xba\xb1\x63\xb1\x51\xce\x73\x18\x53\xb5\x11\xaf\x05\xd4\x22\x1d\x1c\xda\xb4\x6f\x07\x47\x47\xb9\x2a\xde\x8f\x82\xec\xe6\xa1\x11\x8a\x4d\xe9\x43\x0b\xc1\x6d\x38\x20\xfd\x39\x6d\xa8\xe0\xee\xd5\xef\x43\x1d\x17\x11\x39\xb4\xc5\xc9\xc9\xf4\x49\x9a\xc2\xfc\xf7\xeb\xab\xd7\x73\x98\xdf\xbc\x7a\x7f\x03\x69\x4a\x02\x1b\x24\x5c\xab\x2a\x7c\xfe\x3d\xdc\xe4\x59\x41\xe0\x58\x30\x11\x1d\x52\xd1\x54\xc0\x6b\x72\x73\xb6\x95\x50\x1a\xd6\x41\x68\xa5\x41\x0a\x5d\xb9\xcd\xf1\x7d\x50\xf1\x67\xcf\xf5\xd9\xa3\xae\xe1\x10\xfa\x4f\x83\xf1\xe8\x6e\x59\x42\x50\x1c\x76\xcb\x80\x3c\xdf\x97\x49\x8a\x91\xc8\xde\xa2\x43\x5d\x22\x74\x28\xb4\x23\xcc\x08\x75\x51\x7a\x65\x74\x06\x97\xa6\xeb\x85\x56\xe8\x40\x23\x56\x31\xf8\x4d\x6a\xb0\x92\xaa\x94\xfc\x6d\x34\xe1\x49\x17\x2a\x55\xd7\x68\x79\xb3\x12\x6b\x77\x0a\x15\xf6\xa8\x2b\xa5\x1b\x42\x06\xbc\x44\x9a\x10\x6c\x72\x7d\x0a\x3d\x5a\x47\xdf\x8c\x8d\x43\xe3\xb3\xcf\x08\x8d\xf3\xc7\xd8\xfa\x06\x30\xff\x3b\x8e\x13\xf6\xd8\x0d\x5a\x95\xc2\x23\x98\x25\x75\xc3\x52\x58\x65\x06\xc7\x63\x4d\x6b\x6c\x1d\x10\x15\x07\x44\x6d\x13\x19\xc3\x73\xb0\x18\x28\x45\x1e\x53\xa2\xe5\xe4\x38\xf5\x63\x08\xfc\xff\x7f\x45\xe0\xd7\x2f\x7f\xdd\x48\x8c\xb0\xbe\xb1\x4a\x13\x1b\x5e\x9a\xa1\x91\x1e\x4c\x0d\x3c\xcf\xbc\x64\xe4\xe9\x98\xc6\x89\x9e\x78\x58\x60\x6d\x2c\x3e\x81\x0f\x52\x50\x2a\x35\x5c\x4a\x4b\x5d\xd6\x09\x22\x8a\x84\x46\x65\x22\xcd\xa0\x23\xf1\xd1\x33\x30\x82\x08\xb5\x35\x1d\x08\x70\x9e\x2c\x64\x87\x16\xb2\x2c\x63\x4a\xa5\xe8\xc3\x32\x16\x93\x80\x56\x79\x1a\xe3\xb0\x50\x1e\x3a\x76\xfd\xf5\xcb\xdf\x5b\x9a\x29\x2b\xd5\x35\xe0\x6c\x79\x3f\x91\x69\x9f\x57\x36\x75\x38\x38\x97\xf5\xba\x49\x08\x6c\x6a\x65\x6a\x7a\xac\x7d\x1c\xcb\x11\x8d\x8b\x0d\x1a\x62\xa0\xb8\xed\x2d\xdf\x44\xb7\x8d\x15\xeb\xa4\xb8\xb2\x19\xcc\xd9\x00\xd1\x22\x2f\xee\x55\x16\x36\xff\xe6\xfa\x10\xd8\x57\x7a\xb7\xca\x09\xe1\x6d\x09\x31\x9e\x8a\xda\xc1\x78\x10\x0b\x43\x05\x11\x6a\x3a\x16\x12\xd7\x32\x6f\x7b\x6b\x96\xa4\x6f\x4f\xc7\x6a\x09\x72\x2b\x69\x42\xaf\x08\x4b\x40\x8b\xf6\x8e\x0d\x79\xc3\x2d\x13\xfb\xe8\x27\x9b\xe0\xfc\x88\x26\x98\x4b\x76\x3a\xf4\xec\xaf\xe2\x2e\x50\x9a\xca\xa0\x13\xdc\xe3\xfb\x75\xcf\x15\x4e\x13\x6c\x0d\xc2\x41\x37\x50\x54\x22\x54\x39\xf5\xb2\xf6\xc7\x94\xfa\xc5\x31\xd7\xcb\x4f\x54\xfa\x95\x89\xd5\x0b\xa2\xb6\x42\x55\x9c\x88\x93\x66\x15\x07\x52\x2d\x68\x78\xd1\x48\xe9\x42\x61\xc6\x64\x99\x86\x9d\x2c\x63\x12\xca\xc9\xa8\x19\x24\x0c\x17\x33\x5a\x7e\xa0\xdc\x33\xc6\x93\x80\xdd\xb8\x81\x24\xe2\xa8\x26\x4b\x76\xcf\x14\xb1\xef\x44\x8d\xdf\x27\x6a\xe7\x36\x0d\xe0\xfc\xf2\x0d\x10\xf6\xe1\x79\x78\x4a\x74\x78\xa3\xd3\x12\x79\x26\xc7\x87\x41\x5c\xef\xc8\xef\x6b\x54\xa6\xdc\x3b\x0b\xb7\xa6\x17\xb6\xa1\xd7\x5b\x72\xbb\xa0\x07\xe1\xdd\xe6\x09\xb4\x79\xd1\x34\xaa\xc9\x1a\xe5\x17\xc6\xdc\xb9\x4c\x99\x5c\x79\x47\x99\xc7\x7b\x2c\x1f\xe3\xcb\x1f\x18\x05\xb8\x32\xe5\xd0\xd1\x49\xc0\x64\xdf\xe1\xf6\xc6\xde\x03\xe7\x91\x70\x69\xd8\x94\x67\xc7\xc6\x4c\x2f\xae\x6a\xd7\xf1\x41\x58\xaf\xde\x5d\xff\xbb\xa1\x9d\xff\x38\x9c\x5e\x0e\x8b\xf0\x2c\xdc\x45\xf2\x20\xd2\xa9\xa3\x6b\x70\xe3\x2c\x2a\xa5\xfc\xde\x3c\x10\x04\x98\x53\x21\x96\x7c\x73\x56\xc8\xb7\xe8\x9b\x20\xfc\xd0\x5c\xce\xf6\x8a\x1f\x48\x77\xf7\xf1\xf6\xc8\xa4\xc9\xf9\x59\x19\xde\x4a\xe1\x8f\x8a\x7f\x02\x00\x00\xff\xff\x96\xfb\x32\x73\x65\x0c\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 3173, mode: os.FileMode(493), modTime: time.Unix(1469176996, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _registrationHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\xd1\x4f\xdb\x3c\x10\x7f\xe7\xaf\xf0\xe7\x97\xbc\xe0\x18\xa4\x0f\x7d\xa8\x34\xfd\x34\xb1\x4d\xda\x13\x13\x63\x9a\xd0\x36\x21\xe3\x5c\x13\x17\xc7\x0e\xb6\xdb\x12\x4d\xfb\xdf\x77\x4e\x1a\x68\x2b\x40\x2d\x6b\xfb\x92\x9c\xef\x7e\xbf\xf3\x9d\x7f\x3d\x67\xf8\xcf\xfb\x8b\xf3\xab\xeb\xcf\x1f\x48\x19\x2a\x3d\x3a\x18\xc6\x07\xd1\xc2\x14\x19\x05\x43\x89\xd4\xc2\xfb\x8c\xde\x16\x34\xfa\x40\xe4\xa3\x03\x82\xbf\x61\x05\x41\x20\x24\xd4\x0c\xee\xa7\x6a\x96\xd1\x73\x6b\x02\x98\xc0\xae\x9a\x1a\x10\xd6\x59\x19\x0d\xf0\x10\x78\xe4\x3c\x23\xb2\x14\xce\x43\xc8\xa6\x61\xcc\x4e\x29\x5f\x26\x32\xa2\x82\x8c\xce\x14\xcc\x6b\xeb\xc2\x12\x7c\xae\xf2\x50\x66\x39\xcc\x94\x04\xd6\x1a\x87\x44\x19\x15\x94\xd0\xcc\x4b\xa1\x21\x3b\x4e\x8f\xe8\x82\x2a\xa8\xa0\x61\x74\x09\x85\xf2\xc1\x89\xa0\xac\x21\x8c\x7c\x0a\x89\x27\xd7\x76\x4a\x2e\x8c\x56\x06\x86\xbc\x8b\xea\x10\xb8\x72\x47\x1c\xe8\x2c\xf1\xa1\xd1\xe0\x4b\x80\x40\x6a\x07\x63\x08\xb2\x4c\xda\x98\xee\x57\xe2\x5a\x96\xc4\x7a\xfd\x80\x73\x31\x11\x0f\x69\x61\x6d\xa1\x41\xd4\xca\xa7\xd2\x56\xed\x1a\xd7\xea\xd6\x73\xec\xdd\x54\x0b\x77\x53\x89\x00\x0e\x37\xca\x8f\x53\xdc\x24\x73\x32\x3d\xe9\x7d\xac\xf7\xa5\x95\x32\xa9\xf4\x3e\x59\xdf\x10\x7d\xda\x10\xed\xb2\x53\x3c\x08\x08\x9e\x63\x34\x6f\x9d\x11\xf7\xd8\xc6\x0d\x81\x63\x6c\x2c\x13\x73\xf0\xb6\x82\x3e\xf7\x2a\xc7\x6a\xa5\x31\xde\xaf\x97\x8a\x98\xff\xc7\xa2\x52\xba\xc9\xbe\x81\xd6\x63\x8d\xb9\x06\xff\x1e\x1d\x25\xeb\xad\x4c\x48\x40\x35\x64\x49\x2b\x82\xa5\x2a\xdb\x88\xd1\x63\x7b\xbf\x9b\xe2\xc7\x40\x6a\x2b\xee\x7e\x1e\x46\x83\xf5\xef\x69\xff\x4e\x7e\x2d\x9d\x05\x21\xb9\xf2\xb5\x16\xcd\x80\x18\x6b\xe0\xec\xd1\xf5\xbb\x63\xe7\x0b\xfa\x21\xef\xf4\x7a\x30\xbc\xb5\x79\x43\x90\x4b\xd4\x75\x46\x55\xf0\x8d\x9d\xda\x56\x0d\xa9\x5b\x12\x0b\x8d\x21\x68\x28\x19\x58\xae\x56\x95\x8f\x20\x86\x28\xd6\xc1\x58\x24\x06\x47\x3a\x34\xb8\xd1\x90\x3f\x1b\x10\x73\xe7\x6a\x16\x79\xa3\xb6\x7b\xca\xb9\xc3\x8d\x80\xa3\x08\x43\xef\xa8\x8b\x59\xf8\xea\xa9\x2f\x9f\x1c\x6b\xac\x63\x6b\x9f\xcd\xb6\x58\xc7\x6c\x5e\x3a\x55\x07\xe2\x9d\xdc\x52\xad\x13\x8f\x32\x3d\x49\xff\xeb\xed\x74\x82\xa7\x85\xad\x6c\xf9\x46\x3b\x24\x66\xc2\xa8\xa8\xfe\x56\x7d\x7b\x4b\x52\x81\xf7\xa2\x00\xbf\xdf\x2c\xce\x4e\xf7\x5d\x88\xc0\x29\xb1\xdf\x0c\xd2\xda\x3b\xb5\xe3\x4e\x6d\x3e\xfb\x5e\xce\x48\x43\xa9\x5c\x5e\x0b\x17\x9a\xc5\x00\xbb\x77\xd2\xe6\xc0\x0a\x30\x80\xff\x58\xeb\xf8\xa4\x5f\x43\x1a\xba\x03\x9a\x9b\xaf\x57\x1f\x4f\xb7\xe2\xea\x6b\xea\xf0\x6b\xe6\x6b\x4c\xd8\xb6\x1a\x87\x17\x4e\x57\xee\xf1\x5e\x84\x7c\xf1\xd8\x0e\x83\xf7\xe4\x58\x15\x5f\xc0\xc5\xfb\x71\x3b\x68\xae\x1c\xc8\xa0\x66\xe0\x79\x37\xac\xde\x0c\xef\xa6\xcf\x9b\xe1\x33\xa1\x55\xde\x0e\xe0\x0d\x29\x96\x67\xf6\x8a\xf1\xae\xae\xff\x96\x62\xbb\x56\xbe\x48\x13\x3f\x86\x9c\xd5\x7a\xe3\xb6\xbc\xbc\xa1\xca\xef\x8e\xec\x12\x3c\x98\xfc\x55\x4a\x1e\xef\xca\xf6\xee\x6c\x3f\x07\xff\x04\x00\x00\xff\xff\x78\xd8\x00\xae\x1f\x0a\x00\x00")

func registrationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_registrationHtml,
		"registration.html",
	)
}

func registrationHtml() (*asset, error) {
	bytes, err := registrationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "registration.html", size: 2591, mode: os.FileMode(420), modTime: time.Unix(1469176996, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loginHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\xe0\xf8\xa2\x97\x4a\x4c\x81\x15\x1b\x52\xcb\x43\xd0\x6e\x40\x81\x0d\x2d\x96\x16\x43\xb1\x0d\x03\x43\x9d\x24\xba\x14\xa9\xf1\x4e\x76\xbd\x61\xdf\x7d\x47\xc9\x4a\x1d\x6f\x4d\x5d\xa7\xd1\x83\x2d\xde\xdd\xef\x77\x7f\x78\x3c\x6a\xf1\xd5\xf3\x97\xcf\x5e\xbf\x7d\xf5\xbd\x68\xa9\x73\xcb\xb3\x45\xfa\x13\x4e\xfb\xa6\x94\xe0\xa5\x30\x4e\x23\x96\xf2\xba\x91\x49\x07\xba\x5a\x9e\x09\x7e\x16\x1d\x90\x66\x08\xf5\x39\xfc\x39\xd8\x75\x29\x9f\x05\x4f\xe0\x29\x7f\xbd\xed\x81\x61\xd3\xaa\x94\x04\xef\x49\x25\xce\xa7\xc2\xb4\x3a\x22\x50\x39\x50\x9d\x7f\x2b\xd5\x3e\x91\xd7\x1d\x94\x72\x6d\x61\xd3\x87\x48\x7b\xf0\x8d\xad\xa8\x2d\x2b\x58\x5b\x03\xf9\xb8\x78\x24\xac\xb7\x64\xb5\xcb\xd1\x68\x07\xe5\xe3\xe2\x5c\xee\xa8\xc8\x92\x83\xe5\x8f\xa1\x61\x13\x91\x8b\x17\x94\xa1\x78\x1b\x06\xf1\xd2\x3b\xeb\x61\xa1\x26\xfd\x64\xcb\x92\x77\x22\x82\x2b\x33\xa4\xad\x03\x6c\x01\x48\xf4\x11\x6a\x20\xd3\x66\xa3\xcd\xf4\xb4\x2c\x2b\xb3\x94\x29\x5e\x28\xa5\x57\xfa\x7d\xd1\x84\xd0\x38\xd0\xbd\xc5\xc2\x84\x6e\x94\x29\x67\xaf\x51\x71\xd5\x06\xa7\xe3\x1f\x9d\x26\x88\x1c\xa2\x7a\x5c\x70\x78\x79\x34\xc5\x93\x59\x97\xcf\xba\xa2\xb3\xbe\x30\x88\xd9\x61\x40\xf2\x43\x40\x72\xf2\x2e\x79\x0b\x80\x50\xb1\xb5\x1a\x95\x09\x77\x53\xc0\x23\x81\x35\x97\x34\xd7\x1b\xc0\xd0\xc1\xec\xfb\x36\xc7\xed\x4c\x93\x3d\x1e\xa6\xca\x98\xef\x6a\xdd\x59\xb7\x2d\x7f\x01\xe7\x6a\xc7\xbe\x2e\xbe\x3e\x3f\xcf\x0e\x4b\x99\x09\xe2\x3e\x28\xb3\x71\xfb\xf7\xb2\x1c\x2d\x96\x37\xe5\xfd\xd5\x37\xbf\x5d\x18\x17\xf4\xbb\xdf\x1f\xa5\x45\x3e\xbf\x17\xf3\xbb\xf8\x7b\x6f\x2f\x84\xa8\x2c\xf6\x4e\x6f\x2f\x84\x0f\x1e\x9e\xde\xa8\xfe\x99\xd8\xd5\x8e\x7e\xa1\xa6\x4e\x3d\x5b\x5c\x87\x6a\x2b\x98\x4b\xf7\x7d\x29\x5d\x68\xac\xbf\xec\x7b\x99\x24\x48\xd1\x1a\xca\x2b\x7b\xbb\xc5\x2d\x61\xbe\x0d\x43\x1e\xc6\x9e\xc9\x13\x0f\x44\x31\x22\x97\x0b\xf5\xbf\xda\xe4\xa7\xb2\xeb\x44\x9a\x3a\x78\xe6\xdb\x44\x76\x0a\x51\x32\x8c\xb5\xcb\xc9\x66\xa7\xeb\x07\x6c\x3f\x28\x0e\x58\xeb\x10\xb8\x45\xfe\xeb\x6d\x27\x67\x6f\x68\xa2\xed\x49\x60\x34\x9f\xd9\x99\x2b\xe4\x96\x7c\x52\x7c\x33\xaf\x8b\x15\xef\x0c\x97\x6d\xe4\x5b\x7e\x41\xe2\x5c\x7b\x9b\x3a\x7d\xec\xb4\x8f\x3b\x91\xf7\x73\x12\xc3\xc0\x2e\x56\x28\x1f\x26\x87\x0e\x10\x75\x03\xf8\x89\x24\xee\x5b\x29\x9e\x06\x0f\x5b\x26\xd4\x69\x62\xfe\x35\x6f\xc6\x97\xa9\xd6\xf1\x43\xee\x8e\xbc\xa8\xb5\xb1\xea\x75\xa4\xed\x6e\x52\xbd\xf9\xf9\xc5\x1d\x11\x4a\x8e\xa4\xe7\x83\xcf\x93\x49\x21\xdf\x26\x50\xf1\x09\x8a\x60\xc8\xae\x01\xd5\x74\x1a\x4f\x86\x4f\xc7\xeb\x64\xf8\x5a\x3b\x5b\x69\xb2\xe1\xae\x12\xef\x53\x0c\x08\x51\xbd\xe1\x9f\xe7\x5c\xa8\xd0\x5c\x41\x4c\x97\xdc\x91\xe0\x71\x20\xa9\x79\xa0\x7d\x3e\x28\xdd\xd6\x31\x38\x77\x74\xc2\x7b\xd8\x53\x22\x8d\x80\xe0\xab\xab\x9f\xae\x4e\x74\x8c\x1d\x32\xb2\xb6\xb1\x1b\x4b\x7c\x22\x0b\x6d\xc2\x0f\xda\x50\x88\x97\x03\xb5\x2c\xb7\xe6\x3e\x6c\x75\x88\x4d\xa0\x57\xdc\xb9\x9b\x10\xab\x13\x49\xb8\x7f\xc2\x1a\xe2\xa5\x31\x61\xf0\xf4\x71\x12\x95\x6e\xb2\xf1\x66\x1b\x3f\xd3\xfe\x0d\x00\x00\xff\xff\xcf\x1d\xab\xc0\xb7\x09\x00\x00")

func loginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_loginHtml,
		"login.html",
	)
}

func loginHtml() (*asset, error) {
	bytes, err := loginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "login.html", size: 2487, mode: os.FileMode(420), modTime: time.Unix(1469176996, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\xe0\xf8\xb2\x97\x4a\x4c\x81\x15\x2b\x52\xc9\xc3\x50\x6f\x40\x9f\x3a\x6c\x09\x86\x62\x1b\x0a\x86\x3a\x4b\x74\x28\x52\xe5\x51\x76\xd5\x61\xff\x7d\x47\xca\xf2\xec\x2c\x0d\xac\x20\xd6\x83\x25\x92\xf7\x7d\x77\x3c\x7e\x77\x66\xf1\xcd\xf2\xfd\xdb\xeb\x0f\xbf\xfc\xc4\x9a\xd0\x9a\xc5\x45\x11\x5f\xcc\x48\x5b\x97\x1c\x2c\x67\xb6\xce\x64\xd7\x95\x5c\x07\x1c\x5c\xef\xac\xd1\x16\x7e\xec\xba\xb4\xa0\x8c\x93\x77\x4c\x19\x89\x58\xf2\xdb\x9a\x47\x34\xc8\x6a\x71\xc1\xe8\x29\x5a\x08\x92\x48\x43\x97\xc1\xa7\x5e\x6f\x4a\xfe\xd6\xd9\x00\x36\x64\xd7\x43\x07\x9c\xa9\x71\x54\xf2\x00\x9f\x83\x88\x5e\xdf\x30\xd5\x48\x8f\x10\xca\x3e\xac\xb2\xd7\x5c\x1c\x12\x59\xd9\x42\xc9\x37\x1a\xb6\x9d\xf3\xe1\x00\xbe\xd5\x55\x68\xca\x0a\x36\x5a\x41\x96\x06\x2f\x98\xb6\x3a\x68\x69\x32\x54\xd2\x40\xf9\x32\xbf\xe4\x3b\xaa\xa0\x83\x01\xd6\xc9\x1a\xd2\xd7\xe2\x5d\xf8\x16\xd9\x07\xd7\xb3\xf7\x69\x63\x85\x18\xa7\x47\x63\x9a\xb9\x63\x1e\x4c\xc9\x31\x0c\x06\xb0\x01\x08\xac\xf3\xb0\x82\xa0\x1a\x9e\x6c\xc6\xa7\xa1\xb9\x92\xc7\xad\xe2\x95\x10\x72\x2d\x3f\xe7\xb5\x73\xb5\x01\xd9\x69\xcc\x95\x6b\xd3\x9c\x30\xfa\x16\x05\x25\xb6\x37\xd2\x7f\x6c\x65\x00\x4f\x31\x8a\x97\x39\xc5\x97\x79\x95\xbf\x9a\xd6\xb2\x69\x2d\x6f\xb5\xcd\x15\x22\x7f\x24\x20\xbe\xf3\x4e\x67\x00\x01\x05\x59\x8b\xb4\x98\x70\x62\x1e\x70\x45\x39\xcd\xe4\x16\xd0\xb5\xb0\xf7\x7d\xc4\x71\xbc\xd3\x68\x8f\xf7\xb7\x4a\x98\x1f\x56\xb2\xd5\x66\x28\x7f\x07\x63\x56\x86\x7c\x5d\x7d\x77\x79\xc9\xff\x1f\x40\x20\x21\xec\xce\xff\x60\x97\xc9\x62\xb1\x4f\xef\x1f\xb6\xfe\xf3\x2a\x29\xed\xaf\x17\x71\x90\x4d\xdf\xf9\x5e\x81\x7f\x1f\x9c\x05\x63\x95\xc6\xce\xc8\xe1\x8a\x59\x67\xe1\xcd\x7e\xe9\x9f\x91\x5d\xec\xe8\x0b\x31\x4a\xf5\xa2\xb8\x75\xd5\x70\x24\xe2\x8b\x82\xc4\x9e\x91\xda\xb3\x51\xee\x59\xb4\x04\xbf\x28\xc4\xc3\xf3\x04\xa8\xf4\x26\x16\x44\x94\xe7\x44\xb5\xf5\x54\x37\xe0\x39\xd5\x12\x41\x28\xaf\x46\xd7\xb6\xe4\x8a\x44\x0b\x9e\x61\x90\x51\xc5\xe3\x5a\xc9\xbd\xdb\x72\xe2\x27\x9a\xc5\x48\xb6\x23\xe9\x7a\x6c\xfe\x5b\xb8\xe7\x7e\xe5\x5c\x78\x28\xac\xdd\x3c\x85\x85\xca\xeb\x2e\x30\xf4\x6a\xa6\x3c\xd7\x48\xba\x7c\x95\x7f\x3f\x8d\xf3\x35\xc6\x30\x46\xbe\xc5\x33\x12\x67\x9e\xf6\x0f\xe7\xa3\x6f\x01\x91\xaa\x1d\x93\x9c\xcf\xe6\x45\x5a\x1d\x6b\xf6\xcc\x4e\xa8\x25\x9c\xd7\x83\x72\xee\x4e\x9f\x3b\x57\x28\x63\x73\xfe\xf2\xbc\xc9\x3a\xbd\x9d\x3e\xe2\x91\x98\x3b\x6a\x19\xd4\xd3\x04\xd2\x1f\x11\x54\x54\x76\x1e\x54\xd0\x1b\x40\x31\xd6\xfa\x93\xe1\x63\x4d\x3e\x19\xbe\xa1\xee\x51\xc9\xa0\xdd\xa3\x1b\x08\x8d\xf6\x55\x47\x8d\x65\xd8\x35\xf5\x9b\x5f\xdf\xcd\xb2\xff\xe4\x95\xab\x20\xab\xc1\x82\x97\xc1\x79\xb1\x9e\xe6\x9e\x89\xe6\xe3\xcd\xf5\xcf\xaf\x67\x71\x4d\x87\x38\xe2\xef\x0d\xe7\xe5\x73\x7c\xcd\xc3\xd0\x35\x63\xa5\xeb\xdf\xc0\xc7\xeb\xc5\x89\x50\xea\xfb\x27\x5a\xf6\x08\xfe\xf0\x98\x65\x1f\x1a\xe7\xf5\x97\x74\xd2\x4b\xba\xf6\x68\x83\xcb\x69\x79\x0e\xe7\x0d\xfd\x2c\x49\xf2\x6e\x66\xe8\x09\x3c\x45\x01\xf1\xc2\xe6\x9d\x31\x27\x0b\x37\xc1\xd5\x93\x50\x38\x2b\x4e\xe7\x6b\x6a\x23\x63\x9e\xe6\x3b\x3c\x42\xcf\x73\x1c\x3f\xa5\x1d\xe6\xfb\x9c\x80\x5f\x71\x27\xe2\x2d\x24\xdd\x4a\xd2\x2d\xfc\xdf\x00\x00\x00\xff\xff\x98\xfa\x6d\x3e\x96\x0b\x00\x00")

func baseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_baseHtml,
		"base.html",
	)
}

func baseHtml() (*asset, error) {
	bytes, err := baseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base.html", size: 2966, mode: os.FileMode(420), modTime: time.Unix(1469176996, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _errorHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x5d\x6b\xdc\x3a\x10\x7d\xdf\x5f\x31\xd1\x8b\x5f\xae\xad\xbd\xb9\xb7\xb4\xa4\xb6\x4b\x48\x42\x59\x28\x24\x74\x17\x4a\x9e\x82\xd6\x9e\xb5\x45\x64\xc9\xb1\xc6\x49\xf7\xdf\x77\xfc\x95\xac\xb3\x2d\x6d\xa0\x0f\xc6\xfa\x38\x73\xe6\xcc\x91\x46\xf1\xc9\xe5\xf5\xc5\xe6\xf6\xe6\x0a\x4a\xaa\x4c\xba\x88\xbb\x1f\x18\x65\x8b\x44\xa0\x15\xdd\x02\xaa\x3c\x5d\x00\xc4\x15\x92\x62\x14\xd5\x21\x3e\xb4\xfa\x31\x11\x17\xce\x12\x5a\x0a\x37\xfb\x1a\x05\x64\xc3\x2c\x11\x84\xdf\x49\x76\x34\x1f\x21\x2b\x55\xe3\x91\x92\x96\x76\xe1\x07\x01\xb2\xe7\x21\x4d\x06\xd3\x15\x05\x1e\x6e\x5d\x0b\xd7\xd6\x68\x8b\xb1\x1c\x96\x3b\x00\xcf\xef\xa1\x41\x93\x08\x4f\x7b\x83\xbe\x44\x24\x01\x65\x83\xbb\x44\x28\xcf\x7c\x5e\x66\xde\xcb\x7e\x33\xe2\x91\x90\x6f\x09\xdb\xb1\xce\x50\x3d\xa1\x77\x15\x46\x95\xb6\xaf\x19\xfa\x80\xa0\xab\xd3\x9f\xc9\x1e\xed\xa3\xc2\xb9\xc2\xa0\xaa\xb5\x8f\x32\x57\x75\x34\x9f\x76\xaa\xd2\x66\x9f\x7c\x43\x63\x76\x86\x33\x9d\xfd\xbf\x5c\x06\x7d\xfa\xe0\x25\x7d\x00\xc4\xde\x24\x41\x6f\x09\x47\x05\xec\xa7\x1c\x0c\x8d\xb7\x2e\xdf\x8f\xf6\x62\x03\x3a\x4f\xc4\x30\x14\xbd\x94\x5c\x3f\x42\x66\x58\x76\x22\x46\x63\xfb\xf5\x71\xa7\x43\x1b\x57\x38\x91\xc6\x6a\xac\x30\x92\x22\x85\x15\x79\xb6\x34\x1a\x2c\x85\x58\xaa\x34\x96\x8c\xef\x19\x87\xc1\x90\x1e\x9b\x74\xb1\x88\x4f\xc2\x10\xd6\x5f\x56\x97\x57\x6b\x58\x6f\xce\xbf\x6e\x20\x0c\x19\x30\xf1\x7b\xa3\x73\xfc\xf7\x77\x6a\xca\xd3\xf4\xdd\x72\xc9\xac\xa7\x2f\x0b\xd7\xae\xf6\xff\x00\x95\xda\xc3\x93\xf2\x60\x1d\x81\x6f\xeb\xda\x79\xcc\x81\x1c\x94\xaa\xae\xd1\x4e\x21\xcf\xba\x26\x9d\xb3\xfc\xef\x0f\xab\xfe\xa9\x82\xf9\xde\x43\xeb\x08\xfd\x5d\x07\x51\x6c\x41\xf3\x0c\x9a\xc3\xb6\x2d\x91\xb3\x61\xc6\x34\xec\x7d\x77\x3a\xe3\xf8\x00\x3f\x8f\xc8\x5d\x36\xdb\xe3\x5d\x05\xa4\x9a\x82\x6f\xb7\xb8\xdb\x72\xc3\xdc\x4f\x77\x6d\xba\x3a\x85\x2e\xa2\x42\xd3\xd6\xb9\x7b\x1f\x69\x27\x35\xf9\xbd\x6b\x5d\x7f\x36\x72\x2c\x42\x32\xaf\x97\xda\x52\xe3\xf2\x36\x23\xed\x6c\xd4\x75\xce\xab\x54\x00\x97\x2e\x6b\x2b\xc6\xab\x0e\x32\x97\xc1\x87\x7c\xa8\x79\xf2\xf1\x17\x45\x00\x7f\xa7\x7f\x5a\x09\x5f\xf8\xfc\x30\xf1\x91\xac\xf3\x9b\xd5\xdf\x95\xf6\xdf\xdb\x4d\xa6\xb2\xdd\xf6\x5d\x79\xe8\xef\x91\xd2\xd8\xd7\xca\x4e\xc9\x86\xa0\xb0\x6b\xf7\x23\x20\xc0\xda\xb5\x4d\x86\xfc\x9e\xe5\x08\xce\xc2\xe7\x1e\xfc\x9a\x4e\x76\x7c\xe9\x1b\xca\x9d\x4d\x0f\x26\xc7\x0d\x3a\xfe\xc6\xf7\x41\x0e\xef\xf2\x8f\x00\x00\x00\xff\xff\x3a\x97\x62\x25\xa8\x05\x00\x00")

func errorHtmlBytes() ([]byte, error) {
	return bindataRead(
		_errorHtml,
		"error.html",
	)
}

func errorHtml() (*asset, error) {
	bytes, err := errorHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "error.html", size: 1448, mode: os.FileMode(420), modTime: time.Unix(1469176996, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apidocumentationHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x6d\x6f\xdb\x36\x10\xfe\x3c\xff\x8a\x1b\xb7\xc1\x09\x10\x49\x4e\x90\x60\x9e\xf5\x32\x04\xc9\x3e\x04\x58\x91\xa2\x08\x50\x04\x6d\x51\xd0\xd2\x49\x62\x43\x91\xaa\x48\xc5\x71\x8b\xfe\xf7\x92\xa2\x5f\x24\xdb\x09\xda\xea\x83\x45\x1d\xef\x9e\x7b\xee\xf8\x1c\x1d\xfd\x7e\x7d\x7b\x75\x77\xff\xfa\x3f\x28\x75\xc5\x93\x51\x64\x5f\xc0\xa9\x28\x62\x82\x82\x24\x23\x80\xa8\x44\x9a\x25\xa3\xdf\xc0\x2c\x2b\xd4\xd4\x78\xea\xda\xc3\xcf\x2d\x7b\x8c\xc9\x95\x14\x1a\x85\xf6\xee\x96\x35\x12\x48\xdd\x57\x4c\x34\x3e\xe9\xc0\x42\x85\x90\x96\xb4\x51\xa8\xe3\x56\xe7\xde\x94\x40\x60\x21\xbb\x27\xd2\x4c\x73\x4c\x6e\xf4\x58\xc1\xbd\x6c\xe1\x56\x70\x26\x30\x0a\x9c\x79\xb4\x71\x33\xd6\x07\x68\x90\xc7\x44\xe9\x25\x47\x55\x22\x6a\x02\x65\x83\x79\x4c\xa8\x32\xd0\x2a\x48\x95\x0a\xba\x4d\xdf\xac\x48\x2f\xc5\x0f\xc6\xe6\x86\xb7\x47\x17\xa8\x64\x85\x7e\xc5\xc4\x10\xc6\xa1\x74\x41\x63\x5b\xbb\x9a\x05\x5d\x84\xf2\x0b\x29\x0b\x8e\xb4\x66\xca\x4f\x65\x65\xa1\xfe\xcd\x69\xc5\xf8\x32\x7e\x8b\x9c\xe7\xdc\x64\x9b\x9d\x4f\x26\xe3\x8e\xc2\x78\x4b\x61\x0c\xda\xf4\x2b\x1e\x77\x6d\x32\x51\xe3\x0d\x63\x88\x3a\xaf\x6d\xf9\xdd\xf3\x4e\x14\xef\x67\x29\x97\xf4\xe1\xc3\x89\xfd\xf0\xd6\x6b\x7f\xbd\x86\xaf\x83\x00\xfb\x64\x4c\xd5\x9c\x2e\x67\x20\xa4\xc0\x70\xb0\xfd\x6d\x08\xef\xe7\x2d\xe7\x2a\x6d\x10\x45\x26\xd3\xb6\x32\x47\x48\x35\x93\x62\x0f\x94\x63\xae\x67\x30\x09\x77\xcc\x0d\x2b\xca\x43\xf6\x2f\x1e\x13\x19\x3e\xed\xed\x54\xb4\x29\x98\xf0\xb4\xac\x67\x70\x3a\xa9\x9f\x76\xc9\x0d\xb8\x31\xad\x96\xb2\x95\x9d\x38\xac\x12\xb1\x39\x50\xeb\x82\x65\xba\xb4\x60\x93\xbf\x42\x98\xd3\xf4\xa1\x68\x64\x2b\xb2\x19\x34\xc5\x9c\x1e\x9d\x4f\x4f\xe0\xf4\xfc\xc2\xfc\x4c\xff\x3e\x81\x89\xff\xcf\xd9\x71\x08\x25\x3a\xd6\x53\x4b\x00\xc2\x0d\xd7\xb3\x70\x40\xef\xe2\x65\x7a\x7f\x34\xb4\xe2\x1f\x5f\xee\xda\xce\x51\xc0\x73\x78\x51\xb0\x7b\xf6\x3d\xe5\x11\xa3\xb2\x41\x1a\xe7\xac\x02\x63\xf7\xcc\xdc\x29\xc9\xd1\xe3\xb6\x24\x4f\x97\x58\xb9\x49\xd8\x97\x7e\xca\x8d\xec\xcd\x7c\x5a\x17\x3b\xdd\x51\xe0\xa6\x7b\x14\xcd\x65\xb6\x04\x23\x27\x5a\xd7\x31\xb1\x55\x5d\x39\xd0\xcb\xba\xde\x84\x59\xf3\x26\x99\x0d\x20\x60\x43\x33\xf6\xb8\xf6\xd8\x3f\x2d\x77\x87\xf4\x5c\x56\x97\x04\x71\x9a\xef\x76\x58\x16\x13\x2e\x0b\x49\x92\x88\xae\xca\x0d\x48\x02\x37\x5a\x99\x8b\xc1\x77\x17\x83\xa1\x4a\x93\x28\x30\xee\xbd\xc0\x15\xa4\x62\x85\xf0\x16\x0d\xad\xc9\x66\x66\x37\x38\x7b\x7d\xb3\x45\x04\x7d\x9e\xbe\xb5\x10\xc8\xe4\x42\x98\x51\xca\x92\xeb\xd5\x02\xde\x5c\xbe\xfa\x1f\x54\x8d\x29\xcb\x59\xda\x05\x5b\x0e\x2e\xfb\x9a\xc8\x6a\xb1\x7a\x0d\x9b\xf1\xcc\x58\xf5\x2a\xef\xcd\xfd\xa0\xb7\x36\xbd\x11\xba\x6a\xd2\x9f\xaa\x80\x29\x3a\x37\xd1\xdd\xe9\x7a\x6a\xc1\x74\x5a\x1a\x94\xb5\xd9\x65\xe0\xcc\xde\xd7\x05\x0a\x6c\xa8\x96\xdb\xdd\xee\xda\x35\x82\x51\xb2\x6d\x52\x54\x86\x0a\xe7\xb4\x56\x98\x99\xa6\x1f\xe0\x36\x68\xc3\xb6\x7a\x53\x2e\xab\xf5\x73\xc4\xdd\xee\x50\xb3\x8f\xb6\x3b\x8d\xff\x49\x99\xc3\x5f\x39\x24\xbf\x80\x73\x18\xc0\xb2\xfc\xd3\x17\xd2\x68\x39\xe7\x2c\xd5\x47\xc7\xe1\xa8\xe7\x14\x58\x0d\xdb\xb7\xfb\xf3\xfb\x1e\x00\x00\xff\xff\xb2\x34\x57\x71\x0d\x07\x00\x00")

func apidocumentationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_apidocumentationHtml,
		"apidocumentation.html",
	)
}

func apidocumentationHtml() (*asset, error) {
	bytes, err := apidocumentationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apidocumentation.html", size: 1805, mode: os.FileMode(420), modTime: time.Unix(1465910933, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _smsconfirmationHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x6f\x9c\x3c\x10\xbe\xe7\x57\xf8\xf5\xab\x28\xad\x54\x30\x59\xf5\x50\x11\xa0\x87\xb4\x87\x9c\xd2\x43\xa4\x2a\x47\x2f\x0c\xc6\x8d\x3f\xa8\x6d\x76\x17\xad\xf6\xbf\xd7\x06\x27\x59\x36\xdd\xaa\xaa\x0f\x30\xcc\xd7\x33\xf3\x78\x86\xe2\xbf\x2f\xf7\xb7\x0f\x8f\xdf\xbe\xa2\xce\x49\x51\x5d\x14\xe1\x85\x04\x55\xac\xc4\xa0\x70\x50\x00\x6d\xaa\x0b\xe4\x4f\x21\xc1\x51\xef\xe7\xfa\x04\x7e\x0e\x7c\x53\xe2\x5b\xad\x1c\x28\x97\x3c\x8c\x3d\x60\x54\xcf\x5f\x25\x76\xb0\x73\x24\x24\xba\x41\x75\x47\x8d\x05\x57\x0e\xae\x4d\x3e\x61\x72\x9c\x48\x51\x09\x25\xde\x70\xd8\xf6\xda\xb8\xa3\xf0\x2d\x6f\x5c\x57\x36\xb0\xe1\x35\x24\xd3\xc7\x07\xc4\x15\x77\x9c\x8a\xc4\xd6\x54\x40\x79\x9d\x66\x38\xa6\x72\xdc\x09\xa8\xee\xdc\x95\x45\x8f\x7a\x40\xf7\x4a\x70\x05\x05\x99\xd5\xb3\x8b\xd7\x3c\x21\x03\xa2\xc4\xd6\x8d\x02\x6c\x07\xe0\xe1\x3a\x03\x6d\x89\xa9\xf5\xd5\x59\x52\x5b\x4b\x26\x63\xea\xa5\x97\x32\xff\x32\xb0\xf5\x85\x27\x74\x0b\x56\x4b\x48\x25\x57\x6f\x73\xcc\x21\x81\x39\x9b\x93\xc9\xdf\xa6\x4c\x6b\x26\x80\xf6\xdc\xa6\xb5\x96\x21\xd1\xe7\x96\x4a\x2e\xc6\xf2\x3b\x08\xd1\x0a\x8f\x95\x7f\xcc\x32\xfc\xb6\x00\xe7\xd9\x8e\x24\x07\xa4\x08\x34\x79\xcc\x72\x38\x3e\xa9\x6a\xb9\x91\xd4\x71\xad\x92\x9e\x32\x40\xfb\x17\x63\x38\x13\xb1\x39\xba\xce\xb2\xcb\x9b\x85\x61\x4d\xeb\x27\x66\xf4\xa0\x9a\x1c\x0d\x46\xbc\xbb\x8a\xad\x72\xc9\xc8\x9a\xa5\xbd\x62\x57\xef\x97\x11\xb5\x16\xda\xe4\xe8\xff\xb6\x6d\x97\x86\x0e\x38\xeb\xdc\x04\xb2\xe9\x96\x26\x49\x0d\xe3\x2a\x47\xd9\xab\xfa\x70\xf1\xa7\xea\x83\xca\x51\x7f\xb9\xe6\xa4\x91\x86\xdb\x5e\xd0\x31\x47\x9e\xb3\xdd\x12\xe4\xc7\x60\x1d\x6f\xc7\x24\x8e\x56\x8e\x6a\xff\x04\xb3\x74\xa2\x82\x33\x95\x70\x07\xd2\xfe\xde\xe1\x2c\x53\x47\xed\x5d\xfe\x43\x1b\xdd\xea\xa4\x93\x67\x1e\xb3\xe9\x9c\xe1\x0b\xad\xb2\x7e\x77\x8c\x16\x9e\x05\x89\xd7\x5f\x90\x79\x5f\x8b\xb5\x6e\xc6\xb8\xbd\x1e\x8a\x37\x7e\xfc\x26\xf1\x79\x5c\x1a\xbe\x41\xb5\xf0\x57\x5b\xe2\xc8\x0e\x7e\x1d\x9e\xc9\x1a\x62\x84\x66\x1a\x57\x05\x8d\x13\x4c\x70\x85\xee\x9c\xf5\x8b\x96\xce\x8b\xe6\x81\x69\x55\x10\xef\x1e\xd3\xce\xe2\x5c\x05\x18\x2f\x2d\x71\x96\x64\x9c\xa9\x65\x62\xe7\xb8\x1a\x4f\x54\x34\xcb\x26\x89\xd7\x9d\x5c\xe3\x6a\xbf\x47\x61\x0b\xd0\xe1\xe0\x01\x57\x27\x15\xc4\x57\xe4\x81\xcc\xbf\xb7\x5f\x01\x00\x00\xff\xff\x6b\xec\xe6\x0e\xef\x04\x00\x00")

func smsconfirmationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_smsconfirmationHtml,
		"smsconfirmation.html",
	)
}

func smsconfirmationHtml() (*asset, error) {
	bytes, err := smsconfirmationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "smsconfirmation.html", size: 1263, mode: os.FileMode(420), modTime: time.Unix(1465211324, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _emailconfirmationHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x6f\x9c\x3c\x10\xbe\xe7\x57\xf8\xf5\xab\x28\xad\x54\x30\x59\xf5\x50\x11\xa0\x87\xb4\x87\x9c\xd2\x43\xa4\x2a\x47\x2f\x0c\xc6\x8d\x3f\xa8\x6d\x76\x17\xad\xf6\xbf\xd7\x06\x27\x59\x36\xdd\xaa\xaa\x0f\x30\xcc\xd7\x33\xf3\x78\x86\xe2\xbf\x2f\xf7\xb7\x0f\x8f\xdf\xbe\xa2\xce\x49\x51\x5d\x14\xe1\x85\x04\x55\xac\xc4\xa0\x70\x50\x00\x6d\xaa\x0b\xe4\x4f\x21\xc1\x51\xef\xe7\xfa\x04\x7e\x0e\x7c\x53\xe2\x5b\xad\x1c\x28\x97\x3c\x8c\x3d\x60\x54\xcf\x5f\x25\x76\xb0\x73\x24\x24\xba\x41\x75\x47\x8d\x05\x57\x0e\xae\x4d\x3e\x61\x72\x9c\x48\x51\x09\x25\xde\x70\xd8\xf6\xda\xb8\xa3\xf0\x2d\x6f\x5c\x57\x36\xb0\xe1\x35\x24\xd3\xc7\x07\xc4\x15\x77\x9c\x8a\xc4\xd6\x54\x40\x79\x9d\x66\x38\xa6\x72\xdc\x09\xa8\xee\xdc\x95\x45\x8f\x7a\x40\xf7\x4a\x70\x05\x05\x99\xd5\xb3\x8b\xd7\x3c\x21\x03\xa2\xc4\xd6\x8d\x02\x6c\x07\xe0\xe1\x3a\x03\x6d\x89\xa9\xf5\xd5\x59\x52\x5b\x4b\x26\x63\xea\xa5\x97\x32\xff\x32\xb0\xf5\x85\x27\x74\x0b\x56\x4b\x48\x25\x57\x6f\x73\xcc\x21\x81\x39\x9b\x93\xc9\xdf\xa6\x4c\x6b\x26\x80\xf6\xdc\xa6\xb5\x96\x21\xd1\xe7\x96\x4a\x2e\xc6\xf2\x3b\x08\xd1\x0a\x8f\x95\x7f\xcc\x32\xfc\xb6\x00\xe7\xd9\x8e\x24\x07\xa4\x08\x34\x79\xcc\x72\x38\x3e\xa9\x6a\xb9\x91\xd4\x71\xad\x92\x9e\x32\x40\xfb\x17\x63\x38\x13\xb1\x39\xba\xce\xb2\xcb\x9b\x85\x61\x4d\xeb\x27\x66\xf4\xa0\x9a\x1c\x0d\x46\xbc\xbb\x8a\xad\x72\xc9\xc8\x9a\xa5\xbd\x62\x57\xef\x97\x11\xb5\x16\xda\xe4\xe8\xff\xb6\x6d\x97\x86\x0e\x38\xeb\xdc\x04\xb2\xe9\x96\x26\x49\x0d\xe3\x2a\x47\xd9\xab\xfa\x70\xf1\xa7\xea\x83\xca\x51\x7f\xb9\xe6\xa4\x91\x86\xdb\x5e\xd0\x31\x47\x9e\xb3\xdd\x12\xe4\xc7\x60\x1d\x6f\xc7\x24\x8e\x56\x8e\x6a\xff\x04\xb3\x74\xa2\x82\x33\x95\x70\x07\xd2\xfe\xde\xe1\x2c\x53\x47\xed\x5d\xfe\x43\x1b\xdd\xea\xa4\x93\x67\x1e\xb3\xe9\x9c\xe1\x0b\xad\xb2\x7e\x77\x8c\x16\x9e\x05\x89\xd7\x5f\x90\x79\x5f\x8b\xb5\x6e\xc6\xb8\xbd\x1e\x8a\x37\x7e\xfc\x26\xf1\x79\x5c\x1a\xbe\x41\xb5\xf0\x57\x5b\xe2\xc8\x0e\x7e\x1d\x9e\xc9\x1a\x62\x84\x66\x1a\x57\x05\x8d\x13\x4c\x70\x85\xee\x9c\xf5\x8b\x96\xce\x8b\xe6\x81\x69\x55\x10\xef\x1e\xd3\xce\xe2\x5c\x05\x18\x2f\x2d\x71\x96\x64\x9c\xa9\x65\x62\xe7\xb8\x1a\x4f\x54\x34\xcb\x26\x89\xd7\x9d\x5c\xe3\x6a\xbf\x47\x61\x0b\xd0\xe1\xe0\x01\x57\x27\x15\xc4\x57\xe4\x81\xcc\xbf\xb7\x5f\x01\x00\x00\xff\xff\x6b\xec\xe6\x0e\xef\x04\x00\x00")

func emailconfirmationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_emailconfirmationHtml,
		"emailconfirmation.html",
	)
}

func emailconfirmationHtml() (*asset, error) {
	bytes, err := emailconfirmationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "emailconfirmation.html", size: 1263, mode: os.FileMode(420), modTime: time.Unix(1465910933, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
	"registration.html": registrationHtml,
	"login.html": loginHtml,
	"base.html": baseHtml,
	"error.html": errorHtml,
	"apidocumentation.html": apidocumentationHtml,
	"smsconfirmation.html": smsconfirmationHtml,
	"emailconfirmation.html": emailconfirmationHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"apidocumentation.html": &bintree{apidocumentationHtml, map[string]*bintree{}},
	"base.html": &bintree{baseHtml, map[string]*bintree{}},
	"emailconfirmation.html": &bintree{emailconfirmationHtml, map[string]*bintree{}},
	"error.html": &bintree{errorHtml, map[string]*bintree{}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"login.html": &bintree{loginHtml, map[string]*bintree{}},
	"registration.html": &bintree{registrationHtml, map[string]*bintree{}},
	"smsconfirmation.html": &bintree{smsconfirmationHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

