// Code generated by go-bindata.
// sources:
// index.html
// registration.html
// login.html
// base.html
// error.html
// apidocumentation.html
// smsconfirmation.html
// DO NOT EDIT!

package html

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\xdb\x6e\xdb\x38\x13\xbe\x2f\xd0\x77\x98\xaa\x17\xbe\x89\xa4\x36\xc9\xff\x77\xd1\xda\x5e\x04\x49\x51\x04\x58\xa0\x45\x1d\xa0\xe8\x55\x40\x4b\x23\x91\xa8\x44\xaa\x24\x65\xd7\xd8\x5d\xa0\x0f\xb2\xfb\x72\x7d\x92\x9d\x21\xa5\xda\x8e\x9b\xad\xf7\x84\xc0\x90\x28\xce\xf1\xfb\x66\x86\xcc\xf4\xd1\xd5\xeb\xcb\x9b\xf7\x6f\x5e\x82\xf4\x6d\x33\x7f\xf8\x60\xca\x4f\x68\x84\xae\x67\x09\xea\x24\x7c\x41\x51\xd2\x13\x60\xda\xa2\x17\x24\xe8\xbb\x14\x3f\xf6\x6a\x35\x4b\x2e\x8d\xf6\xa8\x7d\x7a\xb3\xe9\x30\x81\x22\xae\x66\x89\xc7\x4f\x3e\x67\x43\x2f\xa0\x90\xc2\x3a\xf4\xb3\xde\x57\xe9\x0f\x09\xe4\x3b\x86\xb4\x68\x71\x96\xac\x14\xae\x3b\x63\xfd\x8e\xfa\x5a\x95\x5e\xce\x4a\x5c\xa9\x02\xd3\xb0\x38\x01\xa5\x95\x57\xa2\x49\x5d\x21\x1a\x9c\x3d\xcd\x9e\x24\xd1\x92\x57\xbe\xc1\xf9\xb5\x9f\x38\x78\x6f\x7a\x78\xad\x1b\xa5\x71\x9a\xc7\xcf\x41\x82\x3e\x7c\x00\x8b\xcd\x2c\x71\x7e\xd3\xa0\x93\x88\xe4\x4c\x5a\xac\x66\x89\x70\x14\x9b\xcb\x0b\xe7\xf2\xb0\x99\xd1\x5b\x92\xff\x25\xbd\x8a\xa2\x4e\xc5\x1a\x9d\x69\x31\x6b\x95\x3e\x30\x11\x34\x26\x8c\x9a\x7b\x9e\x07\x71\x97\xd5\xc6\xd4\x0d\x8a\x4e\xb9\xac\x30\x2d\xdb\xf9\xb1\x12\xad\x6a\x36\xb3\x77\xd8\x34\x55\x43\xae\x7e\xb9\xb0\x2b\xf3\xfc\xfc\xc9\x93\x93\x67\xf4\xa3\xa7\xf2\xa2\x51\x05\xaf\xe2\xdb\x24\x04\x37\xd9\x06\x37\x01\x4f\x34\xcc\x26\x01\x7d\x32\x39\x89\x41\x04\x81\xf0\x2a\x4f\xe1\x67\xe0\xdd\xd4\x49\x51\x9a\xf5\x73\x38\xed\x3e\x85\xdf\xe3\xb3\x4b\xfe\x7b\x01\xbf\x3e\x7c\x10\x94\xf2\x51\x6b\x9a\x0f\xf4\x4f\x97\xa6\xdc\x8c\xe5\x80\x16\x54\x39\x4b\xe2\xeb\xc0\x44\xa9\x56\x50\x34\x84\xcc\x2c\x19\x98\x8c\x1b\xc3\x16\xcb\x37\xa6\x36\xc9\x7c\x2a\x06\x14\x1f\x27\x73\xb8\xf6\x8e\x78\xcb\x22\x6f\xe4\x57\xcc\xa7\x39\x89\xef\x6a\x0e\x46\x9d\xaa\x75\xba\xb6\xa2\x1b\xcd\xd2\xf6\x68\xc9\x62\xad\x9c\xe7\x50\xa6\x6a\x94\xaf\x04\x54\x22\xed\x1d\xda\xb4\x6b\x7a\x47\x5b\xb9\x9a\xbf\x1d\x04\xd9\xd1\x81\x15\x0a\x4f\xe9\x43\x13\xc1\x71\xd8\x20\x03\x0b\x5a\x50\x31\x6e\xf5\xb7\xe1\x8e\x6f\x11\x32\xb4\x73\xc6\x72\xfa\x28\x4d\x61\xf1\xd3\xf5\xd5\xcb\x05\x2c\x6e\x2e\xde\xde\x40\x9a\xb2\xcc\x08\x89\x6b\x54\x89\x4f\xbf\x0f\xa1\x3c\x9d\x13\x4e\x16\x4c\x04\x8a\x94\x34\xd5\xf8\x86\x7c\x9d\xee\x88\x28\x0d\x9b\x20\xb5\xd6\x20\x85\x2e\xdd\xd7\xfd\x6d\x70\xc3\x73\x2f\x80\xd3\xfb\x03\x80\x6f\x50\xf1\xb1\x37\x1e\xdd\x2d\x8b\x08\x8a\xc6\xee\x30\x22\xcf\xf6\x85\x92\xf9\x40\x6d\x67\xd1\xa1\x2e\x10\x5a\x14\xda\x11\x84\xc4\x82\x28\xbc\x32\x3a\x83\x4b\xd3\x76\x42\x2b\x74\xa0\x11\xcb\x98\xc2\x98\x21\xac\xa5\x2a\x24\x7f\x1b\x4c\x78\xd2\x85\x52\x55\x15\x5a\x5e\xac\xc5\xc6\x9d\x40\x89\x1d\xea\x52\xe9\x9a\x00\x02\x2f\x91\x86\x09\x9b\xdc\x9c\x40\x87\xd6\xd1\x37\x63\xe3\x7c\xf9\xe4\x33\xc2\xe4\xec\x4f\xc8\xfb\x16\x3e\xff\x3b\x96\x20\xf6\xdb\xf6\x5a\x15\xc2\x23\x98\x15\xf5\xc9\x4a\x58\x65\x7a\xc7\x83\x50\x6b\x6c\x1c\x10\x2d\x87\xac\x6d\xf3\x19\xa2\x74\xb0\xec\x29\x53\x9e\x6b\xa2\xe1\x1c\x19\x81\x23\xd9\xfc\xff\x7f\xc8\xe6\x97\xcf\xbf\xdd\x48\x8c\x18\xbf\xb2\x4a\x13\x35\x5e\x9a\xbe\x96\x1e\x4c\x05\x3c\x04\xbd\x64\x1a\x68\x9b\x66\x8c\x9e\x78\x58\x62\x65\x2c\x3e\x82\x77\x52\x50\x42\x15\x5c\x4a\x4b\x2d\xd8\x0a\x62\x8d\x84\x06\x65\x62\xd0\xa0\x23\xf1\xd1\x35\x30\x92\x08\x95\x35\x2d\x08\x70\x9e\x4c\x64\x87\x26\xb2\x2c\x63\x82\xa5\xe8\xc2\x6b\x2c\x2d\x01\x8d\xf2\x34\xfe\x61\xa9\x3c\xb4\xec\xfb\xcb\xe7\xdf\x77\x48\xa7\xbc\x54\x5b\x83\xb3\xc5\xd7\x41\x4e\xeb\xbc\xb4\xa9\xc3\xde\xb9\xac\xd3\x75\x42\xa0\x53\xa3\xd3\x48\xc0\xca\x0f\xd3\x3c\x02\x72\x3e\x02\x22\x7a\x0a\xdd\xde\xf2\x21\x76\x5b\x5b\xb1\x49\xe6\x57\x36\x83\x05\x5b\x20\x7a\xe4\xf9\x56\x67\x69\xf3\x7b\x16\x87\xf0\x5e\xe8\xdd\xc2\x27\x9c\xb7\xf5\xc4\xa8\x2a\xea\x10\xe3\x41\x2c\x0d\x15\x47\x28\xf3\x58\x55\x5c\xde\xbc\xec\xac\x59\x91\xbe\x3d\x19\x2a\x27\xc8\xad\xa5\x09\xed\x23\x2c\xc1\x2d\x9a\x0f\x6c\xc8\x1b\xee\xa2\xd8\x5a\xff\xa0\x2f\xce\x8e\xea\x8b\x85\x64\xd7\x7d\xc7\x5e\x4b\x6e\x0c\xa5\xa9\x24\x5a\xc1\xcd\x7f\xa7\x15\xb8\xe8\x69\xc4\x6d\x40\x38\x68\x7b\x0a\x4e\x84\xc2\xa7\x2e\xd7\xfe\xc8\xea\x3f\x3f\xee\x3c\xfa\x3b\xc5\x7f\x65\x62\x41\x83\xa8\xac\x50\x25\xe7\xe3\xa4\x59\xc7\x81\x55\x09\x1a\x6e\x34\x72\xda\x50\xaa\x31\x67\xe6\x64\x27\xd9\x98\x8a\x72\x32\x6a\x06\x09\xc3\xe5\x8d\x96\xef\x3a\x5f\xe9\xe3\x19\xc1\x6e\x5c\x4f\x12\x71\xa0\x93\x25\xbb\x67\x8a\x4a\xc1\x89\x0a\x8f\x63\x6d\xe7\x0c\x0e\x18\x3d\xfb\x16\x14\x77\x50\xba\xbb\x4d\xd4\x78\xa3\xd3\x02\x79\x72\xc7\x6b\x44\x7c\xdf\x55\xd8\x57\x29\x4d\xb1\xbf\x19\x0e\x5b\x2f\x6c\x4d\x37\xc2\xe4\x76\x49\xd7\xcc\x0f\xc9\xf6\x32\xb0\x2f\x09\x70\x65\x8a\xbe\x25\x17\x21\xe1\x3b\x66\x76\xce\xef\xfd\xd4\xef\x89\x83\xe6\x4b\x71\x7a\x74\x30\x74\x33\x2b\x77\x9d\x1f\xc6\x76\xf1\xe6\xfa\x5f\x8f\xef\xec\xe8\xf8\xc6\xdb\x64\xad\xbc\xec\x97\xe1\x0e\xa9\xbc\xa3\x4a\x89\xd7\x83\xc3\x70\xa7\x8e\x4e\xc3\xd1\x5d\xd4\x4a\xf9\x76\x7a\x28\x09\xb0\xa0\x82\x2b\xf8\x04\x2d\x91\x4f\xd3\x57\x41\xfa\xc0\x60\xce\x16\xef\xc6\xfb\x9d\xac\xf7\xae\x76\xf7\x8f\x98\x7c\xbc\x6a\xe6\xc3\x3f\x25\x7f\x04\x00\x00\xff\xff\xa5\xdd\xaf\x8b\xa6\x0c\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 3238, mode: os.FileMode(509), modTime: time.Unix(1463480440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _registrationHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x51\x4f\xdc\x38\x10\x7e\xdf\x5f\xe1\xf3\xcb\xbe\xe0\x98\x93\x0e\x81\x96\xcd\x9e\x10\x77\x95\xfa\x44\x05\x54\x15\x6a\x2b\x64\x9c\x49\xd6\x8b\x63\x07\x7b\x76\x61\xd5\xf6\xbf\x77\x9c\x10\x1a\x56\x2d\x02\xb1\x44\x42\xc9\x8c\xbf\xef\x1b\xcf\x30\x1e\xef\xf4\xaf\xff\x4e\x8e\xcf\x2f\x3e\xfc\xcf\xe6\x58\xdb\xd9\x68\x9a\x5e\xcc\x2a\x57\xe5\x1c\x1c\x4f\x0e\x50\xc5\x6c\xc4\xe8\x99\xd6\x80\x8a\x70\xd8\x08\xb8\x59\x9a\x55\xce\x8f\xbd\x43\x70\x28\xce\xd7\x0d\x70\xa6\x3b\x2b\xe7\x08\x77\x28\x93\xd0\x21\xd3\x73\x15\x22\x60\xbe\xc4\x52\x1c\x70\x39\x14\x72\xaa\x86\x9c\xaf\x0c\xdc\x36\x3e\xe0\x80\x7e\x6b\x0a\x9c\xe7\x05\xac\x8c\x06\xd1\x1a\x3b\xcc\x38\x83\x46\x59\x11\xb5\xb2\x90\xff\x9d\xed\xf2\x7b\x29\x34\x68\x61\x76\x0a\x95\x89\x18\x14\x1a\xef\x98\x60\xef\x71\x1c\xd9\x85\x5f\xb2\x13\x67\x8d\x83\xa9\xec\x50\x1d\x83\x3c\xd7\x2c\x80\xcd\xc7\x11\xd7\x16\xe2\x1c\x00\x59\x13\xa0\x04\xd4\xf3\x71\x8b\xe9\x9e\x39\xf9\xf2\x71\xca\x37\x4e\xa4\x54\x0b\x75\x97\x55\xde\x57\x16\x54\x63\x62\xa6\x7d\xdd\xfa\xa4\x35\x57\x51\x52\xc1\x96\x56\x85\xcb\x5a\x21\x04\xda\xa8\xa4\x2d\x66\xfb\xbd\x5b\xf4\xee\xac\x36\x2e\xd3\x31\x8e\x37\xf7\xc2\x7f\xed\x85\x77\x81\xb9\x8a\x54\xb8\x28\x09\x2d\xdb\xc5\xc4\x7b\xa8\xe0\x33\x89\x25\xd5\x54\xa8\x5b\x88\xbe\x86\x3e\xf6\x63\x8d\xc7\x49\x26\x7c\xdc\xcc\x92\x38\xff\x96\xaa\x36\x76\x9d\x7f\x02\x6b\x4b\x4b\xb1\xbe\x1f\x85\x95\x9f\xfc\xb3\xbb\xbb\xb3\x4f\x7f\xf4\x36\xa8\xac\xd1\xc9\xea\xbe\xc6\x9b\x25\x1e\x56\x16\xa9\x5f\xf2\x71\xdb\x26\x83\x62\xb4\xd8\xd9\xe8\x01\xf7\xd9\x55\x5f\x26\xda\x7a\x75\xfd\x75\x27\x19\xa2\xff\xce\xfa\x6f\xf6\x6d\x20\xca\x58\x61\x62\x63\xd5\x7a\xc2\x9c\x77\x70\xf8\xb0\xf4\xa3\x93\x97\xf7\xfa\x53\xd9\xb5\xf4\x68\x7a\xe5\x8b\x35\x23\x2d\xd5\x34\x39\x0f\x83\x16\x3a\x6a\x1a\x9e\x16\xc8\x36\x1a\x45\x61\x12\xda\x60\x14\x6b\xbf\x14\xbe\xed\x29\x91\x44\x20\xb0\x8e\x06\x61\x36\x95\xbf\x05\x24\x66\x61\x56\x4c\x5b\xfa\xb7\xe4\xbc\x5c\x5a\x1b\x75\x00\x70\xa5\x0f\x75\x1b\x24\x9d\x00\x62\x13\x28\x61\x69\xd1\x34\xc8\x62\xd0\x2f\x6c\xbd\x45\xa4\x9e\xdb\xcb\xf6\x7a\x3b\x5b\x50\x61\x29\xe9\x56\x6f\xb6\x45\x61\xa1\x9c\x49\xfd\xdc\xf6\xd3\x9b\x05\xa9\x21\x46\x55\x41\x7c\xdb\x28\xc1\x2f\xdf\x3a\x11\x45\xe7\x7e\xab\x11\x9e\x35\x63\xfe\x1c\x8c\xe3\xdc\x84\xa2\x51\x01\xd7\xf7\x83\xe2\x26\x68\x5f\x80\xa8\xc0\x01\xb5\xbf\x0f\x72\xd1\xfb\x48\x86\x6f\x41\xe6\xf2\xe3\xf9\xbb\x83\x17\x69\xf5\x39\x75\xfc\x0d\xf3\x29\x25\xaa\x58\x43\x87\x9f\xa6\x98\x8c\x74\xf5\x40\x21\xe9\x5a\x29\x4d\x75\x06\x21\x5d\x27\x2f\xa3\x16\x26\x80\x46\xb3\x82\x28\xbb\xc3\xfc\x4c\xfa\x70\x94\xc8\x8d\xb9\xf2\x5a\x89\x74\xe5\x06\x6f\xed\xeb\x37\x73\x56\xc7\xed\x89\x9d\x42\x04\x57\x3c\x29\x29\xd3\xb8\x6d\xc7\x6f\xfb\x4b\xe3\x67\x00\x00\x00\xff\xff\x42\xdc\x61\x76\x7a\x08\x00\x00")

func registrationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_registrationHtml,
		"registration.html",
	)
}

func registrationHtml() (*asset, error) {
	bytes, err := registrationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "registration.html", size: 2170, mode: os.FileMode(436), modTime: time.Unix(1464871448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loginHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\x51\x6f\xd3\x30\x10\x7e\xef\xaf\x30\x7e\xc9\xcb\x1c\x0f\x89\x69\xa8\x4b\x82\xa6\xc1\x03\x12\xd2\x90\x98\x84\x26\x40\xc8\x73\x2e\xa9\x3b\xc7\x0e\xb6\xd3\xad\x02\xfe\x3b\x67\x67\x19\xdd\xc4\xc6\x46\x47\xa5\x2a\xf6\xf9\xbb\xef\x7c\x5f\x3e\x3b\xc5\xb3\xd7\xc7\x47\x27\xa7\xef\xdf\x90\x45\xe8\x74\x35\x2b\xe2\x83\x68\x61\xda\x92\x82\xa1\x31\x00\xa2\xae\x66\x04\x7f\x45\x07\x41\x20\x2e\xf4\x0c\xbe\x0d\x6a\x55\xd2\x23\x6b\x02\x98\xc0\x4e\xd6\x3d\x50\x22\xc7\x59\x49\x03\x5c\x06\x1e\x89\x0e\x88\x5c\x08\xe7\x21\x94\x43\x68\xd8\x4b\xca\x37\x89\x8c\xe8\xa0\xa4\x2b\x05\x17\xbd\x75\x61\x23\xfd\x42\xd5\x61\x51\xd6\xb0\x52\x12\x58\x9a\xec\x10\x65\x54\x50\x42\x33\x2f\x85\x86\xf2\x79\xbe\x4b\xaf\xa8\x82\x0a\x1a\xaa\x77\xb6\x45\x08\x61\xe4\x6d\xc8\x3c\x39\xb5\x03\x39\x36\x5a\x19\x28\xf8\xb8\x3e\x1b\xc1\x18\x3a\x27\x0e\x74\x99\xf9\xb0\xd6\xe0\x17\x00\x81\xf4\x0e\x1a\x08\x72\x91\x25\xcc\xf8\x5b\x60\xac\xcc\x62\xab\x7e\xce\xb9\x58\x8a\xcb\xbc\xb5\xb6\xd5\x20\x7a\xe5\x73\x69\xbb\x14\xe3\x5a\x9d\x79\x8e\x5a\x0d\x5a\xb8\xaf\x9d\x08\xe0\x70\x8f\x1c\x77\x97\xef\x4f\x61\x36\x85\xf3\x4e\x99\x5c\x7a\x9f\x55\xb7\xf6\x42\x7f\xef\x85\x8e\x85\xa9\xf0\xa8\x99\xe7\x88\xe6\x69\x31\xe6\x5d\x8b\xf7\xc0\xc4\x06\xe5\x64\xe2\x02\xbc\xed\x60\xaa\x7d\x93\xe3\x66\x93\x11\xef\x6f\x77\x89\x39\xaf\x1a\xd1\x29\xbd\x2e\x3f\x82\xd6\x8d\xc6\x5a\x3f\x0e\xdd\xca\xce\x5f\xec\xee\xee\xec\xe3\x1f\x9f\x2a\x08\xad\x64\x9c\x8d\xa3\xec\xb6\xc4\x9b\xca\x06\xb4\x4a\x99\x25\x87\x6c\x88\x91\xb0\xd5\x35\xec\x93\x69\x3f\xcf\xa5\xb6\xe2\xfc\xcb\x4e\x9c\xb0\x69\x9c\x4f\x63\xf2\x7d\x83\x93\x90\x5a\xf9\x5e\x8b\xf5\x9c\x18\x6b\xe0\xe0\x7a\xe9\xe7\xc8\xce\xaf\xe8\x0b\x3e\x9a\x79\x56\x9c\xd9\x7a\x4d\x90\x4b\xf4\x7d\x49\xb5\x6d\x95\x39\xec\x7b\x1a\x23\x3e\x38\x25\x03\xab\x15\xc2\x55\xf0\x6c\x6d\x07\x66\x93\x97\x58\x4c\x06\x47\x12\xbc\x2a\xf8\x1f\x57\x23\x79\xad\x56\x44\x6a\x7c\x15\x25\x6d\x06\xad\xbd\x74\x00\xa6\xb1\xae\x4b\x05\xa2\xe1\x31\x1b\x41\x88\x9d\x15\xb8\xaa\xfa\x40\xbc\x93\x8f\xf4\xdb\xd2\xa3\xd1\xf6\xf2\xbd\x69\x9e\x2f\x51\x4d\x6c\x35\xf1\x55\x4f\x48\xcc\x84\x51\xd1\xc4\xc9\x44\x77\x17\xa1\xdb\x15\x71\x76\xc0\x12\x4b\x4f\xff\x4f\x0f\x1d\x78\x2f\x5a\xf0\x7f\x69\x62\x5b\xa5\xf0\xa0\x3f\x69\x85\x07\x5d\x2a\xf7\xbc\x13\x24\xed\xf1\x44\xe0\xc9\xe6\x1e\x6f\x62\xa8\xd1\x77\x0e\x64\x50\x2b\xf0\x7c\x74\xec\x3d\x9a\x6f\xa6\x27\xd7\xf3\xe9\xa8\x3c\x3e\x29\x7e\x2a\x9c\xd5\xfa\x5f\x0a\x9e\xd8\xd0\x6f\x93\xff\xa1\xf3\x77\xa7\xf3\x78\x17\xa4\xbb\x21\x7d\x00\x7f\x05\x00\x00\xff\xff\x5e\xac\xc1\x72\x11\x07\x00\x00")

func loginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_loginHtml,
		"login.html",
	)
}

func loginHtml() (*asset, error) {
	bytes, err := loginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "login.html", size: 1809, mode: os.FileMode(436), modTime: time.Unix(1464871448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\xdf\x6f\xd3\x30\x10\x7e\xdf\x5f\x61\xf2\xc2\xcb\x12\x0f\x89\x69\xa8\x4b\x8a\xa6\x8d\x87\x3d\x0d\xc1\x10\x9a\x00\x21\x2f\xbd\xa6\xde\x1c\xdb\xf8\x2e\xdd\xc2\x8f\xff\x9d\x73\xd2\x4c\xdd\x80\x6a\x41\x6b\xa4\x2a\xf6\xf9\xbe\xef\xb3\x2f\x9f\xed\xe6\xcf\x4e\xce\x8e\xcf\x2f\xde\xbe\x11\x0b\xaa\xcd\x74\x27\x8f\x2f\x61\x94\xad\x8a\x04\x6c\x22\x6c\x95\x2a\xef\x8b\x44\x13\xb6\xae\x71\xd6\x68\x0b\x47\xde\x77\x03\xa5\x71\xea\x3a\x42\x40\xcd\xa6\x3b\x82\x9f\xbc\x06\x52\xcc\x44\x3e\x85\x6f\x8d\x5e\x16\xc9\xb1\xb3\x04\x96\xd2\xf3\xd6\x43\x22\xca\xbe\x57\x24\x04\xb7\x24\xa3\xd4\xa1\x28\x17\x2a\x20\x50\xd1\xd0\x3c\x7d\x95\xc8\x15\x11\x69\x32\x20\xbc\xaa\xa0\x6b\x4d\x4f\xe9\x39\x8a\x0b\xd7\x88\xb3\x6e\x0a\xb9\xec\xc3\x7d\x32\x47\xae\x45\x00\x53\x24\x48\xad\x01\x5c\x00\x90\xf0\x01\xe6\x40\xe5\x22\xe9\x72\xfa\x67\xc1\xb1\x22\x89\xf3\xc3\x89\x94\xea\x4a\xdd\x66\x95\x73\x95\x01\xe5\x35\x66\xa5\xab\xbb\x98\x34\xfa\x12\x25\x97\xa0\x31\x2a\x7c\xad\x15\x41\xd0\xca\xc8\x17\xd9\x5e\x76\x30\x84\xd3\x21\x9c\xd5\xda\x66\x25\x62\xb2\x61\x2e\xc9\x4a\x58\x21\x2f\x14\x25\x67\xcb\x6e\xb0\xc3\xc9\x71\xc0\x39\x97\x30\x55\x37\x80\xae\x86\x3b\xed\x7b\x1c\xf7\x17\x19\xf3\xf1\xe1\x2a\x19\xf3\x7a\xae\x6a\x6d\xda\xe2\x23\x18\x33\x37\xac\xf5\xf3\x28\x2c\xdd\xe4\xe5\xde\xde\xee\x01\xff\xf8\xad\x49\x19\x5d\xc6\x5e\xdf\x4a\xfe\x98\xdd\x5a\x65\x89\xbf\xef\xea\xb3\xae\x15\xa3\xcb\x9d\xde\xa5\x7d\xb2\xd5\xe7\x49\xe7\x9a\x2f\xbb\xb1\x93\x0e\xed\x6c\x68\x8b\x1f\x6b\x9c\x42\xcc\x34\x7a\xa3\xda\x89\xb0\xce\xc2\xe1\xdd\xd0\xaf\x9e\x5d\xae\xe8\x73\xd9\x3b\x70\x27\xbf\x74\xb3\x36\xbe\xd9\xad\x29\xdb\x35\xed\xfd\x9a\xc6\x61\x08\xd3\x5c\xfe\x3d\xce\x80\x99\x5e\x46\x47\x2f\x35\xdc\x70\x1a\xf7\x62\x10\xcb\xa0\x3d\x09\x0c\xe5\x48\xcf\x5c\x21\x9b\x65\x3f\xdb\x1f\xfa\xd9\x15\x57\x84\xa7\xdb\xf1\x4d\x9f\x90\x38\x0d\xae\x21\xd8\x1e\x7d\x0d\x88\xbc\x05\xb1\x33\xda\xd6\x54\x94\xd5\x71\x37\x6d\x59\x84\x37\xeb\x76\x15\x4a\xe7\xae\xf5\x13\xd7\xea\x51\xa7\xcf\x06\x31\x26\xf5\xbc\x75\xf8\x08\x90\xc8\xe7\x2c\xcc\xd8\xdb\x01\x4a\xd2\x4b\x40\xd9\xdb\x7f\x13\x9c\x16\x3a\xcc\xbc\x0a\xd4\xae\x4e\xa0\x0f\xef\x4e\xc7\xc9\xf1\x89\x3f\xd7\xd5\x7b\x08\x4b\x5d\x6e\x34\xea\x1a\x94\x2f\x9c\x47\x66\x36\x08\x61\x7d\x45\xaa\xa1\x85\x0b\xfa\xbb\x22\xed\xec\x09\xdf\x45\xda\xe0\xc9\x30\x3c\x86\x73\x20\x82\x78\x7f\x05\x67\xcc\xe6\x3a\x3d\x84\x97\xff\x85\xc2\x51\x55\x72\xa1\xe2\x8d\xd3\x2f\x75\xbc\xe0\x3d\xf4\x38\xe1\xd8\x54\xb6\x1d\xaf\x39\x00\xff\x21\x27\xfb\xd3\x3b\x97\xfd\x3f\x91\xdf\x01\x00\x00\xff\xff\x32\xc6\x8b\x3c\x9a\x08\x00\x00")

func baseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_baseHtml,
		"base.html",
	)
}

func baseHtml() (*asset, error) {
	bytes, err := baseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base.html", size: 2202, mode: os.FileMode(436), modTime: time.Unix(1464872557, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _errorHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xdf\x6b\xdb\x30\x10\x7e\x1f\xec\x7f\xb8\x6a\x0f\x7e\xa9\xa3\xac\xdb\xe8\xe8\xec\x8c\xd2\x96\x11\x18\xb4\x2c\x81\xd1\xa7\xa2\xd8\x17\x5b\x54\x96\x5c\xeb\xdc\x2e\xb0\x3f\x7e\xe7\x5f\x6d\x9c\x74\xb4\x83\x3d\x18\x9d\x74\xdf\x7d\xf7\xf9\x93\xcf\xd1\xc1\xf9\xe5\xd9\xf2\xfa\xea\x02\x72\x2a\xcc\xec\xed\x9b\xa8\x59\xc1\x28\x9b\xc5\x02\xad\x68\x4f\x50\xa5\xbc\x02\x44\x05\x92\x62\x20\x95\x21\xde\xd5\xfa\x3e\x16\x67\xce\x12\x5a\x0a\x97\x9b\x12\x05\x24\xdd\x2e\x16\x84\xbf\x48\x36\x44\x5f\x20\xc9\x55\xe5\x91\xe2\x9a\xd6\xe1\x67\x01\xb2\x23\x22\x4d\x06\x67\x73\x0a\x3c\x5c\xbb\x1a\x2e\xad\xd1\x16\x23\xd9\x1d\xb7\x08\x3e\xb8\x85\x0a\x4d\x2c\x3c\x6d\x0c\xfa\x1c\x91\x04\xe4\x15\xae\x63\xa1\x3c\x33\x7a\x99\x78\x2f\xdb\xe4\x84\x23\x21\xff\xa9\x6e\xcd\x52\x43\xf5\x80\xde\x15\x38\x29\xb4\xdd\xa3\x68\x2b\x82\xe6\x5d\xfd\x89\x6c\xe1\x7e\x92\x39\x97\x19\x54\xa5\xf6\x93\xc4\x15\x0d\xcf\xd7\xb5\x2a\xb4\xd9\xc4\x3f\xd1\x98\xb5\xe1\x56\xbf\x4f\xab\x7b\x77\xf2\x71\x3a\x3d\x3c\xe6\x87\x57\x4d\xca\xe8\xa4\xd9\x75\x51\xd0\x8a\x0b\x9e\xc4\x05\x40\x6c\x5e\x1c\xb4\x9e\x31\x65\xd0\x58\x2e\x7b\xcf\xa3\x95\x4b\x37\xc3\x1d\x60\x05\x3a\x8d\x45\x17\x8a\x4e\x6b\xaa\xef\x21\x31\xfc\x62\xb1\xe8\xdd\xef\x12\x7d\xaa\xc1\x1b\x97\x39\x31\x8b\x54\x6f\xc2\x44\x8a\x19\xcc\xc9\xb3\xef\x93\xce\x77\x88\xa4\x9a\x45\x92\xf1\x1d\x67\x1f\x75\x22\xb0\xe2\x90\x37\x07\x61\x08\x8b\xef\xf3\xf3\x8b\x05\x2c\x96\xa7\x3f\x96\x10\x86\x0d\x66\x68\xe2\x8d\x4e\xf1\xfd\xcb\xa2\xf2\xa3\xd9\xa7\xe9\x94\xa9\x8f\xb6\x4e\x2e\x5d\xe9\x0f\x81\x72\xed\xe1\x41\x79\xb0\x8e\xc0\xd7\x65\xe9\x3c\xa6\x40\x0e\x72\x55\x96\x68\x1f\x6b\x9e\xf4\x3d\x2a\x1e\xa9\x38\x1e\x39\xf0\xbc\x8e\x71\xf2\xae\x76\x84\xfe\xa6\xc1\x28\xf6\xa3\x7a\x42\x8d\x71\xab\x9a\xc8\xd9\x30\x61\x22\xbe\x8b\xe6\xc2\xfa\x78\xbb\x60\x5c\x92\xba\x64\x9c\xe4\xb4\x02\x52\x55\xc6\x33\x21\x6e\x56\x3c\x68\xb7\xc3\xe7\xf9\x6e\x17\x09\x70\xee\x92\xba\xe0\x16\x8a\xb4\xb3\x3b\x34\x7c\x69\xa3\xae\x8f\x76\xfc\x45\x07\xf0\x73\xf4\x6a\x31\xfc\x95\xa7\xdb\xcd\xf7\xb5\x9d\x5e\xcd\xff\xbb\xbe\x0f\xaf\xd6\x37\x4c\x66\xa6\x29\xaf\x57\xed\x3c\x6a\xf2\x1b\x57\xbb\xf6\x9b\xde\x97\x1b\xf9\x52\xd9\xa1\x5d\x57\x15\x36\x93\xbe\x8f\x04\x58\xb8\xba\x4a\x90\xff\x67\x29\x82\xb3\xf0\xad\x45\xef\x11\xca\x86\x71\x57\xef\x0b\x6f\x3d\xde\x6f\xef\x9e\x1b\xc0\x61\x1d\xfe\x02\xb2\xff\x49\xff\x09\x00\x00\xff\xff\x1c\x94\x6c\xce\xb6\x05\x00\x00")

func errorHtmlBytes() ([]byte, error) {
	return bindataRead(
		_errorHtml,
		"error.html",
	)
}

func errorHtml() (*asset, error) {
	bytes, err := errorHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "error.html", size: 1462, mode: os.FileMode(436), modTime: time.Unix(1460547626, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apidocumentationHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x56\x51\x6f\xdb\x36\x10\x7e\x9e\x7f\xc5\x95\xdb\xe0\x16\x88\x24\xb7\x48\xd1\xcc\x96\x34\x14\xd9\x1e\xf2\xb2\xee\xa1\xc0\x50\x6c\xc3\x40\x4b\x27\x89\x0b\x45\x6a\x24\x15\x47\xdd\xf6\xdf\x77\xa4\x62\x47\x8a\x9d\xa2\xe8\x4b\x57\x01\x89\xa8\xe3\xdd\x77\xdf\x1d\xef\x8e\x4e\x9f\xfc\xf0\xe6\xf2\xed\xbb\x9f\x7f\x84\xc6\xb5\x32\x5f\xa4\xfe\x05\x92\xab\x3a\x63\xa8\x58\xbe\x00\x48\x1b\xe4\x65\xbe\xf8\x0a\x68\xd9\xa2\xe3\xa4\xe9\xba\x08\xff\xea\xc5\x4d\xc6\x2e\xb5\x72\xa8\x5c\xf4\x76\xe8\x90\x41\x31\x7e\x65\xcc\xe1\xad\x4b\x3c\xd4\x06\x8a\x86\x1b\x8b\x2e\xeb\x5d\x15\x5d\x30\x48\x3c\x64\x78\x52\x27\x9c\xc4\xfc\xca\x2d\x2d\xbc\xd3\x3d\xbc\x51\x52\x28\x4c\x93\x51\xbc\x38\xa8\x91\xf4\x1a\x0c\xca\x8c\x59\x37\x48\xb4\x0d\xa2\x63\xd0\x18\xac\x32\xc6\x2d\x41\xdb\xa4\xb0\x36\x09\x9b\x31\xad\xd8\xc4\xc5\x47\xda\x56\xc4\x3b\xe2\x3b\xb4\xba\xc5\xb8\x15\xea\x24\x4c\xb0\x5a\xfa\xe0\xed\x3a\x09\x26\x36\xae\xb5\xae\x25\xf2\x4e\xd8\xb8\xd0\xad\xc7\xfa\xbe\xe2\xad\x90\x43\xf6\x0b\x4a\x59\x49\x72\xf7\xcf\x6b\x73\xa3\xd7\xe7\xab\xd5\xd9\x2b\xfa\xa3\xb7\x70\x5c\x8a\xc2\x7f\x8d\xab\x65\x20\xb8\xbc\x27\xb8\x04\x47\xd9\xcc\x96\x21\x89\x04\xb9\x3c\x10\x81\x34\x68\xdd\x27\x27\x3c\xbf\xaa\xfa\xb7\x75\x21\x35\xbf\xfe\xfd\xcc\x7f\x44\xfb\x75\xbc\x5f\xc3\xdf\x33\x03\xff\x94\xc2\x76\x92\x0f\x6b\x50\x5a\xe1\x66\xb6\xfd\xef\x1c\x3e\xae\x7a\x29\x6d\x61\x10\x55\xa9\x8b\xbe\xa5\x03\xe6\x4e\x68\x75\x04\x2a\xb1\x72\x6b\x58\x6d\x1e\x88\x8d\xa8\x9b\x53\xf2\xf7\x91\x50\x25\xde\x1e\xed\xb4\xdc\xd4\x42\x45\x4e\x77\x6b\x78\xbe\xea\x6e\x1f\x92\x9b\x71\x13\xce\x0e\xba\xd7\xa1\x74\x7c\x9d\xa2\x39\x11\xeb\x4e\x94\xae\xf1\x60\xab\x6f\x37\xb0\xe5\xc5\x75\x6d\x74\xaf\xca\x35\x98\x7a\xcb\x9f\x9e\x5f\x9c\xc1\xf3\xf3\x97\xf4\xef\xe2\xd5\x19\xac\xe2\xef\x5e\x3c\xdb\x40\x83\x23\xeb\x0b\x4f\x00\x36\x07\xae\x2f\x36\x33\x7a\x2f\x3f\x4c\xef\x6b\xc3\x5b\xf9\xc7\x87\xb3\xf6\xe0\x28\xe0\x31\xbc\x34\x79\x78\xf6\x93\xb2\x64\x54\x82\x33\x37\xa3\xb2\x4d\x48\x1e\x51\x57\x5a\x2d\x31\x92\x3e\xa4\xc8\x35\xd8\x8e\x7d\x72\xdc\x18\x85\xa4\xa6\xa0\xee\xf5\x2a\xbe\xf7\xd3\x64\xec\xfd\x45\xba\xd5\xe5\x00\x54\x4e\xbc\xeb\x32\xe6\xa3\xba\x1c\x41\x5f\x77\xdd\xc1\xcc\x8b\x0f\xce\xbc\x01\x03\x6f\x5a\x8a\x9b\xbd\xc6\xf1\x69\x8d\x13\x66\xa2\x72\x37\x42\xd8\x58\xf3\x61\x47\x94\x19\x93\xba\xd6\x2c\x4f\xf9\x5d\xb8\x71\xc2\x72\xb8\x72\x96\xe6\x46\x3c\xce\x0d\xe2\xca\xf3\x34\x21\xfd\x80\x38\x2e\xee\x5e\x73\x12\x8f\x94\xf3\xc4\xe3\xa4\xdf\xa6\x31\x81\x35\x45\xc6\x92\xa3\x54\x7b\x9d\xa4\xb7\x68\x6c\xec\x97\xcc\x1f\x28\xdf\x52\x0e\x42\x1e\x23\xbb\x13\xae\x68\xa8\x30\xf7\xe2\x11\x53\x0a\x3f\x37\x6b\x54\x68\xb8\xd3\xf7\xbb\x61\xfc\xd1\xd1\x58\xdd\x9b\x02\x2d\x39\x97\x92\x77\x16\x4b\x8a\x6e\xca\x66\x42\xf2\x49\x14\xc1\x4f\x9a\xe2\xeb\x11\x76\xcd\x00\xdb\xde\x01\xf9\x06\xaf\x0e\x7b\xf2\x94\xf5\x81\x60\xa9\x8c\x8d\x85\xce\xe8\x0e\x0d\x09\x44\x05\x57\x40\x23\xa2\x0c\x06\x21\x08\xa0\xe8\xc0\xed\x44\x81\x10\x45\x13\x2f\x3e\x85\xa1\x58\x32\x36\x1f\x1e\x2c\x9f\x95\xec\x97\x91\xb3\xe4\x13\xcf\x59\x9b\x9a\x2b\xf1\x3e\x48\x3e\x17\xf7\x8f\x26\x4b\x77\x52\x47\x6c\xf1\x0b\x20\xaa\x9c\xe1\x85\xfb\xdf\x13\xf5\x25\xfb\x19\x4b\xe0\x30\xd1\xee\x27\x1b\x8d\x32\xd1\xb9\xc7\x48\x8f\xbb\xf3\x7b\xe0\xc6\x4f\x3e\x13\xff\x69\x69\xa0\xde\x29\xe4\x9f\x80\x73\x1a\xc0\x27\xf5\x9b\x58\x69\xba\x1f\x2a\xfa\x71\xe3\x9e\x3e\xdb\x2c\x26\x4a\x89\xbf\x17\xfc\x7b\xfc\xb9\xf9\x5f\x00\x00\x00\xff\xff\x8e\x41\x17\xc0\x7f\x0a\x00\x00")

func apidocumentationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_apidocumentationHtml,
		"apidocumentation.html",
	)
}

func apidocumentationHtml() (*asset, error) {
	bytes, err := apidocumentationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apidocumentation.html", size: 2687, mode: os.FileMode(436), modTime: time.Unix(1460547626, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _smsconfirmationHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\x6e\x9c\x30\x10\xbe\xef\x53\xb8\x8e\xa2\x6d\xa5\x82\x37\x95\x2a\x55\x04\x73\x49\x7b\xc8\x29\x3d\xe4\x92\xa3\x17\x06\x98\xc6\xd8\xd4\x1e\x76\xb3\x5d\xed\xbb\xd7\xfc\x34\x81\x55\x52\x55\xf5\x01\x86\xf9\xfb\xbe\x99\xf1\x90\xbe\xfb\x7a\x77\x73\xff\xf0\xfd\x1b\xab\xa9\xd1\xd9\x2a\xed\x5f\x4c\x2b\x53\x49\x0e\x86\xf7\x0a\x50\x45\xb6\x62\xe1\xa4\x0d\x90\x0a\x7e\xd4\x46\xf0\xb3\xc3\x9d\xe4\x37\xd6\x10\x18\x8a\xee\x0f\x2d\x70\x96\x8f\x5f\x92\x13\x3c\x91\xe8\x13\x5d\xb3\xbc\x56\xce\x03\xc9\x8e\xca\xe8\x0b\x17\xf3\x44\x46\x35\x20\xf9\x0e\x61\xdf\x5a\x47\xb3\xf0\x3d\x16\x54\xcb\x02\x76\x98\x43\x34\x7c\x7c\x64\x68\x90\x50\xe9\xc8\xe7\x4a\x83\xbc\x8a\x37\x7c\x4a\x45\x48\x1a\xb2\x5b\x5a\x7b\xf6\x60\x3b\x76\x67\x34\x1a\x48\xc5\xa8\x1e\x5d\x82\xe6\x91\x39\xd0\x92\x7b\x3a\x68\xf0\x35\x40\x80\xab\x1d\x94\x92\x2b\x1f\xd8\x79\x91\x7b\x2f\x06\x63\x1c\xa4\x67\x9a\xff\x18\x58\x06\xe2\x91\xda\x83\xb7\x0d\xc4\x0d\x9a\x45\x8e\x21\x72\x94\xfb\x13\x87\x2a\x4b\x74\x8d\x22\xb4\x26\x6a\x55\x05\xec\xf8\x6c\xec\xcf\x50\x6f\xc2\xae\x36\x9b\xcb\xeb\x85\x61\xab\xf2\xc7\xca\xd9\xce\x14\x09\xeb\x9c\x7e\xbf\x9e\x18\x60\x53\x89\x6d\x15\xb7\xa6\x5a\x7f\x58\x46\xe4\x56\x5b\x97\xb0\x8b\xb2\x2c\x97\x86\x1a\xb0\xaa\x69\x00\xd9\xd5\x4b\x53\xa3\x5c\x85\x26\x61\x9b\x17\xf5\x69\xf5\x37\xf6\xbd\x8a\x54\xe8\xb9\x3b\x2b\xa4\x40\xdf\x6a\x75\x48\x58\xa9\xe1\x69\x09\xf2\xa3\xf3\x84\xe5\x21\x9a\x26\x9e\xb0\x3c\x3c\xc1\x2d\x9d\x94\xc6\xca\x44\x48\xd0\xf8\xd7\x1d\xde\xec\xd4\xac\xbc\xcb\xff\x28\xa3\x3d\x2b\x64\x18\xaf\xc7\x5f\x90\xb0\x4f\xf1\x67\x68\x5e\x6f\xf2\x66\x38\x73\xb8\xfe\x99\x8a\x69\xfe\xa9\x18\xf7\x28\xdd\xda\xe2\x30\x6d\x55\xc0\xc2\x42\xf2\x51\xfc\x73\x9f\x0b\xdc\xb1\x5c\x87\xd9\x4a\x3e\xb5\x87\xbf\xdc\x9e\xc1\xda\xc7\x68\x5b\x59\x9e\xa5\x6a\xba\x8c\x17\x3c\x63\xb7\xe4\xc3\x02\xc4\xe3\x02\x04\x60\x95\xa5\x22\xb8\x4f\x69\x47\x71\x64\x01\x2e\x48\x4b\x9c\x65\x37\xde\xe0\x32\xb4\x67\xce\xa6\xcd\x8e\x47\xd6\x2f\x3b\x3b\x9d\x52\xd1\x9e\x41\x4d\xaf\xa9\x60\x31\xfe\x5f\x7e\x07\x00\x00\xff\xff\x11\x52\x1a\x23\x70\x04\x00\x00")

func smsconfirmationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_smsconfirmationHtml,
		"smsconfirmation.html",
	)
}

func smsconfirmationHtml() (*asset, error) {
	bytes, err := smsconfirmationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "smsconfirmation.html", size: 1136, mode: os.FileMode(436), modTime: time.Unix(1464618696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
	"registration.html": registrationHtml,
	"login.html": loginHtml,
	"base.html": baseHtml,
	"error.html": errorHtml,
	"apidocumentation.html": apidocumentationHtml,
	"smsconfirmation.html": smsconfirmationHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"apidocumentation.html": &bintree{apidocumentationHtml, map[string]*bintree{}},
	"base.html": &bintree{baseHtml, map[string]*bintree{}},
	"error.html": &bintree{errorHtml, map[string]*bintree{}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"login.html": &bintree{loginHtml, map[string]*bintree{}},
	"registration.html": &bintree{registrationHtml, map[string]*bintree{}},
	"smsconfirmation.html": &bintree{smsconfirmationHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

