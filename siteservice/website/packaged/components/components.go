// Code generated by go-bindata.
// sources:
// components/company/controller.js
// components/company/service.js
// components/company/views/detail.html
// components/company/views/new.html
// components/notifications/controller.js
// components/organization/controller.js
// components/organization/service.js
// components/organization/views/detail.html
// components/organization/views/invitationdialog.html
// components/organization/views/new.html
// DO NOT EDIT!

package components

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _companyControllerJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x4b\x0e\xd3\x30\x10\x86\xf7\x3d\x85\x15\x55\xb2\x2d\x22\x97\x05\x1b\xa8\xba\x40\x3d\x02\x4b\xc4\xc2\x72\xa6\xc4\xc8\xb1\x23\x3f\x52\xaa\x2a\x77\x67\x92\xba\x69\x42\x1a\xc4\x6c\x5a\xfd\xf3\xf8\xbf\x99\x98\x5d\x92\x55\x51\x3b\xcb\x38\xb9\xef\x08\x06\x4d\x01\x48\x88\x5e\xab\x48\x8f\xbb\x51\x92\xf6\x67\x32\xd2\x8b\xc6\x55\xc9\x00\x2b\x74\x0c\x37\x97\x9c\x35\xda\xc2\xd7\xb6\x2d\xb8\x50\xce\x46\xef\x8c\x01\xcf\x8a\xb3\x6b\x5a\x69\x6f\xe7\x49\x2a\xca\x95\xc4\x71\xf2\x38\x7a\x95\x11\x7b\x6d\x7f\x81\x8a\xe4\x44\xbe\xd3\xbd\x71\x4a\x0e\x74\xb4\xa4\xb9\xf2\x1b\xf8\x4e\x2b\xa0\x25\xa1\xfb\xab\xb6\x95\xbb\xd2\x1f\x19\xf3\xb9\xca\x7a\x28\x9b\x06\x95\xcb\x31\x25\xc9\x43\x9e\xdb\x0f\xd1\x49\x4f\xba\x06\x01\x62\xad\xc3\xf1\x25\x37\x42\x79\x90\x11\x30\xf3\xf8\x93\x7d\x73\xb2\x93\x46\x57\xa3\x09\x78\xef\x7c\xc0\xb2\x7b\x3f\x2b\x91\x08\xd7\x61\x17\xe3\x33\x71\x62\x7e\x65\x91\x64\x4a\xf7\x6f\x2a\x1f\xde\x8c\xbf\x80\xff\x0d\x30\xaf\x5a\x6e\x9f\xf7\x61\xd8\x6b\x65\x03\x25\xfe\x46\xf9\xdb\x7a\xbe\xe8\x11\xb1\x06\xcb\x16\xd2\x9c\x87\xa1\xa5\xfc\x0b\xe6\x19\xd3\xd9\x45\x2b\x63\xcd\x8a\x83\x1a\xfd\x35\x84\x43\x41\x3e\x90\xec\xcb\x8f\xab\xe6\xbe\xdc\xf6\x43\xe6\xe0\xec\x86\xa3\xbe\x90\x5c\x20\x42\x94\x31\xe1\x11\x4e\xe4\xd3\xc7\xcf\xf3\xef\xbb\x8a\x8d\xdb\x55\xa9\x35\x1a\xf9\xe1\x0b\x89\x3e\x41\xbf\xc6\x1c\x51\xdf\xaa\x60\x02\x6c\x3b\xe6\x47\x27\xa6\xf3\xd4\x1e\x2e\x68\x59\x8c\xe6\xc3\x69\x16\x3b\xfc\xaf\xf1\x52\x99\x9d\xf5\x91\xc0\xc7\xb4\xeb\xf9\xf0\xfc\xfe\x04\x00\x00\xff\xff\x45\xe8\x9a\x08\xf6\x03\x00\x00")

func companyControllerJsBytes() ([]byte, error) {
	return bindataRead(
		_companyControllerJs,
		"company/controller.js",
	)
}

func companyControllerJs() (*asset, error) {
	bytes, err := companyControllerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "company/controller.js", size: 1014, mode: os.FileMode(420), modTime: time.Unix(1457973973, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _companyServiceJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x3f\x6f\xeb\x20\x10\xdf\xfd\x29\x50\x64\x09\x90\x2c\xde\x1e\xeb\x0d\x4f\x6f\xed\xd4\xaa\x53\xd5\x81\x3a\xd7\x84\xca\x39\x08\x1c\x51\xa3\xc8\xdf\xbd\x18\x9b\x34\x4e\xab\xdc\x60\xe0\xee\xf7\x0f\x23\xde\x23\x76\x64\x2c\x0a\xc9\xce\x15\x4b\xc5\x63\x00\x16\xc8\x9b\x8e\x78\x5b\x55\xb9\xa7\x71\x1b\x7b\xed\xd5\xde\x6e\x62\x0f\x62\x65\x28\x9c\x6c\xb4\xd8\x1b\x84\x7f\xce\xad\xa4\x0a\xe0\x8f\xa6\x4b\xa3\xff\x76\xef\x34\x9e\x9e\xa6\xf3\xaa\x59\x9e\x65\x51\x5c\xb6\x55\x6d\xf0\x03\x3a\x62\x7f\xd9\x0b\xaf\x77\x44\x8e\x37\xbc\x3e\xf0\xd7\x76\x42\x97\x90\x37\x34\x91\xa1\x0d\xab\x0f\x25\xfc\x58\x47\xed\x99\x76\xe6\xf9\xf1\x21\xc9\x31\x9e\xb6\x7f\xba\x4c\x33\x10\xf8\x2c\x58\x70\x73\xec\x04\xfc\xe6\x8f\xd5\x79\xd0\x04\xeb\x79\xbd\x8c\x86\xcb\xce\x03\x45\x8f\x85\x7f\xa5\x7a\x89\x3a\x51\x05\xea\x3d\x34\x8c\xf4\x27\x7a\xb9\xf4\x18\xfd\xa3\xef\x93\xf7\x94\xb6\x5d\x4c\x67\x83\x7c\x43\xe5\x6c\x20\x91\xb0\x0d\x3b\x6f\x7b\xfb\xa6\x7b\xb3\x59\x67\xe1\xac\xbb\xce\xdf\x41\x2a\xda\x01\x8a\x85\xca\x75\x22\xe1\x21\x38\x8b\x01\xe4\xcd\x65\x6f\x2c\x0b\x4c\x6d\x34\xe9\xf6\x07\x72\x68\xee\x39\xe8\x60\x51\xde\x95\xaf\x0f\xca\xc3\xf8\xd8\x05\xfd\x8b\xc5\xa2\x73\x05\x18\xa6\xff\x9c\x96\x6a\x90\x22\x0d\xbe\x02\x00\x00\xff\xff\xb9\xae\x5f\xb5\xbf\x02\x00\x00")

func companyServiceJsBytes() ([]byte, error) {
	return bindataRead(
		_companyServiceJs,
		"company/service.js",
	)
}

func companyServiceJs() (*asset, error) {
	bytes, err := companyServiceJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "company/service.js", size: 703, mode: os.FileMode(420), modTime: time.Unix(1457973973, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _companyViewsDetailHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x49\xc9\x2c\xb3\xe3\x52\x00\x02\x9b\x0c\x43\x3b\xe7\xfc\xdc\x82\xc4\xbc\x4a\x85\x94\xd4\x92\xc4\xcc\x9c\x62\x1b\x7d\xa0\x18\x97\x8d\x3e\x58\x0d\x20\x00\x00\xff\xff\xd8\x55\xeb\x9c\x2a\x00\x00\x00")

func companyViewsDetailHtmlBytes() ([]byte, error) {
	return bindataRead(
		_companyViewsDetailHtml,
		"company/views/detail.html",
	)
}

func companyViewsDetailHtml() (*asset, error) {
	bytes, err := companyViewsDetailHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "company/views/detail.html", size: 42, mode: os.FileMode(420), modTime: time.Unix(1457973973, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _companyViewsNewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\x4b\x92\xa3\x30\x0c\x86\xf7\x39\x85\xca\xab\x99\x05\x43\x4d\xcd\x16\xd8\xe4\x0a\xb9\x80\xc0\x22\xb8\xc6\x0f\xda\x8f\x04\x6e\xdf\xb2\x49\xe7\xd5\x5d\xdd\x61\x83\x91\xe5\x4f\x3f\xbf\xe4\x46\xaa\x53\xb7\x03\x7e\x9a\xd1\x79\x03\x1a\x57\x97\x62\x2b\x06\xa7\x93\xb1\x02\xec\xb1\x0a\xa9\x37\x8a\x43\x27\xf3\x67\xf0\x84\x91\x7e\xfd\x16\xdb\x91\x72\x6c\xfa\xdb\xed\x4b\x18\x10\x2c\x9d\x61\x70\x66\x46\xbb\x36\x35\x6f\xdc\xb2\x7a\x5f\xdf\x7d\x19\x59\x29\x3b\xa7\x58\x0d\xce\x46\x54\x96\xfc\x6d\xb3\x24\x68\xec\x49\x77\xfb\x0d\x05\x16\x0d\x35\xf5\x16\x7b\xcc\x2b\x94\x2c\xd2\x38\x49\xba\x68\xcc\xc9\x02\x8c\xb2\x9a\xec\x31\x4e\xad\xf8\x27\xc0\xd3\x5b\x52\x9e\x24\xc4\x75\xa6\x56\x44\x5a\xa2\x00\x4c\xd1\x8d\x6e\x48\xa1\x6b\xea\xc2\x79\x62\xb3\x33\x85\x4c\x21\xe0\x91\x42\x81\x9f\x50\x2b\x89\x51\x39\x96\xec\x9d\x0f\x5c\x48\x56\x19\x54\x4d\x4a\x32\x79\x44\x1d\x48\x3c\x82\xbe\x80\xb5\x42\xa6\x59\xab\x81\x5d\x13\xdd\x61\x52\xa1\xfc\x22\xf0\x1b\x35\x7b\x29\x57\x88\xf8\x9f\x6c\x53\x5f\xbb\x73\x05\x3d\x86\x9a\xfa\x3b\x2b\x5f\xf5\xf9\x80\x0b\xd8\x64\x7a\xf2\x2f\xbb\x1c\x71\xb1\x5e\xdc\xfb\xf9\xd9\xc5\x1f\xc4\x65\x4b\x3e\xc6\xcd\xbb\xf3\x93\x6b\x59\x7b\x9f\x62\x74\xf6\x52\x64\x1b\x43\x01\x83\xc6\xc0\xcd\xe0\x6d\x8f\x2a\x70\x4f\x79\x35\x7b\x65\xd0\xaf\xe2\x32\x89\xa5\xf0\x76\xf8\x09\x1a\x78\x9e\x60\xd4\xb4\xb0\xda\xbc\xbe\x17\x7b\xbb\x09\x75\xbe\x0a\xdd\xee\x12\x7a\x0f\x00\x00\xff\xff\x44\xaf\xf1\xa6\x23\x03\x00\x00")

func companyViewsNewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_companyViewsNewHtml,
		"company/views/new.html",
	)
}

func companyViewsNewHtml() (*asset, error) {
	bytes, err := companyViewsNewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "company/views/new.html", size: 803, mode: os.FileMode(420), modTime: time.Unix(1457973973, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _notificationsControllerJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8f\xc1\x8a\xc3\x20\x10\x86\xef\x3e\x85\x48\x40\x85\x25\x2f\x10\xf6\xb0\xec\x7d\x5f\x60\xe9\x41\xac\x69\xa7\x18\x27\xe8\x18\x28\x25\xef\x5e\x93\x34\xb6\x97\xcc\xc1\xc3\x7c\xfe\xdf\xf0\xab\x3e\x07\x4b\x80\x41\x69\xfe\x60\xbc\x8c\xcc\xc9\xf1\x44\x11\x2c\xc9\x8e\xb1\x75\x67\xc2\x25\x7b\x13\xdb\x01\xcf\xd9\x3b\x25\x80\xd2\x1d\x33\x06\x0f\xc1\xfd\x8c\xa3\xd0\xad\xc5\x40\x11\xbd\x77\x51\x89\x3f\x24\xe8\xc1\x9a\x45\x9b\x7e\x2b\x10\x5f\x07\x40\xef\x67\x0e\x78\xdb\x40\xb8\x39\x4b\xfc\x9b\xff\xcb\xc6\xe3\xf6\x41\x9e\xba\x2d\xb5\x37\x38\x8a\xab\x1a\xd9\x2b\x2e\x33\x99\xc8\xa7\xa1\x28\xe9\x0a\xe9\x65\x5a\xab\x16\xd7\x64\xc8\x29\xfd\xb1\xac\x27\xde\xb4\xa8\x2a\x9e\xd9\xf6\x32\x36\xeb\x25\xf7\x0c\x00\x00\xff\xff\x48\x43\x47\x15\x55\x01\x00\x00")

func notificationsControllerJsBytes() ([]byte, error) {
	return bindataRead(
		_notificationsControllerJs,
		"notifications/controller.js",
	)
}

func notificationsControllerJs() (*asset, error) {
	bytes, err := notificationsControllerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "notifications/controller.js", size: 341, mode: os.FileMode(420), modTime: time.Unix(1457973973, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _organizationControllerJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\xcd\x8e\xdb\x36\x10\xbe\xfb\x29\x08\xc1\x88\x28\xd4\x90\x7b\xc8\xa5\x32\x72\x28\x9a\x16\xc8\xa1\x3f\xc0\x22\xa7\x20\x07\xae\x44\x5b\x2c\x28\xd2\x20\x29\xb9\xed\x46\xef\xde\xa1\xfe\x29\x51\xb2\xb7\x69\x78\xe2\xce\x8c\x66\xbe\x19\xce\x7c\x9e\xc5\xe7\x52\xa4\x86\x49\x81\x23\xf4\xb2\x43\x70\xc2\x52\x53\xa4\x8d\x62\xa9\x09\x4f\xbb\x5d\x23\x23\xe2\x52\x72\xa2\x9a\xbb\x3d\x71\x21\xb3\x92\x53\x1c\x30\xa3\xff\x96\xa5\x14\x9c\x09\xfa\xe3\xf5\x1a\x44\xa3\x49\x2a\x85\x51\x92\x73\xaa\x70\xf0\xbb\xba\x10\xc1\xfe\x21\x36\xd0\x4f\x83\x3c\x38\x20\xbf\xe2\x01\x2f\xef\xa9\x21\x8c\xaf\xfa\x9a\xab\x57\x3c\x7e\x10\x15\x33\xed\x07\x8c\x70\x79\x71\xfc\xad\x2b\xa3\xbe\x2e\x7e\xf8\xf1\x9e\x89\x3f\x69\x6a\xd0\x3b\xf4\x29\xdc\x73\x99\x36\xfa\xf0\x10\x4e\xcd\x9f\xa8\xaa\x58\x4a\x41\xba\xbf\x31\x91\xc9\x5b\xf8\xf9\xb4\xf0\x39\x4f\x63\xcd\x33\x0a\xf7\x4a\x96\x86\xfe\x41\x14\x29\x74\xf3\x77\xe7\x14\xae\xde\xa8\x60\x51\x64\x6d\x5e\xdd\x1f\xbf\xd2\x8c\x11\x0b\xa2\x41\xd1\xb7\xc5\x4a\x8a\x78\x08\xee\xd6\xbd\xf3\x7f\x40\x5d\xfc\xbe\xa9\xec\xa9\x88\x42\x55\x01\xd0\x4d\xce\xf4\x69\x14\x17\x71\xaa\x28\x31\x14\x34\xed\xa5\x83\xd0\x29\x2b\xc2\x59\xd6\x38\xa7\x4a\x49\xa5\xc1\xec\xa5\x9e\x98\x10\xc0\x59\xc1\x57\x38\x9a\x08\x07\xf8\xa3\x16\x90\x0c\xea\xda\x63\xd9\xc6\xc6\xd1\x08\xb8\x07\x9d\x09\x1b\xf4\xd3\xe7\x9d\xa3\x61\x67\x84\x01\x1e\x28\xa7\x49\xf6\x07\xc4\xf1\xb5\xd4\x79\x6f\xe2\x18\xd4\xae\xa7\x07\x92\x9c\x37\x46\x57\xe7\x45\xd8\xae\x94\x36\xaa\x20\x05\xbc\x03\xc4\x3e\xa0\x40\xc9\xe7\x20\x5a\x1a\x9b\x9c\x0a\xbc\x10\x4f\xab\x82\x01\x14\x89\x96\xe9\xf5\x67\x68\x83\xf8\x4a\x4c\x8e\x83\xa3\x9c\x80\xd4\xc7\x00\x7d\x87\x3a\x28\xd1\xc9\xeb\xa4\x3e\x6c\xc7\x87\x74\xb4\x14\x1b\x08\xec\x33\xb4\x46\xb1\x86\x69\x2d\xa1\x74\xef\xd0\xdb\xef\x7f\xf0\x3d\x8a\x73\x56\xaa\x9e\x95\x57\xce\x20\x27\x9a\x20\xa3\x4a\x5a\xfb\x61\x37\xd0\x57\x35\x94\x6b\xba\x1d\xbd\x1b\x8f\x78\x28\x5f\xae\xe8\x19\xc2\x07\x0d\x10\x5b\x36\x27\xa7\xd7\x82\x58\x4a\x27\xe5\x6f\x95\xf5\xc6\x9c\xcf\x69\x67\x3a\xed\x53\xa2\x19\xc6\x7c\x8d\x04\x7a\x8a\x69\xae\x0d\xc1\xac\x12\x82\xdb\x07\x17\x2e\x9f\xed\xe3\x80\x72\x1a\x30\xee\xe5\x0e\x7d\xb0\x81\xa8\xdb\x39\x75\x94\xd3\x86\x9c\x4f\x15\xa8\x75\x2e\x6f\x73\xa2\x07\x33\x9f\xf8\xbf\x71\xce\x34\xab\x33\x35\x69\x8e\x9d\xa7\x58\x7e\xdd\x19\xbd\xbc\x7e\xf6\x2f\xd4\xe0\xbe\x40\x5f\x31\xed\x1b\x83\xb3\xac\xa7\xfd\xe2\xab\x26\x7b\x23\xda\xff\x32\x24\x77\x46\xc1\xf3\x00\xbe\xb7\xc7\xb4\x9a\x23\xb5\xdd\x0b\xab\xd2\x2f\x25\xe7\x4f\xc0\xba\xd4\x56\x03\xf7\x6d\x8e\x43\x5d\x84\x11\xfa\xf2\x05\x8d\x92\xbf\x74\x18\xb9\xcf\x32\xcc\x47\xd3\x86\x78\x59\x89\x71\x57\x49\x36\xd6\x91\x65\xa1\x0d\x2d\xae\x1c\x3a\xf0\xa3\xe2\x09\x0a\x53\x59\x5c\x81\xe2\x84\xd1\x0e\x3d\x1f\x2b\x46\x6f\xfa\x38\x4e\x4f\xd6\x62\xc9\x4d\xc1\x43\x8f\x4f\xa2\xa0\xc1\x7e\xae\xc0\x4f\x82\x68\xb5\x34\x38\x43\x25\x74\x53\x89\xc4\x2d\xcc\xd2\xd4\xbe\x28\xd7\x89\xf7\xc1\xd6\xfb\xc1\x33\x04\x89\x97\x78\x56\x3d\x38\xcd\x9b\xcc\xdb\x79\x60\x97\x75\x07\x5d\x4b\x26\xfd\xe5\x81\x96\xab\xdd\x37\x5f\x19\xc3\x61\x2c\x88\xd0\x37\xd8\x30\x57\xca\xe0\xb2\x5d\xbb\x61\x8c\x02\xcf\x6f\x6c\x7d\x97\xf8\xd7\xfb\x0a\xef\x75\x2a\xaf\x2e\x8f\x4f\xeb\x75\x7f\xf5\x1b\x42\xb7\x9e\x62\xf0\x6b\xd7\xbc\xa0\xa0\xc5\x33\xec\xd8\xa7\x85\x41\x4a\x44\x4a\xb9\xdd\x04\x9b\xcb\x69\xae\x6f\x72\xb5\x2e\xda\x8b\x8f\x7d\xdb\x2f\xe7\x04\x3a\x8e\x5a\xaf\xdf\x66\xe1\xd6\x3f\x86\x3e\x56\xed\x22\x65\xa1\xdf\x27\xe5\x0e\x20\x76\xcb\x34\xf3\x72\xaf\x05\x36\x76\xae\x31\x8d\x9c\x65\xb4\xb5\xf4\x3c\xba\x6f\x38\x1f\x59\xa8\x56\x96\xa9\xb7\xe8\xcd\x9b\x9e\x6b\x6d\xc8\xb8\x5b\x97\x40\x8a\x97\xe2\xe6\x3f\x2c\xc2\x84\xc6\xc1\x6f\xf2\xa9\x4c\xf3\x8f\x90\x7e\xd0\x90\xe1\xa6\xf1\xfb\x7e\xf3\x0a\xa2\x8d\x7d\xef\x78\xfc\x00\x44\x65\xcd\x50\xe3\xe1\x41\xd2\xb7\xc7\xae\x65\xaf\xa4\x9c\x6f\xf4\x13\xe4\x4a\xa6\x4b\xc4\x30\xa3\xbb\x5d\x1d\xd9\x26\xfd\x37\x00\x00\xff\xff\x07\x14\x2f\x69\xa1\x0f\x00\x00")

func organizationControllerJsBytes() ([]byte, error) {
	return bindataRead(
		_organizationControllerJs,
		"organization/controller.js",
	)
}

func organizationControllerJs() (*asset, error) {
	bytes, err := organizationControllerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "organization/controller.js", size: 4001, mode: os.FileMode(420), modTime: time.Unix(1458135825, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _organizationServiceJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x8c\x22\x4b\x80\x8a\xbc\x77\x47\x3d\xf4\x5e\xa9\x52\xab\x9e\x56\x7b\x60\x9d\x69\x96\xca\x01\x07\x70\xaa\x76\xe5\xff\x5e\xc0\x26\xc1\x1f\x8a\xfb\x03\xca\xc1\xde\x9d\x8f\xf7\x66\xde\x0b\xa6\x3f\x3a\x55\x3b\xa9\x15\x65\xf0\xbe\x03\x7f\x48\x67\x11\xac\x33\xb2\x76\xe4\xb0\xdb\xc5\x98\x50\xa7\xae\x11\xa6\x3c\xeb\x63\xd7\x20\xdd\x4b\x67\x7f\xeb\x4e\xab\x46\x2a\xfc\xd4\xb6\x7b\x56\x5a\x34\x57\x59\xfb\xd4\x17\x73\x12\x4a\xfe\x11\x01\xf3\xdb\x10\xdc\x73\x58\x89\xb2\x04\xbe\x92\x2b\x0b\xa9\x7e\x62\xed\xe0\x23\x3c\x93\xe2\xcd\xb9\x96\x70\x52\x5c\xc8\xcb\x61\x68\x49\x43\xaf\xf5\xd2\x58\xcf\xa1\xb8\xa4\x8d\xc2\xb9\x0a\x03\xa2\x95\xdf\xbf\x7e\xf6\x98\x40\xfc\x9f\x4f\x3a\xeb\xb5\x64\x44\x4e\xb5\xe3\x3e\xbe\xf8\x8e\x11\x4e\x6d\x50\x38\xac\xc6\x37\x9f\xe4\x4e\xe8\xaa\xf0\x98\x46\xa5\xba\xca\xd0\x31\xbc\x6f\xa9\xfe\xce\x67\xd0\x75\x46\x25\xca\x6c\x90\xdb\x9a\x03\x1b\x55\xe2\x8c\x1c\x8e\xca\x72\xd0\xbf\x14\x1a\x36\x9d\x2d\xcc\xdd\x99\xc6\xcf\x3c\x6c\x7a\x98\x64\x47\x96\xa8\x4e\xd9\x6a\xeb\xa8\xaf\xe5\xf0\x7e\x6a\xf4\xab\x68\xe4\xb1\x8a\xe8\x1e\xbc\x0a\x04\x11\xdf\x56\xcf\xf1\xfd\xd2\xb3\xd2\xbd\xa1\xa2\x13\xc0\x7c\x42\x6a\xd0\xb6\x5e\x46\x64\x33\xbd\x66\xec\xa9\xac\x3c\x0a\x27\x0e\x8b\xca\x9e\x3f\x62\x10\x56\x2b\xf6\x10\xbe\xb8\x94\x06\xc3\x0f\x27\x55\xaf\x50\x4c\x22\x59\x41\xbf\xa2\xbb\x37\x93\x26\x7d\xe6\x9b\xcd\xd5\x86\x0f\x40\x9e\x88\x7f\xa6\x86\xcc\xc8\x7c\xc4\xa0\xff\x62\xaa\x32\x30\x79\x34\xb6\xcc\xac\x0b\x3f\x93\xe6\xb1\xf8\x19\xfd\x86\x01\x51\x88\xa5\x09\x33\xb6\x28\xed\x36\xd7\x3f\xb8\x11\xf9\x16\xd1\x0d\x57\x86\x9b\x74\x33\x86\xc3\x19\xcf\xaf\x68\x38\x18\xdd\x2c\x34\xd8\xb4\xe9\x16\x08\xdd\xe1\x9f\xc9\xb7\x20\x5f\x67\xdd\xb9\xec\x2a\xf9\x2f\xa7\x09\xb7\xa8\x1a\x27\xea\xff\xdb\x19\xce\xc4\xce\xe1\xd9\x33\xea\xa3\x7f\x03\x00\x00\xff\xff\x52\xdb\xe4\x10\x7d\x06\x00\x00")

func organizationServiceJsBytes() ([]byte, error) {
	return bindataRead(
		_organizationServiceJs,
		"organization/service.js",
	)
}

func organizationServiceJs() (*asset, error) {
	bytes, err := organizationServiceJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "organization/service.js", size: 1661, mode: os.FileMode(420), modTime: time.Unix(1458135582, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _organizationViewsDetailHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x57\xcd\x6e\x9b\x40\x10\xbe\xe7\x29\x46\xa8\xaa\xda\x03\xa6\x8d\x72\xa8\x54\x8c\x64\x29\x17\x1f\xaa\x46\xea\x13\x2c\x30\x86\x6d\x96\x5d\xc4\x2e\x76\x5c\x2b\xef\xde\x01\x1c\x0c\x61\x8d\x71\xd2\x36\x4d\x72\x89\x3d\x7f\x9e\xf9\x66\xe6\x1b\xf0\x63\xbe\x0e\x2e\x80\xfe\xfc\x2c\x76\x23\x25\x0d\x4a\xd3\x08\x6a\x21\xa9\x41\xb0\xad\x2a\x3b\xc2\x56\xb1\x12\x78\x37\x77\xbe\x7c\x72\xfa\xba\x5a\x9f\x07\xdf\x8b\x84\x49\xfe\x8b\x19\xae\xa4\xef\xe5\x16\x9b\xf4\x73\xb0\xdb\xc1\x3a\x9b\xa9\x8e\xe9\x2c\x11\x2a\x64\x82\xc7\x70\x7f\xef\x7b\x64\xd2\xff\x5d\xaf\x4d\x78\x90\x4a\x70\x31\x66\xfa\xf8\xeb\x30\x0e\x01\x60\x58\xa8\x81\xfe\xc7\x5b\xc9\x32\x1e\xb9\x29\xf2\x24\x35\x96\xd4\x1b\xdb\xa1\xa2\xa3\x74\x05\x0b\x51\x04\x3e\x87\x48\x30\xad\xe7\xce\x8a\xc1\x8a\xb9\xa5\xc6\xc2\x09\x7c\x8f\x07\xef\x65\xa8\xf3\xaf\x37\xa8\x72\x81\xbe\xd7\x73\x1a\x8d\x1b\xaa\x78\xbb\x6f\xca\xdc\x29\xd4\xc6\x02\x7f\xd7\x45\x70\x6d\xa9\xc0\x66\xe5\x72\x83\xd9\x43\xb6\x24\xbb\x24\xa9\xc4\x91\xf0\x6d\x80\xaa\x05\x07\xbf\x36\x96\x6b\xf0\xce\x4c\xf0\xaf\x63\xd0\xc4\x6c\x24\x16\xda\x3a\x2b\x56\x8f\xf4\x0a\x64\xe2\x16\x98\x23\x23\x24\x54\xe5\x0d\x5c\x0e\x06\xaa\x56\x68\x27\x00\x1a\xb6\xc6\xa8\x9e\xac\xab\x09\x75\x0d\xa7\x6d\x68\xd2\x2d\xf8\x75\xe0\xfc\x0d\xb3\xf0\x19\x40\x67\xb5\xbb\x0d\xe9\x46\x43\x50\x13\xd2\x7b\xab\x17\x80\xba\xb5\x1b\xdf\x8b\xb0\x34\x46\xc9\x0e\x9c\x79\xc1\x33\x56\x6c\x9d\xaa\xd6\x48\xf0\xe8\x76\xee\x50\x81\x3a\x55\x9b\xa5\x5c\x73\x53\x97\x78\xcd\x99\x50\xc9\x87\x77\xb8\x26\x9e\xfc\x78\x02\x72\xdb\xea\xbb\xb9\x28\x75\xb3\xff\x50\x87\x45\xd0\x2a\x43\x25\xf1\xe4\xe8\x18\xa5\x84\xe1\x79\x93\x9e\x62\xb7\x41\xdf\x1f\x8c\x82\x9f\x8a\xba\xb2\xdb\x1d\xa3\xd4\xaa\x19\x87\x40\x27\x10\x6c\xf0\x39\x42\x45\x5e\x87\x8b\x2c\xf4\xe8\x1d\xe3\xc7\x67\x10\x67\x54\x86\xa8\xbb\xcc\xf9\xc3\x14\x65\x64\xca\xe2\x6c\xf2\xfc\x8f\x6a\x52\x49\xaf\x22\x34\x86\xcb\x44\x9f\x5f\xd0\x1b\xb9\x00\xd7\x2a\x63\x34\xc1\x74\x7c\xf1\xc9\xf4\x14\x4b\x6d\xe3\x26\x12\x37\x27\xa0\xd2\xbf\x2c\x2b\x3d\x8d\x96\xce\xe3\x9a\x0e\xcd\x2c\xe2\x18\xe2\x03\xb0\x53\x79\x26\xa8\xfc\x58\xd7\xb3\xbe\x9e\x31\x84\xdb\x3f\x4d\x31\x6f\x62\x7a\x8f\x3d\x2a\x8f\x3a\xe5\xfb\x87\x68\x2e\xb9\xa1\xd3\xe2\x04\x8b\x9b\x25\x2c\xa2\x08\xb5\x06\x8d\x51\x81\x46\xf7\x5a\x32\xd0\x02\x2b\x10\x24\x62\x4c\x8d\xa1\x03\xc0\x1a\xa5\x49\x11\x96\x46\x53\x32\x33\x25\x2b\x10\x80\xe5\x1c\x4a\x4d\xe4\x02\x8a\x95\x26\xbd\xec\x75\x69\xf2\xaa\xd5\x39\xeb\x9c\xc9\xe6\x81\xdb\xf7\xaa\xcf\x13\xf1\x69\x56\xe9\x78\xaf\x1f\x19\x8e\x9b\xbc\x86\x9d\xab\x9a\xc5\xba\xcd\x9a\xbe\x79\x7f\xa7\xcd\xff\xf8\xde\x3f\x48\xb5\xf5\x25\xac\xd6\xb6\x2f\x9c\x7b\xc5\xef\x00\x00\x00\xff\xff\xb1\x90\x09\xea\x8f\x0e\x00\x00")

func organizationViewsDetailHtmlBytes() ([]byte, error) {
	return bindataRead(
		_organizationViewsDetailHtml,
		"organization/views/detail.html",
	)
}

func organizationViewsDetailHtml() (*asset, error) {
	bytes, err := organizationViewsDetailHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "organization/views/detail.html", size: 3727, mode: os.FileMode(420), modTime: time.Unix(1458130242, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _organizationViewsInvitationdialogHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\xcd\x6e\xd4\x30\x10\xbe\xf7\x29\x2c\x9f\x5a\x89\x6d\xd0\x16\x2e\xb0\x89\x84\x7a\xe2\x80\x90\x10\x9c\x2b\xc7\x99\x4d\x4c\x1d\x3b\xd8\x93\xed\x2e\x4f\xcf\xd8\x4e\xbb\xce\x36\xdd\x02\x27\x3b\xf3\xf3\x79\xe6\x9b\x9f\x6c\xfa\x66\xd5\x28\xa1\x6d\xcb\x4c\xbb\x92\xda\x8a\xfb\xea\x82\xb1\xcd\xd6\xba\x3e\x5c\xe8\x4a\x16\x68\xad\xae\x85\x4b\x82\x28\x6c\xd4\x8e\x49\x2d\xbc\x2f\xf9\x51\x1f\x4f\xcf\x8f\x66\x64\xd8\xad\xab\xcf\x66\xa7\x10\x98\xb7\x3d\x58\x03\x9b\x82\x44\xb9\x85\x1f\x84\x61\x5b\x0d\xfb\x6a\x53\x84\xfb\x4c\x49\xe0\xf5\x88\x68\x4d\xf6\x9a\x92\xd6\x4c\x52\x9e\xa2\x56\xf2\xbe\xe4\x52\x18\x09\xfa\xf2\x6a\xf6\x7e\x82\x08\x1e\x8c\x4e\xbf\x6b\x57\xde\xc9\x92\x13\x14\xa0\x2f\x54\xdf\x16\x4a\xde\x51\xda\x1e\xee\xd6\xef\x86\xfd\x35\x59\x70\x26\x9c\x12\x2b\x2d\x6a\xd0\x25\xbf\x0d\x3a\x96\x28\xe2\x14\xe1\x84\x36\x0b\xb2\x78\x8a\x32\x63\xa8\x20\x8a\x26\x06\x8b\x53\x0a\x8f\xac\xaf\x08\x0b\xc1\xe0\xa3\xe3\x09\xb1\x73\x23\xce\xb4\x38\xd8\x11\x29\x57\xab\xc7\xde\x9c\x66\x1a\x7c\x93\xc5\x5c\xf1\x44\x83\x19\x46\x8c\x60\x42\x19\x70\xcf\x8d\xa2\x61\x4c\xbc\xfa\x66\x35\x95\x2a\xdd\x97\xed\x02\x9f\xa0\x41\x62\xa8\x41\x6f\x9b\xc0\x96\x23\x2f\xbe\x6c\xff\xe8\x63\x07\x54\x54\x8d\x9d\xd0\x23\x94\xdc\x3e\x50\x20\xbc\xfa\x1a\x8e\xc8\x53\x52\xff\x0b\x44\x0f\x7d\x1d\x30\xbe\xc4\xf3\x55\x90\x68\x90\x02\x5f\x60\xa9\xf8\x1b\x9a\x8e\x2d\x5b\xf2\xf7\x7c\xa1\x6d\x8f\xa1\x9e\x60\xa5\x3e\x3f\xc7\xfb\x0f\x0f\xce\x88\xfe\x15\xee\x23\x6c\xc6\xfb\x48\x5e\x68\x55\x1c\x34\xce\x7a\x65\x34\x98\x16\xbb\x92\xaf\x39\x73\xf0\x6b\x54\x0e\x1a\x86\x87\x81\xe8\x42\xd8\x53\x23\x89\x11\xed\xd6\xca\xd1\xff\x0f\x07\x59\x6f\x2f\x7d\x86\x36\xf4\x78\xd0\xa1\x36\xc2\xb5\xca\xac\x9c\x6a\x3b\xfc\xb0\x7e\x3b\xec\x3f\x4e\x12\x0d\xdb\x49\x70\xda\xc4\xdd\x4d\xf5\x29\xc6\x0c\x1e\x19\x5a\xf6\x93\xd2\x62\xd8\x29\xcf\xac\x6b\x85\x51\xbf\x45\x2c\xfe\x83\xd2\x9a\xd5\xb4\x55\x68\x2e\xae\x69\xa7\xdc\x54\xc1\xf3\x7b\x07\x2c\x70\xc1\x0c\x40\xe3\x83\xbb\x90\x12\x06\x4c\x00\x91\x9f\xe4\x5e\x03\x6d\x38\x20\x2d\x8e\x42\xeb\x03\x7d\x4b\x4b\xb4\xb5\x6c\x10\x0e\x99\xdd\x3e\x7f\x31\x3d\xf2\xe2\x7c\x2f\x8d\x73\x36\xe6\xf4\x10\x61\xf8\xa7\x01\x76\xf6\x21\x4b\xfc\xcc\x0e\xcc\x36\xe0\xd9\x55\x77\x1b\x45\x17\xb3\x22\x3e\xdb\x49\x4b\xdb\x74\x70\x8a\x6a\x72\xe0\x53\x7b\xf8\xb1\xee\x15\xe6\x7b\x35\x75\xd5\x65\xde\x62\x6f\xc2\x9c\x5f\xf1\x97\xab\x9c\x05\x96\xb6\xff\xcb\x81\xe5\xec\x4d\x2c\xc5\x3f\x50\x91\x7e\x41\x99\xba\xba\xf8\x13\x00\x00\xff\xff\x16\x3a\xbd\xdd\xae\x06\x00\x00")

func organizationViewsInvitationdialogHtmlBytes() ([]byte, error) {
	return bindataRead(
		_organizationViewsInvitationdialogHtml,
		"organization/views/invitationdialog.html",
	)
}

func organizationViewsInvitationdialogHtml() (*asset, error) {
	bytes, err := organizationViewsInvitationdialogHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "organization/views/invitationdialog.html", size: 1710, mode: os.FileMode(420), modTime: time.Unix(1458134926, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _organizationViewsNewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\x4b\x72\xdb\x30\x0c\x86\xf7\x3e\x05\x86\xab\x76\xa1\x6a\x3a\xdd\x4a\xda\xb4\xeb\xb6\x33\xc9\x05\x20\x11\x92\x38\xe1\x43\xe1\xc3\xb6\x72\xfa\x40\x94\x63\xcb\x4e\x26\xb1\x37\xa6\x00\xf0\xe3\xcf\x1f\x60\x25\xd5\xbe\xd9\x01\xff\xaa\xde\x79\x03\x1a\x67\x97\x62\x2d\x3a\xa7\x93\xb1\x02\xec\x50\x84\xd4\x1a\xc5\xa1\xbd\xf9\xd1\x79\xc2\x48\xdf\xbe\x8b\x75\x4b\xde\x36\xfe\x6c\x7e\xe7\x30\x20\x58\x3a\x80\xf3\x03\x5a\xf5\x82\x51\x39\x5b\x95\x9c\xbd\x94\xb6\xbe\xdc\x7c\x19\x59\x28\x3b\xa5\x58\x74\xce\x46\x54\x96\xfc\x25\x99\x0b\x34\xb6\xa4\x9b\x7f\x1b\x1e\x58\x34\x54\x95\x6b\xe2\xba\x38\xa3\x16\xb9\xc6\x49\xd2\x59\xed\x52\x2c\xc0\x28\xab\xc9\x0e\x71\xac\xc5\x2f\x01\x9e\x9e\x93\xf2\x24\x21\xce\x13\xd5\x22\xd2\x31\x0a\xc0\x14\x5d\xef\xba\x14\x9a\xaa\xcc\x9c\x1b\x36\x7b\x94\xc9\x14\x02\x0e\x14\x32\x7c\x8f\x5a\xc9\x2c\x8a\xbc\x77\x3e\xf0\x41\xb2\x58\x40\xc5\xa8\x24\x93\x7b\xd4\x81\xc4\x35\xe8\x03\x58\x2d\x64\x9a\xb4\xea\xd8\x3f\xd1\x3c\x8e\x2a\xe4\x2b\x02\xff\xa3\x66\x57\xe5\x0c\x11\x9f\x88\x8d\x3c\xf7\xe9\x0c\xba\x0e\x55\xe5\x67\x7e\xde\x6b\xf6\x7f\xaf\x0c\xfa\x19\xfe\xfc\x7d\xb8\xdb\x66\x69\xf9\xf2\x1b\x3b\xdf\x9b\xf8\x85\xb6\xc5\x91\xb7\xb9\xf3\xee\x70\x63\xda\x22\xbd\x4d\x31\x72\xf7\xd7\x43\xd6\x79\x14\xd0\x69\x0c\xdc\x0b\x4e\x7b\x54\x81\x5b\xca\xab\x69\xd5\x2f\x4e\x23\x99\x0f\x5e\x37\xdf\x40\xc3\x84\x16\x7a\x4d\x47\x56\xbb\xac\xb7\x62\x2f\x4f\xa2\x5c\xde\x44\xb3\x3b\x85\x5e\x03\x00\x00\xff\xff\xee\xf8\x78\xf7\x2c\x03\x00\x00")

func organizationViewsNewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_organizationViewsNewHtml,
		"organization/views/new.html",
	)
}

func organizationViewsNewHtml() (*asset, error) {
	bytes, err := organizationViewsNewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "organization/views/new.html", size: 812, mode: os.FileMode(420), modTime: time.Unix(1458122089, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"company/controller.js": companyControllerJs,
	"company/service.js": companyServiceJs,
	"company/views/detail.html": companyViewsDetailHtml,
	"company/views/new.html": companyViewsNewHtml,
	"notifications/controller.js": notificationsControllerJs,
	"organization/controller.js": organizationControllerJs,
	"organization/service.js": organizationServiceJs,
	"organization/views/detail.html": organizationViewsDetailHtml,
	"organization/views/invitationdialog.html": organizationViewsInvitationdialogHtml,
	"organization/views/new.html": organizationViewsNewHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"company": &bintree{nil, map[string]*bintree{
		"controller.js": &bintree{companyControllerJs, map[string]*bintree{}},
		"service.js": &bintree{companyServiceJs, map[string]*bintree{}},
		"views": &bintree{nil, map[string]*bintree{
			"detail.html": &bintree{companyViewsDetailHtml, map[string]*bintree{}},
			"new.html": &bintree{companyViewsNewHtml, map[string]*bintree{}},
		}},
	}},
	"notifications": &bintree{nil, map[string]*bintree{
		"controller.js": &bintree{notificationsControllerJs, map[string]*bintree{}},
	}},
	"organization": &bintree{nil, map[string]*bintree{
		"controller.js": &bintree{organizationControllerJs, map[string]*bintree{}},
		"service.js": &bintree{organizationServiceJs, map[string]*bintree{}},
		"views": &bintree{nil, map[string]*bintree{
			"detail.html": &bintree{organizationViewsDetailHtml, map[string]*bintree{}},
			"invitationdialog.html": &bintree{organizationViewsInvitationdialogHtml, map[string]*bintree{}},
			"new.html": &bintree{organizationViewsNewHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

