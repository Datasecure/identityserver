// Code generated by go-bindata.
// sources:
// index.html
// registration.html
// login.html
// home.html
// error.html
// DO NOT EDIT!

package html

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\xfd\x6e\xdb\x36\x10\xff\xbf\x40\xdf\xe1\xaa\x06\x95\x8d\xda\x52\xbe\xb6\x0e\xa9\xed\x22\x48\x8a\x22\xc0\xb0\x16\x4d\x80\xa2\xd8\x47\x40\x4b\x94\xc5\x46\x22\x55\x92\x72\x6a\x74\x05\xfa\x20\x1b\xd0\x67\xe9\xa3\xf4\x49\x76\x47\xca\xb1\x14\x27\xab\xb7\x6e\x80\x0d\x91\xe2\x7d\xfe\xee\x83\xa7\xd1\xbd\xe3\xe7\x47\x67\xaf\x5f\x3c\x85\xdc\x96\xc5\xe4\xee\x9d\x11\x3d\xa1\x60\x72\x36\x0e\xb8\x0c\xdc\x1b\xce\x52\x7c\x02\x8c\x4a\x6e\x19\x12\xda\x6a\xc8\xdf\xd6\x62\x3e\x0e\x8e\x94\xb4\x5c\xda\xe1\xd9\xa2\xe2\x01\x24\x7e\x37\x0e\x2c\x7f\x67\x63\x12\xf4\x18\x92\x9c\x69\xc3\xed\xb8\xb6\xd9\xf0\x87\x00\x62\x2f\xc8\x0a\x5b\xf0\xc9\x89\x0d\x0d\xbc\x56\x35\x3c\x97\x85\x90\x7c\x14\xfb\xd7\x8e\x02\x5f\x5c\x80\xe6\xc5\x38\x30\x76\x51\x70\x93\x73\x6e\x03\xc8\x35\xcf\xc6\x01\x33\x28\xd1\xc4\x89\x31\xb1\x3b\x8c\x70\x15\xc4\xff\x88\x2f\x43\x53\x87\xec\x92\x1b\x55\xf2\xa8\x14\x72\x4d\x84\xe3\x08\xc9\xd7\x83\xd8\x51\x9b\x68\xa6\xd4\xac\xe0\xac\x12\x26\x4a\x54\x49\x62\x9e\x64\xac\x14\xc5\x62\xfc\x8a\x17\x45\x56\xa0\xa6\xdf\x0f\xf5\x5c\x1d\xec\x6f\x6f\x0f\x1e\xe1\x1f\x9f\xc2\xb2\x42\x24\xb4\xf3\xab\xd0\xd9\x16\xae\x6c\x0b\xc1\x22\x76\xe3\xd0\x41\x86\x22\x43\x42\x3c\x6e\x20\x1f\x4d\x55\xba\x58\x86\x80\x6b\x10\xe9\x38\xf0\xcb\xc0\x9b\x9a\x8a\x39\x24\x05\xfa\x35\x0e\x1a\xf0\xfd\x41\x73\x44\xf4\x85\x9a\xa9\x60\x32\x62\x0d\x06\xf7\x83\x09\x9c\x58\x83\xa8\x47\x1e\x75\x18\xc5\x6c\x32\x8a\x91\xbc\xcd\xd9\x08\x35\x62\x26\x87\x97\x9a\x55\x4b\xb1\x78\xbc\x94\xa4\xf9\x4c\x18\x4b\xa6\x8c\xc4\x92\x3e\x63\x90\xb1\x61\x6d\xb8\x1e\x56\x45\x6d\xf0\x28\x16\x93\x97\x0d\x21\x29\x5a\x93\x82\xe6\x09\xb9\x2e\xc2\x29\x76\x07\x28\xe0\x14\x37\x20\xe4\x8a\x7f\x65\xee\x72\xe5\x21\xe3\x1a\x97\xb8\xb9\x37\x1c\xc2\xe9\x8f\x27\xc7\x4f\x4f\xe1\xf4\xec\xf0\xe5\x19\x0c\x87\x44\xb3\x84\xc4\x14\x22\xe5\x3b\x5f\x87\x30\xdf\x9d\x20\x4e\x1a\x94\x07\x0a\x99\x24\x66\xe8\x02\x75\xed\xb6\x48\x84\x84\x85\xa3\xba\x94\x90\x33\x99\x9a\xab\xf3\x95\x71\xcd\xb3\x63\xc0\xee\xed\x06\xc0\x0d\xa1\x78\x5b\x2b\xcb\xcd\x39\x91\x30\xb4\x46\xb7\x22\x92\xef\x75\x89\x82\x49\x13\xda\x4a\x73\xc3\x65\xc2\xa1\xe4\x4c\x1a\x84\x10\xa3\xc0\x12\x2b\x94\x8c\xe0\x48\x95\x15\x93\x82\x1b\x90\x9c\xa7\xde\x85\xa5\x87\x70\x99\x8b\x24\xa7\x77\x8d\x08\x8b\xbc\x90\x8a\x2c\xe3\x9a\x36\x97\x6c\x61\x06\x90\xf2\x8a\xcb\x54\xc8\x19\x02\x04\x36\xe7\x58\xff\x24\x72\x31\x80\x8a\x6b\x83\xef\x94\xf6\x2d\xe1\x9d\x8d\x10\x93\xbd\xbf\x09\xde\x4d\xf8\x7c\xb7\x69\x80\x48\x6f\x59\x4b\x91\x30\xcb\x41\xcd\xb1\x4e\xe6\x4c\x0b\x55\x1b\x6a\x3e\x52\xf2\xc2\x00\x86\x65\x3d\x6a\x2b\x7f\x1a\x2b\x0d\x4c\x6b\xf4\x94\xba\x12\x2b\xc8\x47\x42\x60\xc3\x68\x7e\xff\x3f\x46\xf3\xcb\xc7\x3f\xce\x72\xee\x31\x7e\xa6\x85\xc4\xd0\xd8\x5c\xd5\xb3\xdc\x82\xca\x80\x5a\x98\xcd\x29\x0c\x78\x9c\xb3\x54\x86\x16\xa6\x3c\x53\x9a\xdf\x83\x57\x39\x43\x87\x32\x38\xca\x35\x96\x60\xc9\x30\x6a\x48\xd4\x30\x63\x04\x15\x37\x44\x8e\x00\x72\xc8\xb4\x2a\x81\x81\xb1\xc8\x19\xad\x73\x46\x51\x84\x61\xcd\x59\x45\x2b\x9f\x4f\x0c\x0a\x61\xb1\x63\xc3\x54\x58\x28\x49\xe1\x97\x8f\x7f\xb6\x22\x8d\xce\x88\x72\x06\x46\x27\x57\xbd\x17\xf7\x71\xaa\x87\x86\xd7\xc6\x44\x95\x9c\x05\x88\x34\x56\x37\xf6\x01\x9e\xd9\xa6\x01\x7b\x14\xf6\x97\x28\xb0\x1a\xed\xd5\xe7\x92\x95\xfc\x7c\xa6\xd9\x22\x98\x1c\xeb\x08\x4e\x49\x02\xc6\x24\xdf\x5f\xf1\x4c\x75\x7c\xcb\x66\x1d\xd3\x43\xd9\xce\x76\x04\x77\x95\x44\x04\xa5\xc0\xb2\x50\x16\xd8\x54\x61\x46\xb8\xdc\xf6\xa9\x44\x39\x4d\xdb\x4a\xab\x39\xf2\xeb\x41\x93\x2e\x8e\xee\x32\x57\xae\x66\x98\x46\x8c\x59\x71\x41\x82\xac\xa2\xd2\xf1\xf5\xf4\x0d\xc5\xb0\xb7\x51\x31\x9c\xe6\xa4\xba\xae\x48\x6b\x4a\xd5\x20\x24\xe6\x41\xc9\xa8\xe2\xaf\xe5\x3f\x65\x3a\xf6\xb5\x05\x30\x03\x65\x8d\xc6\x31\x97\xed\x58\xda\xd2\x6e\x98\xf2\xfb\x9b\x5d\x42\xff\x26\xe3\x8f\x95\xcf\x62\x60\x99\x66\x22\x25\x7f\x4c\xae\x2e\x7d\x97\xca\x18\x76\x34\xec\x33\xa5\x4b\x54\xef\x33\xc5\xa4\xe5\xac\x77\x45\x98\xdc\x73\x3a\x0a\x45\xc9\xcd\xf5\x5c\x24\xab\xf0\x51\x63\x20\x35\xa6\x46\x0a\xdf\xc5\x51\x92\xee\x88\xc2\x54\x30\x2c\xe3\x9b\x45\xad\x75\xf1\x3a\x8c\x1e\xdd\x04\xc5\x35\x94\x36\xc5\xa9\x4b\x87\x01\xb4\x4a\x0e\x13\x4e\x4d\x1d\x28\xaf\x9a\x75\x9b\xa1\xcb\x92\xaa\xa4\x7b\xe8\xee\x61\xcb\xf4\x0c\x07\xb4\xe0\x7c\x8a\x53\xdf\x45\xb0\x9a\x13\xba\x94\x00\xc7\x2a\xa9\x4b\x54\xe1\x60\xb9\x26\xa6\x75\xb5\x77\x01\xba\xc5\x0e\x6c\x3d\xc9\xee\xb7\x18\x73\xf8\xe2\xe4\x3f\x37\x68\x6f\x63\x83\x68\x2e\x34\x38\x18\xce\x84\xcd\xeb\xa9\x1b\x07\x85\x35\x98\x40\x7e\x54\x58\x37\x77\x64\xf0\x66\x5c\xaa\xf3\x5c\x43\x9a\x33\xd7\x29\x01\x4e\x31\x0f\x13\xba\x4d\x53\x4e\x37\xeb\x33\x47\xbd\x26\x30\x26\x89\xd7\xed\xfd\x8a\xd7\xdd\x7d\x67\xe8\xbb\xbd\x0f\xb5\x86\xa9\xa7\x3f\x1d\x37\xa3\x94\x49\xb4\xa8\xac\x6f\xed\xcd\x90\x4c\xf6\x46\x6f\xde\xd6\x5c\x2f\x1c\x20\x7e\x39\xdc\x89\x76\x76\xa3\x6d\x37\x63\xbf\x71\x03\xa1\x67\x5d\x09\xc1\xd5\x56\x2f\x6d\x42\xd9\x8f\x34\xce\x71\x8b\x5e\x56\x4b\x37\xa7\xf4\xfa\xf0\xfe\xee\x9d\xcf\x9f\x60\xab\x17\xde\x97\x6c\x0e\x2c\xec\x47\x9c\x25\xf9\x3a\x05\xfe\xf0\xbe\xea\x15\x2a\x71\xf9\x10\x55\xcc\xe6\x74\x69\xa0\xc4\xaa\xc0\x96\xd1\x8b\x7f\xfb\x25\x8e\x07\x61\xd8\x87\xf1\x18\x1b\x06\x8e\xf1\xb7\x93\x2c\x25\x3e\x78\x00\x57\x02\x73\x65\x2c\x51\x5f\xb1\x2f\x5f\xb4\x88\xfd\x7b\x66\xf2\x95\xc8\xfb\x5e\x67\xcb\x4c\xfc\xe1\x84\x02\x5b\x3e\xb7\x4e\x52\x18\xa3\x7b\x57\x9c\xfd\xc1\xf2\xe4\x10\x6f\x7a\xbc\x6f\xe8\x34\xfc\x99\x14\x8d\x43\x78\xd8\x52\x81\x1d\x06\x15\xec\xf4\xe1\x61\xf8\x6b\xd8\x7f\x7c\xb3\x78\x62\x5f\x2a\x8a\x0a\x2e\x67\x36\x87\x27\x2d\xdd\x07\x5d\x6d\x6b\x24\x8d\x11\x07\xd8\x76\x0b\xc3\xdb\x4a\x3e\x7f\x22\xbc\x1b\xb2\xae\x7b\xee\x47\x46\xf8\xc3\xe7\x59\x66\xda\x96\x44\xca\xbd\xe8\xf5\x23\xab\xaa\xc7\x34\xb2\x5f\xe7\xf5\x78\xf4\xa3\x04\x5d\xbc\xb8\x16\xeb\x76\xc6\x6f\xf5\x02\x97\x16\x85\x00\x16\x50\xf2\x94\x38\x00\x1e\x51\x99\xf5\x02\x9a\x74\xe7\x3c\x20\x60\xba\x2c\x5e\x34\x4b\x53\x4f\x18\x7a\xc2\x2e\x82\x2b\x43\x42\xfa\x90\x1d\x00\x7d\x8a\x61\xee\xe1\xc8\x8c\xf7\x02\xef\xbd\xc7\xe4\x55\x45\x71\xa6\xaa\x83\x8e\x93\x1f\x06\xb0\xb3\xbd\xbd\x7d\xa3\x2c\xcd\x6d\xad\xe5\x4d\x40\xe2\xef\x43\x87\xe5\xc3\x72\xed\x17\xee\xf0\xee\x1d\xf7\x68\x57\x50\xbc\xfc\x40\x8c\x9b\xcf\xf7\xbf\x02\x00\x00\xff\xff\x83\x82\x03\xd2\xd0\x0f\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 4048, mode: os.FileMode(493), modTime: time.Unix(1457012055, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _registrationHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x58\x7b\x6f\xdb\xba\x15\xff\x7b\x05\xfa\x1d\x38\xae\x98\x12\x20\x96\x1c\xe7\xe5\xa6\x96\x8b\xa0\x0f\xa0\x7f\x14\x0d\xb0\x14\x43\xb1\x15\x05\x2d\x1d\x49\x4c\x28\x51\x25\x29\x27\x5e\xd7\xef\x7e\x0f\x29\xc9\xf1\x43\x76\xe2\xdb\xe6\x1a\x08\x42\x52\xbf\xf3\x7e\xe8\x50\xa3\xbf\xbf\xfd\xf4\xe6\xea\xcb\xe5\x3b\x92\x99\x5c\x8c\x9f\x3f\x1b\xd9\xff\x44\xb0\x22\x0d\x29\x14\x14\x4f\x08\x19\x65\xc0\x62\x5c\xfd\x8d\xe0\x3a\x07\xc3\x10\x6c\xca\x1e\x7c\xaf\xf8\x34\xa4\x6f\x64\x61\xa0\x30\xbd\xab\x59\x09\x94\x44\xf5\x2e\xa4\x06\xee\x4c\x60\x99\xbd\x22\x51\xc6\x94\x06\x13\x56\x26\xe9\x0d\x29\x09\x1c\x53\xf7\x1b\x19\x6e\x04\x8c\x3f\x18\x4f\x93\x2f\xb2\x22\x9f\x0a\xc1\x0b\x18\x05\xf5\xf1\xf3\x67\xf7\x40\x3c\xbf\x21\x0a\x44\xe8\x69\x33\x13\xa0\x33\x00\x43\x4a\x05\x09\x98\x28\xf3\x48\x86\xab\xd0\xb3\x6a\xe9\xf3\x20\x60\xd7\xec\xce\x4f\xa5\x4c\x05\xb0\x92\x6b\x3f\x92\xb9\x3b\x0b\x04\x9f\xe8\x00\x6d\xab\x04\x53\xdf\x72\x66\x40\x71\x26\x82\x43\xbf\xef\xf7\xdb\xe3\x5e\x7b\xec\xe7\xbc\xf0\x23\xad\xbd\x71\x87\x16\xf4\x5e\x0b\x5a\x0b\xa7\x4c\xa3\x8d\x3a\x40\x8a\xc0\x3d\xb4\xb4\x34\xd8\x9d\x38\x41\x0f\xf6\xd8\x2d\x68\x99\x43\xab\xc3\x3a\x9f\x7b\x83\xd1\x5e\x4b\xa2\x57\x0d\x46\xb2\xd7\x09\xcb\xb9\x98\x85\xff\x06\x21\x12\x81\xe2\xfe\x7f\xa1\xa6\xf2\xfc\xb8\xdf\x3f\x38\xc3\x3f\xfc\xcf\x0d\x13\x3c\xb2\xbb\x7a\xe5\xad\xfa\xd8\x23\x06\xe3\x1a\x7a\x2e\x9c\xcb\xde\x20\x23\x07\x5b\x0c\x93\xfb\xfd\xa7\x48\xff\x7b\x1e\x09\xc9\x6e\xbe\x1e\xd8\x4d\xaf\x5d\xfb\xed\x9a\xfc\x58\xa6\xb0\xbf\x98\xeb\x52\xb0\xd9\x39\x29\x64\x01\xaf\x96\x9f\xff\x5c\x90\x19\xb4\x42\x71\xd9\xe4\x25\x66\xed\x44\xc6\x33\x82\xec\x59\x59\x86\x54\x41\xca\xb5\x51\xcc\x70\x59\x5c\x94\x25\xad\x21\x16\x0c\x8a\xf0\x38\xa4\xf5\xb2\x49\xee\x98\x4f\x49\x24\x30\x00\x21\x6d\x92\x97\x36\x36\xba\x47\x16\x2f\x64\x2a\xe9\x78\xc4\x9a\x60\x65\x18\x19\x3a\x26\x1f\x8c\xc6\x9c\xf5\xeb\x9c\x45\x6d\xd8\x78\x14\x20\xc5\x22\x71\xc3\x57\xf3\xb4\xe8\xdd\x2a\x56\xd2\xb9\xf7\xe6\xcc\x90\x37\xc7\x3a\x1b\xf1\x16\x9c\x30\x92\xb0\x9e\x23\x71\x0f\x02\x3e\xfe\x17\x6e\x08\x2f\xac\x88\x86\xf9\x5c\x50\xbb\xaa\x9d\x01\xca\xd9\x8a\xdb\x05\xe9\x49\x25\x84\x8e\x14\x40\x91\x48\x95\xcf\x8d\xb3\x1b\x32\x8f\x08\x96\x75\x26\xd1\xd4\x52\x6a\x4c\x4a\x16\x59\xdf\xb5\x9e\x44\x57\x61\x47\x98\xc9\xca\x58\x17\x89\x2a\x2f\x28\x29\x58\x0e\xb5\x61\x55\xe9\xd8\x92\x45\xbb\x91\x2d\x2f\xb8\xc1\x44\x9a\x03\x7c\x0d\x6a\x0a\x4a\xf3\x18\xa6\x98\x69\xb1\x8b\x0e\x28\x25\x95\x26\x21\xf9\x41\x79\xe1\x8e\x6d\xd6\x9b\x8c\x17\x29\x3d\x27\x46\x55\xf0\xd3\x5b\xf7\x2a\xa6\xf2\xdd\x5c\x21\x25\x6f\x29\x69\x76\xbd\x3b\x3d\xd7\x70\x31\x4f\x5b\xa2\x90\x9e\xf4\xd7\x4c\x19\x2f\xe7\xda\x28\x8f\x51\xf7\x12\x99\xd9\x6c\x60\x18\x5a\x35\x5e\xcf\xd6\x91\x60\x13\x10\xe3\xcf\x68\x94\xf5\xc4\x28\xa8\xf7\x1d\x40\xc7\xcb\x3a\x24\x97\xb1\xad\xfd\x3a\xde\x04\xa5\xe4\xec\x4e\x40\x91\x9a\x2c\xa4\x47\xa8\x16\x96\x7a\xbb\x1d\x50\x2c\x43\xec\xae\x0a\xe2\xc6\xd1\x0d\x95\xab\x45\xd7\x5a\x31\x46\x95\x91\x89\x8c\x2a\xdd\x25\xb5\x09\x42\x0e\x5a\xb3\x14\xf4\x62\xa4\xb6\x04\xc2\xa9\x65\xf9\xf6\x32\x7c\x6a\x53\x51\x68\x58\x75\x50\xa7\x84\x90\xc6\x55\x89\xfd\x03\x7b\x67\xd5\xf8\x84\x8e\xaf\x32\xae\x49\xbb\x25\xb8\x66\x42\x61\x92\xce\x88\x61\x37\x50\x2c\x86\x75\x89\x73\xc7\xf9\x28\xe8\x8c\xca\x2f\x44\xee\x5d\xce\xb8\xd8\x21\x6c\x60\xf1\x6b\x61\x69\x4e\xeb\xb0\xd4\x9b\x27\xd7\xfc\x12\x8b\xfa\x56\xaa\x78\x07\xe5\xcb\x86\x64\x4d\xff\xfb\x07\xb5\x09\xf3\xfd\x5f\x66\x85\x1d\x18\x12\xae\x72\x97\x85\x7f\xc2\xa4\xfb\x14\xde\x68\xdc\x22\x04\x19\x94\xcc\x60\x47\x2b\x1e\x6f\xbc\x93\xbf\xad\xa0\xd6\x05\xf9\x2f\x5c\x41\x75\x97\x4e\x47\xf1\x34\x3a\x35\x25\x13\x4b\xd0\xf8\x1a\x34\x04\xbd\x12\x65\xc4\x64\x40\xca\x79\xd0\x7f\xb9\x68\x36\x91\xac\xb7\xd6\x0d\x0d\xb2\xb3\x05\x77\xe9\xa4\x4b\x56\x38\x24\xb6\x70\xbb\xde\xe4\xd7\xd5\x77\x4b\xdd\xaa\x4f\xfb\x1b\xdd\xf7\xa8\x44\x9b\xa3\xeb\x9c\x1a\xf4\xde\xe3\x5b\x4d\x2a\xdb\x37\x33\x7c\xc9\xdb\x5e\x85\x91\xc2\xfc\x8b\xb7\xb4\xef\x39\x93\xd5\xfc\x33\xd2\x94\x96\x74\xb5\x93\x9f\x2e\x35\xf2\xd3\xb5\xa4\x9c\xd3\x6d\x13\xf6\xe4\xdd\x7b\x83\xa4\xb0\x7d\x0b\xdf\x6b\x79\x61\x07\x0f\x77\xe6\x3c\x45\x6e\x99\x26\x29\x9f\x6e\x6e\xdf\x73\xd6\x5b\x9e\x3f\x90\x99\x4b\xd0\xef\xca\xc9\x75\x36\xdb\x91\x04\x5d\xea\xcc\x45\x4a\xa5\xc0\xcd\x29\x3d\x01\x53\x1b\x93\x8f\x94\x68\xfe\x3f\xb4\x62\xd0\xc7\xf7\x29\xba\x86\x85\x14\x0d\xb1\x01\xc7\x21\xd9\xda\x14\x34\x33\x9b\x74\x33\xdb\x6b\x0d\x38\x16\x99\xf0\x70\x70\x74\xbc\xf8\xf7\x4f\xae\x75\x05\x2a\x5c\x1a\xf0\xda\x49\x7d\x1b\xc3\xf3\xdd\x38\x62\x59\xd4\xd6\x3d\xb2\xa0\xdd\xf9\x03\x45\xd5\xd2\xad\xd7\xf9\xf2\xe4\xb8\x52\xf7\x5b\x4a\xf9\x41\x89\x18\xcb\x49\x65\x0c\xd6\x52\xdd\x47\x75\x35\xc9\x39\x0e\x28\xcd\xf8\x89\x8f\x15\xe3\x1a\x2b\x00\x57\xa5\xe2\x39\x53\x33\x5a\x8f\xb4\x55\xe9\x32\xa1\xa6\xde\x41\xec\xd2\x44\x18\xd8\xb2\x70\x13\x70\x6b\x19\xae\x71\xde\xe5\xa5\x21\x5a\x45\x3b\xde\x0a\xaf\x35\x5e\x07\x8f\xfd\x61\xbb\xf7\xaf\xb5\x9d\x40\x6b\x7e\xe3\xdf\xc9\xb9\xc7\x0a\x6e\xef\x9a\xee\x8e\xf7\x74\x52\xda\x26\xf2\xc4\x62\x18\x5e\x99\x7f\xaf\x88\x47\xdd\xcf\xbb\xa5\x35\xa9\xd1\x86\x10\x5b\x76\x25\x60\xcf\x5b\xb9\x17\x7a\x78\x3b\xf5\x8a\xf4\x63\xc3\xcf\x3b\xb0\x9b\xc6\x5b\xb8\xc9\x65\x21\x31\xef\x22\x88\xfd\xba\x4a\xbd\xaf\xfb\xf7\x29\xe8\xbb\xb9\x25\xdd\x4b\xaa\xc2\xf5\xa0\xbd\x17\x79\x7c\x95\x01\xea\x94\x5e\x2a\x39\xc5\x06\xac\xf6\x57\xaf\xb9\xeb\x10\x3f\x86\x04\x3b\xc1\x25\x13\x80\x03\xc0\x9e\x37\x11\x15\x70\x9d\xa1\x66\x1d\x37\x64\xef\xa4\xef\x9d\x13\xef\x1f\xc9\x59\x32\x49\x62\xef\xa0\x03\x71\xd8\xaf\x21\x13\xbc\x0a\x42\x37\x64\xd0\x40\x86\x10\x0d\x61\xd0\x09\x39\x6a\x20\x27\x27\x2c\x8e\x8f\x3a\x21\xc7\x0d\xe4\x28\x62\x87\x51\xb7\xa0\x93\x16\xd2\x7f\x79\x38\x99\x74\x42\x4e\x1b\xc8\x80\x9d\x01\xeb\x16\x74\xd6\x42\x8e\x4e\x27\x43\xd6\x09\x19\x36\x90\xc3\xf8\x64\x78\xd6\x6d\xd1\xcb\x16\x72\x76\x8c\x46\x75\x42\x2e\x5a\xdf\x6d\x71\xef\xc5\xe0\x61\xff\x5e\x3c\xc2\x35\x17\x8f\xb0\xca\xbe\x18\x15\xd3\xe6\x2d\x24\xac\x12\xe6\x8d\x14\x52\x59\x1a\xc1\xd3\xcc\x6c\xa7\x60\xea\xc6\xc1\xb5\xc5\x9f\xf4\x09\x5a\x46\x50\x73\x82\x71\x25\xa8\x1d\xb1\xa6\x12\x6b\x0b\x71\xca\xae\x7c\x6b\xd9\x7f\xf5\x60\xd6\xe2\x00\x95\x63\xb6\xc6\xb5\x6a\xde\xfe\xba\x32\x7e\xd3\xe8\xd7\x32\x7b\x01\xeb\x24\x6d\x68\x15\xd4\x64\x5c\xc5\x25\x53\x66\xd6\x7c\x1a\xab\x6b\xb0\x97\x02\xce\x0a\x0c\xe7\xb8\xe0\xba\x3d\xc3\x26\x40\x37\xb5\x9c\x5d\xf8\x7c\xfb\x7c\xf5\x7e\xb8\x1b\xb3\xb6\x27\xd5\x0c\x56\xb6\xab\xac\xac\xb1\xf6\x3b\x55\xfd\xb5\xa6\xfe\xdc\xfa\x47\x00\x00\x00\xff\xff\x85\xc7\x94\x69\x80\x15\x00\x00")

func registrationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_registrationHtml,
		"registration.html",
	)
}

func registrationHtml() (*asset, error) {
	bytes, err := registrationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "registration.html", size: 5504, mode: os.FileMode(420), modTime: time.Unix(1457122523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loginHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x69\x6f\xdc\x36\x13\xfe\xfc\xee\xaf\xe0\xcb\x16\x50\x0c\x58\xd2\xfa\xde\x38\x92\x0a\x23\x69\x81\x00\x2d\x62\x14\x29\x8a\xa0\x0d\x0a\xae\x34\x92\x98\x50\xa4\x4a\x52\x6b\x2f\xd2\xfc\xf7\x0e\x75\xec\x25\x39\x4e\x8a\x44\x80\x61\x92\xf3\xcc\xf1\xcc\x0c\x8f\x8d\xfe\xff\xe2\xd5\xf3\xd7\x6f\x6e\x7f\x24\xa5\xad\x44\x32\x8b\xdc\x3f\x22\x98\x2c\x62\x0a\x92\x26\x33\x42\xa2\x12\x58\x96\xcc\xfe\x47\x70\x58\x81\x65\x88\xb4\xb5\x0f\x7f\x37\x7c\x15\xd3\xe7\x4a\x5a\x90\xd6\x7f\xbd\xae\x81\x92\xb4\x9b\xc5\xd4\xc2\xbd\x0d\x9d\xa9\x67\x24\x2d\x99\x36\x60\xe3\xc6\xe6\xfe\x82\x92\xd0\x99\x6c\xbf\xc8\x72\x2b\x20\xf9\x59\x15\x84\x4b\xe2\x93\x97\xd6\x33\xe4\x8d\x6a\xc8\x2b\x29\xb8\x84\x28\xec\xe4\xb3\x0d\x1e\x57\xdf\x13\x0d\x22\xf6\x8c\x5d\x0b\x30\x25\x80\x25\xb5\x86\x1c\x6c\x5a\x7a\xa4\xc4\x51\xec\xb9\xe0\xcc\x75\x18\xb2\x77\xec\x3e\x28\x94\x2a\x04\xb0\x9a\x9b\x20\x55\x55\xbb\x16\x0a\xbe\x34\x21\xf2\x6b\x04\xd3\x7f\x55\xcc\x82\xe6\x4c\x84\x27\xc1\x3c\x98\x0f\xcb\xfe\xb0\x1c\x54\x5c\x06\xa9\x31\x5e\x32\x0e\x82\x6e\x83\xa0\x9d\x6f\xca\x0c\x12\x35\x21\x2a\x84\xad\xd0\xa9\xd2\xf0\x8b\x75\x73\xcc\xa2\xcf\xee\xc0\xa8\x0a\x86\x08\x46\x66\xb6\x6c\x91\xac\xd3\x30\x87\x6c\x51\xeb\x87\x9c\x55\x5c\xac\xe3\xdf\x41\x88\x5c\xa0\xb7\x7f\x6e\xf4\x4a\x5d\x9f\xcf\xe7\xc7\x57\xf8\x87\xff\xb9\x65\x82\xa7\x6e\xd6\x8d\xbc\xc3\x04\x7b\xc4\x62\x69\x63\xaf\xad\xe8\x5e\x2a\x48\xd4\xa2\xb6\x05\x6a\xbf\x3f\x64\xf1\xe7\x75\x2a\x14\x7b\xff\xf6\xd8\x4d\xfc\x61\x1c\x0c\x63\xf2\x61\x4f\xc1\x7d\x19\x37\xb5\x60\xeb\x6b\x22\x95\x84\x67\x7b\xe2\x8f\x5b\x77\x61\xef\x0f\x47\x5d\x4b\xce\xa2\xa5\xca\xd6\x04\x0d\xb3\xba\x8e\xa9\x50\x05\x97\x37\x75\x4d\x9d\xc4\x21\x40\x13\x9e\xc5\xb4\x1b\x76\xbd\x9c\xf1\x15\x49\x05\x26\x3b\xa6\x7d\xb3\xd2\x8e\x50\x2b\x71\x68\xb4\xa2\x68\x12\xb1\xbe\x2e\x25\x16\x81\x26\xd8\x9c\x06\x5b\x33\xe8\x5a\x13\x03\x60\x49\x14\xa2\xc6\x8e\x6e\x6f\xd5\xf0\x42\xfa\x77\x9a\xd5\x74\x48\xd4\xc6\x94\x86\x82\x1b\xeb\x22\x89\xf8\x00\xcf\x19\xc9\x99\xdf\x18\xd0\x7e\x2d\x1a\x83\xa2\x90\x27\xbf\xf6\x40\xe7\xa6\x73\x30\xf8\xea\x07\x5d\x02\x40\x23\xd1\xd9\xae\xf3\xbc\x11\xc2\xa4\x1a\x40\xe6\x4a\x57\x03\x33\x37\x26\x9b\xec\xe3\x16\x2e\x15\xf2\xac\x95\xc1\xe6\x63\xa9\xe5\x4a\xf6\xb9\xa3\xb8\xf1\xd7\xaa\xb1\x2e\x37\xa2\xa9\x70\x2e\x59\x05\xbd\xb0\xb5\x48\x76\x08\xa3\x45\x2e\xb9\x8d\xbd\x8d\x38\x40\x1a\x2b\xd0\x86\x67\xb0\xc2\x66\xca\x98\xb3\x0d\x5a\x2b\x6d\x48\x4c\x3e\x50\x2e\xdb\x65\xd7\xd7\xb6\xe4\xb2\xa0\xd7\xc4\xea\x06\x3e\x7a\xa3\x64\x62\xb3\xde\x6f\x82\xd1\xea\x8e\xee\x74\xdd\x20\xdf\x55\xda\x08\x0e\x09\x38\xa0\x5f\x58\xff\x1e\xb3\x73\x3e\xef\xe7\x6e\x72\x32\x9f\xef\x18\x6d\xf5\xab\x0c\x09\xd5\x8d\xf5\x5d\x67\x30\xac\xb3\x4e\x46\x9d\x1a\x09\xb6\x04\x91\xfc\x86\x4c\x5d\x6e\xa2\xb0\x9b\x8f\x71\xad\x25\x97\xa3\x4a\x65\x6e\xc7\xf7\x09\xc6\xed\x2c\x40\x16\xb6\x8c\xe9\x29\xc5\xbd\x86\xa7\xa8\x86\x6c\x37\xcf\xb4\xdb\x70\xed\x11\x8a\xf5\x69\xac\xca\x55\xda\x98\x83\x58\xc3\xa9\x60\xff\x33\x9d\x5b\xec\x9e\x3b\xa5\xb3\xcf\xa7\x53\xf7\x1a\x23\x0e\x5b\x41\x47\x63\x33\xff\xa6\x04\x4e\xfd\x9f\xb0\x93\x95\x76\xf9\x2a\x71\x53\xf3\xb4\xed\x3d\xbc\x90\xb2\x2f\xa8\x91\x55\xb6\x76\x1a\x58\xa6\x0c\xef\x80\xfb\xa1\x52\x97\x7b\x75\xbb\x1c\x71\xde\xe8\x7d\x0e\xc7\xad\x74\xdc\xbd\x87\x6d\xdd\x0f\xa7\x5b\x7c\x7f\x5b\xb4\x62\x53\x33\x39\x18\x71\xe3\x03\xf1\xc4\x06\x99\xc8\x0a\x06\xbd\x6c\xac\xc5\xec\x75\x15\x34\xcd\xb2\xe2\xd8\x8a\xfd\x19\x83\x62\xcd\xb8\x41\xf2\x38\xaa\x35\xaf\x98\x5e\xd3\xfe\x16\x6f\x19\x77\xca\x13\x86\xfb\x43\xa3\x02\x63\x58\x01\x66\xe7\x5c\xf9\xc4\xc1\xd1\xd6\xc2\xed\x02\xbf\x44\xa9\x3b\x30\x85\x81\x4d\x30\x2d\x66\x82\xc4\x84\xbf\x78\x38\x7e\xf0\x7c\xcc\x5c\x8b\xa0\x21\x9a\xbc\xec\xd6\xc8\xce\xe2\x41\x61\x1e\xa8\xd7\x43\x4b\x0f\x97\x60\xb7\x98\x51\xe8\x68\xbb\x83\xbc\x5b\x9b\x45\x78\x6c\xf3\xda\x12\xa3\xd3\x2f\x7c\xc3\xbc\x33\xf8\x78\x39\x0f\x16\xc3\x3c\x78\x67\xdc\x79\xda\xd9\x4b\xbe\xa2\x61\x9f\x49\xee\x1e\x46\xed\x93\xe4\x9b\x39\x19\xba\xe3\xdb\x7a\x61\xf8\xba\xfb\xaa\x1e\x3e\xeb\x25\x39\xe9\xac\x6b\x90\xa1\x78\x78\x12\x35\x02\x9e\x78\xc3\x5b\xc6\xc3\x47\x94\x27\x8b\x5f\x7a\x33\xde\xb1\x9b\xf4\x29\xf2\xde\x1e\x6d\x9a\x0b\xa3\x92\x39\x2f\x9e\xe4\x8d\x6c\x6f\xf4\x27\xdf\x57\xd9\xeb\x12\xd0\x6b\x71\xab\xd5\x0a\xb7\x8e\x3e\x3a\x78\x78\x8d\x11\x41\x06\x39\x1e\x52\xb7\x4c\x80\xb5\x18\xc4\x52\x34\xc0\x4d\x89\x31\x8c\x9f\x6c\xde\xc5\xdc\xbb\x26\xde\x77\xf9\x55\xbe\xcc\x33\xef\x78\x0c\xc0\x1b\xb6\x45\x2c\xf1\xa5\x02\x93\x88\xd3\x1e\xb1\x80\x74\x01\xa7\x53\x88\xb3\x1e\x71\x71\xc1\xb2\xec\x6c\x0a\x71\xde\x23\xce\x52\x76\x92\x4e\x7a\xb9\x18\x10\xf3\xa7\x27\xcb\xe5\x14\xe2\xb2\x47\x9c\xb2\x2b\x60\x93\x5e\xae\x06\xc4\xd9\xe5\x72\xc1\xa6\x10\x8b\x1e\x71\x92\x5d\x2c\xae\x26\xb9\x3c\x1d\x10\x57\xe7\x48\x67\x0a\x71\x33\xa4\xec\xe1\xa4\xde\x9c\x3e\x9a\xd5\x9b\xc7\x53\x72\xf3\x38\x1f\x77\x63\x69\x66\xec\x0b\xc8\x59\x23\xec\x73\x25\x94\x76\x2a\x82\x17\xa5\xfd\xa4\x02\xd3\xef\x5b\xb4\x71\xf0\x8b\x39\x41\x52\x04\xa3\x26\x58\x4b\x82\xa1\x11\xc7\x92\x38\x1e\xa4\x8d\x74\xff\xb5\x7f\xf4\xec\xb1\x1e\xc5\xfb\xbd\xc2\xde\xcc\xba\xb8\xbc\xa3\x51\x24\x41\x7f\x29\x8d\xda\x78\x0b\x75\x6e\x76\x36\x62\xe8\x7e\x46\xb4\xaf\xea\xf6\x37\xf0\xbf\x01\x00\x00\xff\xff\x11\x48\xc4\xbf\x14\x0f\x00\x00")

func loginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_loginHtml,
		"login.html",
	)
}

func loginHtml() (*asset, error) {
	bytes, err := loginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "login.html", size: 3860, mode: os.FileMode(420), modTime: time.Unix(1456406075, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _homeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x6b\x6f\xdb\x36\x17\xfe\xfc\xfa\x57\xf0\x55\x0b\x28\x01\x22\xc9\xb9\x35\x6e\x62\x6b\x30\xd2\x7d\xe8\x87\x2e\xc5\xd6\x61\x28\xb6\x62\xa0\xa5\x23\x99\x0d\x45\xaa\x24\x65\xc7\xdb\xfa\xdf\x77\xa8\x8b\x2d\x5b\x72\x93\x34\x2d\x30\x01\x81\x49\xf1\x39\x97\xe7\x5c\x48\x2a\xe3\xff\xbf\xba\xb9\x7e\xf7\xfe\xed\x8f\x64\x6e\x32\x1e\x0e\xc6\xf6\x87\x70\x2a\xd2\x89\x03\xc2\x09\x07\x84\x8c\xe7\x40\xe3\x70\xf0\x3f\x82\xc3\x0c\x0c\x45\xa4\xc9\x3d\xf8\x54\xb0\xc5\xc4\xb9\x96\xc2\x80\x30\xde\xbb\x55\x0e\x0e\x89\xaa\xd9\xc4\x31\x70\x67\x02\xab\xea\x8a\x44\x73\xaa\x34\x98\x49\x61\x12\x6f\xe4\x90\xc0\xaa\x2c\x9f\xb1\x61\x86\x43\xf8\xda\xb8\x9a\xbc\x97\x05\xb9\x11\x9c\x09\x18\x07\xd5\xeb\xc1\x1a\x86\x6f\x6f\x89\x02\x3e\x71\xb5\x59\x71\xd0\x73\x00\x43\x72\x05\x09\x98\x68\xee\x92\x39\x8e\x26\xae\xf5\x49\x5f\x06\x01\xfd\x48\xef\xfc\x54\xca\x94\x03\xcd\x99\xf6\x23\x99\x95\xef\x02\xce\x66\x3a\x40\x5a\x05\xa7\xea\xcf\x8c\x1a\x50\x8c\xf2\xe0\xd8\x1f\xfa\xc3\xe6\xb5\xd7\xbc\xf6\x33\x26\xfc\x48\x6b\x37\xec\x3a\xe1\x6c\x9c\x70\x2a\xdb\x0e\xd5\xc8\x4f\x07\x28\x10\x94\x8b\x56\xd4\x09\x1e\x2d\x9b\x60\xf0\x3c\xba\x04\x2d\x33\x68\x3c\xe8\xa8\xd9\xb0\x45\xb2\x56\x42\xef\xb2\x45\xa9\x1f\x12\x9a\x31\xbe\x9a\xfc\x06\x9c\x27\x1c\xad\xfd\x33\x55\x0b\x79\x79\x36\x1c\x1e\x5d\xe0\x1f\xfe\x32\x43\x39\x8b\xec\xac\x1a\xb9\xbb\x01\x76\x89\xc1\x8c\x4e\xdc\x32\x91\x5b\xa1\x20\xe3\x12\xb5\x49\x50\xf9\xfc\x2e\xd2\x3f\x2e\x23\x2e\xe9\xed\x87\x23\x3b\xf1\x9a\xb1\xdf\x8c\xc9\xdf\x5b\x02\xf6\x89\x99\xce\x39\x5d\x5d\x12\x21\x05\x5c\x6d\x2d\x7f\xde\x98\x0b\x6a\x7b\x38\xaa\x2a\x71\x30\x9e\xc9\x78\x45\x50\x31\xcd\xf3\x89\xc3\x8c\x5e\xc9\x42\x96\xd5\x33\xcd\x73\xc7\x02\x2c\x10\x14\x61\xf1\xc4\xa9\x86\x55\x25\xc7\x6c\x41\x22\x8e\x31\x9f\x38\x75\xa9\x3a\x15\xaf\x72\xc5\xa2\xb9\x4c\xa5\x13\x8e\x69\x9d\x9e\x67\x4e\x48\x5e\x1b\x8d\xe5\xe9\x57\xe5\x89\x4e\xd0\x70\x1c\x20\xbc\x0e\x40\x5b\xa7\x66\xa9\xf0\x96\x8a\xe6\x4e\x2b\x5a\x8d\x2a\x21\x0d\x4b\x58\x44\x0d\x93\x42\xa3\x09\xd6\x48\x25\x94\x24\xd4\x9b\x61\xae\xf0\x6d\xc0\xc2\xad\x38\x8c\xb3\xd8\x33\x52\x72\xc3\x72\xd2\x44\x72\x1b\x61\x5b\x67\x4e\x17\x80\x41\x24\x32\x07\x81\x99\xfc\x54\x80\x36\x7a\x5b\x4f\xb0\x51\xd4\x72\x0e\xc9\x0c\xda\xa6\x32\x10\x05\xc1\x5f\x99\x24\xb6\x67\x1d\xef\x9c\x9c\x0e\x9d\x1d\x97\x1a\x46\x4e\xe5\x11\x8b\x6e\x27\xce\xf3\x2c\xbe\x41\xe3\x6f\x50\xfe\xe0\x39\x2c\x30\xb2\x87\x5d\x8e\x39\x2f\x74\xc5\x71\x77\x25\xa2\x0a\x8c\x17\xcb\xa5\xe8\x89\xc1\x43\xa2\x60\x9f\x6b\x05\xd8\xc0\x44\xc0\xd2\xf7\xfd\x5d\x0d\xbd\xfc\x3b\x31\x68\xc7\xc1\xab\x4b\x64\xbf\xc5\x35\x92\x19\xc8\x42\x3b\x9b\x15\xc6\x48\xd1\x14\x0f\x7a\x22\x55\x4a\x05\xfb\xab\xcc\xba\x13\xfe\x04\x4b\xd2\x7e\x53\x7a\x55\xc9\x84\xe5\x78\xa3\xed\x2b\x6c\x61\xf7\xe7\x54\xac\x2a\x33\xf5\xe4\xc1\x16\x36\x8b\x35\xed\x76\x95\xd4\x4b\xeb\x9e\x5f\x97\x80\x6d\x97\xc2\x74\x33\x5d\x76\x42\xb5\x82\xd9\xfc\x05\x67\x04\x67\xeb\x50\xd7\x0d\xb4\x1e\x54\x9d\x0d\x0a\x0d\x0c\xda\x0d\x95\x14\x9c\xeb\x48\x01\x88\x44\xaa\xac\xdd\xab\xb8\xad\xdd\xe1\x31\x85\x8d\x8f\x55\xaa\xe4\xb2\xdd\x71\xcd\x7a\xb8\x36\xd3\x5a\x68\x64\x22\xc9\x8b\x4c\x38\x25\xd0\x4b\x8d\x77\x87\xe6\x46\xc3\x7a\x6e\x27\xc7\xc3\x4e\xe1\x5b\x79\x2c\x86\x05\x83\x65\x47\x77\x8f\xa9\x5d\x1f\xd6\x64\xab\xdd\x63\x30\x46\x6a\x2c\x37\x44\xab\xe8\x91\x07\xd8\x47\x8d\x27\xd7\x99\x3f\x6a\xe6\xfe\x47\xdc\xa0\x71\xa3\x2c\xf5\x85\x5b\x8a\x9d\x27\x29\xf6\x14\x06\x0b\x50\xbd\xb3\x47\xfd\xd3\xfc\xc6\xaa\xd2\x9a\xa6\xa0\xcb\xf3\x6e\x3f\x89\x27\x5a\xc1\x7e\xb3\x47\xfb\x77\x36\x82\x37\x87\x6f\x6a\xe1\x41\xb7\x94\x5e\x63\x55\xb9\x35\xb5\x91\xc9\xb8\xe0\x70\xe0\xee\x9c\x93\x2e\x9e\xd3\xae\x48\xdf\xd4\xda\xdc\x23\x9c\xfc\x6c\xb3\x8d\x0b\xf6\x7d\x9d\x19\xf7\xc3\xe1\xba\xaa\xd1\x4f\x91\xb0\xf4\x20\x29\x44\x64\xb7\xaf\x03\xdc\xf5\xdf\xcd\x01\xfd\x48\xdf\x2a\xb9\x60\xd8\xc1\x87\x3b\xc7\x7c\x17\xe1\xc7\x90\xa0\x07\x6f\x29\x07\x63\xd0\xad\x19\x2f\x80\xe9\x39\x5a\xed\x5e\x10\xdc\xf3\xa1\x7b\x49\xdc\x67\xc9\x45\x32\x4b\x62\xf7\xa8\x0b\xc0\x2e\x2d\x11\x33\xdc\x3e\xa0\x17\x71\x52\x23\x46\x10\x8d\xe0\xa4\x0f\x71\x5a\x23\xce\xcf\x69\x1c\x9f\xf6\x21\xce\x6a\xc4\x69\x44\x8f\xa3\x5e\x2b\xe7\x0d\x62\xf8\xf2\x78\x36\xeb\x43\xbc\xa8\x11\x27\xf4\x02\x68\xaf\x95\x8b\x06\x71\xfa\x62\x36\xa2\x7d\x88\x51\x8d\x38\x8e\xcf\x47\x17\xbd\x5c\x5e\x36\x88\x8b\x33\xa4\xd3\x87\x98\x36\x21\xdb\x1f\xd4\xe9\xc9\xbd\x51\x9d\xde\x1f\x92\xe9\xfd\x7c\xec\x51\xa3\xa8\x36\xaf\x20\xa1\x05\x37\xd7\x92\x4b\x65\x45\x38\x4b\xe7\xe6\x8b\x02\x54\xdd\x96\x68\x6d\xe1\xe7\x43\x82\xa4\x08\x7a\x8d\xb7\x95\x21\x41\xd7\x88\x65\x49\x2c\x0f\x52\x7a\xba\x7d\xb7\x3c\xbc\xba\xaf\x46\x0d\xce\xb1\x36\xe3\xca\x2f\xf7\xb0\xe3\x89\x9f\x2b\xdc\x53\xd4\xaa\x53\xc6\x1b\xe8\xe7\x2f\x35\x4e\xb9\xaf\xee\x6d\x9a\xad\xd5\xae\xed\xe5\x1c\xc4\x81\x1b\xec\x5c\x2f\x7a\x3b\xc8\x3e\x78\xd8\xe3\x35\xdb\xc0\xaf\x8a\x5f\xda\x10\x66\x39\x5e\xb7\xf1\xcb\x21\x68\x4b\x07\xf6\x54\xd3\x56\xa7\x6f\xbf\xdb\x7a\x82\x6f\x9f\x32\xfe\x92\x73\x50\xa8\xe9\xa6\x25\x7e\xbd\x5e\xb8\x57\x72\xaa\x51\x76\x91\xb9\x1d\xd8\xe7\x9e\x30\xd7\x54\xdb\x9e\xea\xe0\x32\xe5\x72\x86\x9f\x2d\xf1\x37\xa1\x1c\xe3\x37\x2d\xe3\xff\x45\xd6\x9b\x3b\xdd\xe3\x89\xd6\x82\x5f\x91\xd6\xeb\x4a\xf2\x3b\x73\xab\xfc\x63\xf0\xa4\x6c\x6e\x93\x7c\x64\x22\xbf\x1f\xcf\xab\xd6\x1e\x70\x35\xd8\x73\x17\xd8\x57\x94\x1b\x73\x5f\xba\x49\xec\x93\xd6\xa0\x16\x2c\x82\x07\x8a\x36\xf1\x7b\xb4\xcd\x46\x70\x8f\xb9\xc0\x7e\xa0\x97\xd7\xfa\xf2\x9f\x4a\xff\x06\x00\x00\xff\xff\x5f\x4c\xaf\xef\x65\x12\x00\x00")

func homeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_homeHtml,
		"home.html",
	)
}

func homeHtml() (*asset, error) {
	bytes, err := homeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "home.html", size: 4709, mode: os.FileMode(420), modTime: time.Unix(1457704790, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _errorHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x4d\x4f\xdc\x30\x10\xbd\x57\xea\x7f\x18\xdc\x43\x2e\x64\xbd\xa5\xad\xa8\x68\xb2\x15\x02\x54\xad\x54\x09\xd4\x5d\xa9\xe2\x84\xbc\xc9\xec\xc6\xc2\xb1\x43\x3c\x81\xae\xd4\x1f\xdf\x71\x3e\x80\xb0\x54\xb4\x6a\x0f\x91\xc7\x9e\x37\xcf\xcf\xcf\x19\x27\x7b\xa7\xe7\x27\xcb\xcb\x8b\x33\x28\xa8\x34\xb3\xd7\xaf\x92\x30\x82\x51\x76\x93\x0a\xb4\xa2\x5d\x41\x95\xf3\x08\x90\x94\x48\x8a\x81\x54\xc5\x78\xd3\xe8\xdb\x54\x9c\x38\x4b\x68\x29\x5e\x6e\x2b\x14\x90\x75\xb3\x54\x10\xfe\x20\x19\x88\x3e\x41\x56\xa8\xda\x23\xa5\x0d\xad\xe3\x8f\x02\x64\x47\x44\x9a\x0c\xce\xe6\x14\x79\xb8\x74\x0d\x9c\x5b\xa3\x2d\x26\xb2\x5b\x6e\x11\xbc\x70\x0d\x35\x9a\x54\x78\xda\x1a\xf4\x05\x22\x09\x28\x6a\x5c\xa7\x42\x79\x66\xf4\x32\xf3\x5e\xb6\xc9\x09\x47\x42\xfe\x55\xdd\x9a\xa5\xc6\xea\x0e\xbd\x2b\x71\x52\x6a\xbb\x43\xd1\x56\x44\xe1\xac\x47\xb2\x45\xfb\xc9\xc6\xb9\x8d\x41\x55\x69\x3f\xc9\x5c\x19\x68\x3e\xaf\x55\xa9\xcd\x36\xfd\x8e\xc6\xac\x0d\xef\xf4\xf3\xb8\xbe\x75\x47\xef\xa7\xd3\xfd\x43\xfe\x78\xd4\xa4\x8c\xce\xc2\xac\x8b\xa2\x56\x5b\xf4\xa0\x2d\x02\x62\xef\xd2\xa8\xb5\x8c\x29\xa3\xe0\xb8\xec\x2d\x4f\x56\x2e\xdf\x0e\x57\x80\x35\xe8\x3c\x15\x5d\x28\x3a\xa9\xb9\xbe\x85\xcc\xf0\xb9\x52\xd1\x9b\xdf\x25\xfa\x54\xc0\x1b\xb7\x71\x62\x96\xa8\xde\x83\x82\x0f\x2c\x66\x30\x27\xcf\xc6\x4f\x3a\xe3\x21\x91\x6a\x96\x48\xae\xe8\x58\xfb\xa8\x93\x81\x35\x87\x3c\xd9\x8b\x63\x58\x7c\x9d\x9f\x9e\x2d\x60\xb1\x3c\xfe\xb6\x84\x38\x0e\x98\x61\x1b\x6f\x74\x8e\x6f\x5f\x96\x55\x1c\xcc\x3e\x4c\xa7\x4c\x7d\xf0\x68\xe5\xdc\x55\x7e\x1f\xa8\xd0\x1e\xee\x94\x07\xeb\x08\x7c\x53\x55\xce\x63\x0e\xe4\xa0\x50\x55\x85\xf6\xbe\xe6\x41\xdf\xbd\xe2\x91\x8a\xc3\x91\x07\xcf\xeb\x18\x27\x6f\x1a\x47\xe8\xaf\x02\x46\xb1\x1f\xf5\x03\x6a\x8c\x5b\x35\x44\xce\xc6\x19\x13\xf1\x6d\x84\x2b\xeb\xe3\xc7\x05\xe3\x92\xdc\x65\xe3\x24\xa7\x15\x90\xaa\x37\xdc\x14\xe2\x6a\xc5\x9d\x76\x3d\xfc\x9f\x6f\x9e\x22\x01\x4e\x5d\xd6\x94\xbc\x85\x22\xed\xec\x13\x1a\xbe\xb4\xd1\xae\xf7\x76\xfc\x46\x07\xf0\x77\xf0\x2f\x62\x8e\x2f\xe6\xff\x5d\xd0\xbb\x3f\x16\x14\x7a\xd1\x73\x33\x6e\x34\x15\xcd\xaa\x6d\x41\x4d\x7e\xeb\x1a\xd7\xfe\xc4\xbb\x72\x13\x5f\x29\x3b\x6c\xd7\x55\xc5\xa1\xb7\x77\x91\x00\x0b\xd7\xd4\x19\xf2\x0b\x96\x23\x38\x0b\x5f\x5a\xf4\x0e\xa1\x0c\x8c\x4f\xf5\xbe\x70\xea\xf1\xfc\xf1\xec\xb9\x8e\x1b\xc6\xa1\xf1\x65\xff\x2c\xff\x0a\x00\x00\xff\xff\x71\x95\xbc\xf2\xa8\x05\x00\x00")

func errorHtmlBytes() ([]byte, error) {
	return bindataRead(
		_errorHtml,
		"error.html",
	)
}

func errorHtml() (*asset, error) {
	bytes, err := errorHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "error.html", size: 1448, mode: os.FileMode(420), modTime: time.Unix(1457712847, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
	"registration.html": registrationHtml,
	"login.html": loginHtml,
	"home.html": homeHtml,
	"error.html": errorHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"error.html": &bintree{errorHtml, map[string]*bintree{}},
	"home.html": &bintree{homeHtml, map[string]*bintree{}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"login.html": &bintree{loginHtml, map[string]*bintree{}},
	"registration.html": &bintree{registrationHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

