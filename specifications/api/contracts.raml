#%RAML 1.0
title: ItsYouOnline
version: 0.1
baseUri: /

types:
  Signature:
    properties:
      signedBy: string
      date: date
      publicKey:
        type: string
        description: The public key used
      signature:
        type: string

  Contract:
    properties:
      parties:
        type: string[]
        minItems: 2
        maxItems: 20
        uniqueItems: true
      content: string
      contractType:
        type: string
        maxLength: 40
        description: Free field to be used for tags by the party creating a contract
      invalidates?:
        type: string[]
        maxItems: 10
        description: list of contractId's this contract invalidates.
      extends?:
        type: string[]
        maxItems: 10
        description: list of contractId's this contract is an extension upon
      expires: date
      contractId:
        type: string
        description: |
          The contractId is the hash of the parties, the content, the contractType,  and the expiration date.
          To calculate the hash, take the json representation of the contract without the id and signatures, trim the newlines or spaces (except when they appear in the values) and encode in  utf8.
          From this result, take a SHA256 followed by a RIPEMD160, next base58CheckEncode the result with a 0x00 prefix.

      signatures: Signature[]

  ContractSigningRequest:
    properties:
        contractId: string
        party: string

/contracts:
  post:
    description: Create a new contract.
    responses:
      201:
        body:
          application/json:
            type: Contract
      401:
        description: Unauthorized

  /{contractId}:
    get:
      description: Get a contract
      responses:
        200:
          body:
            application/json:
              type: Contract
        404:
          description: Not found
  /{contractId}/signatures:
    post:
        description: Sign a contract
        body:
          application/json:
            type: Signature

/users/{username}/contracts:
  get:
    description: Get the contracts where the user is 1 of the parties. Order descending by date.
    queryParameters:
      includeExpired:
          type: boolean
          description: Include the expired contracts, by default only the active contracts are returned.
          required: false
      start:
          type: integer
          description: Start offset, useful for paging. Default is `0`.
          required: false
      max:
          type: integer
          description: Max page size, useful for paging. Default is `50`.
          required: false
          maximum: 250
    responses:
      200:
        body:
          application/json:
            type: Contract

/organizations/{globalid}/contracts:
  get:
    description: Get the contracts where the organization is 1 of the parties. Order descending by date.
    queryParameters:
      includeExpired:
          type: boolean
          description: Include the expired contracts, by default only the active contracts are returned.
          required: false
      start:
          type: integer
          description: Start offset, useful for paging. Default is `0`.
          required: false
      max:
          type: integer
          description: Max page size, useful for paging. Default is `50`.
          required: false
          maximum: 250

    responses:
      200:
        body:
          application/json:
            type: Contract
