#%RAML 1.0
title: ItsYouOnline
version: 0.1
baseUri: /
types:
  Scope:
    description: For an explanation about scopes and scopemapping, see https://github.com/itsyouonline/identityserver/blob/master/docs/oauth2/scopes.md
    properties:
        username: string
        grantedTo:
          type: string
          description: The organization that is granted read access to some of the user's information
        address?:
          description: Mapping of the labels of the granted ones to the labels the organization requested.
          properties:
            "[]":
              type: string
        publicKeys?: string[]
        email?:
          description: Mapping of the labels of the granted ones to the labels the organization requested.
          properties:
            "[]":
              type: string
        phone?:
          description: Mapping of the labels of the granted ones to the labels the organization requested.
          properties:
            "[]":
              type: string
        bank?:
          description: Mapping of the labels of the granted ones to the labels the organization requested.
          properties:
            "[]":
              type: string
        facebook?: boolean
        github?: boolean
        organizations:
          type: string[]
          description: List of organizations the requesting organization can see your membership of.

  BankAccount:
    properties:
        iban:
          type: string
          maxLength: 30
        bic:
          type: string
          maxLength: 10
        country:
          type: string
          maxLength: 40

  Phonenumber:
    pattern: ^\+[0-9]+$

  Address:
    properties:
        city:
            type: string
            maxLength: 30
        street:
            type: string
            maxLength: 50
        nr:
            type: string
            maxLength: 10
        other?:
            type: string
            maxLength: 30
        country:
            type: string
            maxLength: 40
        postalcode:
            type: string
            maxLength: 20
  User:
    properties:
        username:
            type: string
            maxLength: 30
            minLength: 2
        publicKeys: string[]
        expire?: date
        email?:
          properties:
            "[]":
              type: string
        phone?:
          properties:
            "[]":
              type: Phonenumber
        address?:
          properties:
            "[]":
              type: Address
        bank?:
          properties:
            "[]":
              type: BankAccount
        facebook?:
            type: string
            maxLength: 40
        github?:
            type: string
            maxLength: 50

    example:
        username: bob
        publicKeys:
            - 1GVS7544tvWM2TM13vNH8sboamJzL6mJ36
        expire: 2018-10-20
        email:
            work: bob@company.com
            home: bob@example.com
            "dance club": bob@linedanceclub.example.org
        phone:
          be: +3212341234123
          eg: +2012341234123
        address:
            home:
                city: Springfield
                street: Main street
                nr: 45B
                country: Tomorrowland
                postalcode: T-9450
            work:
                city: Capital City
                street: Capital street
                nr: 1
                country: Tomorrowland
                postalcode: T-1000
        bank:
            kbc:
                iban: TL123451234512345
                bic: ABCDEF
                country: Tomorrowland

  userview:
    properties:
        username:
            type: string
        publicKeys?: string[]
        email?:
          properties:
            "[]":
              type: string
        phone?:
          properties:
            "[]":
              type: Phonenumber
        address?:
          properties:
            "[]":
              type: Address
        bank?:
          properties:
            "[]":
              type: BankAccount
        facebook?:
            type: string
            maxLength: 40
        github?:
            type: string
            maxLength: 50
        organizations: string[]

  JoinOrganizationRequest:
    properties:
        organization: string
        user: string
        role:
            type: string
            enum: [owner, member]

  ContractSigningRequest:
    properties:
        contractId: string
        party: string

/users:
  post:
    description: Create a new user
    body:
        application/json:
            type: User
  /{username}:
    get:
        responses:
            200:
                body:
                    application/json:
                        type: User
    put:
      description: Update an existing user. Updating ``username`` is not allowed. The labelled lists can not be updated this way, the normal properties can (like github and facebook account).
      responses:
        200:
          body:
            application/json:
              type: User
        403:
          description: Updating username is Forbidden!
  /{username}/info:
    get:
        displayName: GetUserInformation
        responses:
            200:
                body:
                    application/json:
                        type: userview
  /{username}/validate:
    get:
        queryParameters:
            token:
                type: string
  /{username}/addresses:
    get:
        responses:
            200:
                body:
                    application/json:
                        properties:
                          "[]":
                            type: Address
    post:
      description: Create new address
      body:
        application/json:
            properties:
              "[]":
                type: Address
      responses:
        201:
          body:
            application/json:
                properties:
                  "[]":
                    type: Address
  /{username}/addresses/{label}:
    get:
        responses:
            200:
                body:
                    application/json:
                      type: Address
    put:
        description: Update or create an existing address.
        body:
            application/json:
                type: Address
    delete:
        description: Delete an address
  /{username}/phonenumbers:
    get:
      responses:
        200:
          body:
            application/json:
                properties:
                  "[]":
                    type: Phonenumber
    post:
      description: Create new phonenumber
      body:
        application/json:
            properties:
              "[]":
                type: Phonenumber
      responses:
        201:
          body:
            application/json:
              type: Phonenumber
  /{username}/phonenumbers/{label}:
    get:
        responses:
            200:
                body:
                    application/json:
                        type: Phonenumber
    put:
        description: Update or create an existing phonenumber.
        body:
            application/json:
                type: Phonenumber
    delete:
        description: Delete a phonenumber
  /{username}/banks:
    post:
      description: Create new bank account
      body:
        application/json:
            properties:
              "[]":
                type: BankAccount
      responses:
        201:
          body:
            application/json:
                properties:
                  "[]":
                    type: BankAccount
    get:
        responses:
            200:
                body:
                    application/json:
                        properties:
                          "[]":
                            type: BankAccount
  /{username}/banks/{label}:
    get:
        responses:
            200:
                body:
                    application/json:
                        type: BankAccount
    put:
        description: Update or create an existing bankaccount.
        body:
            application/json:
                type: BankAccount
    delete:
        description: Delete a BankAccount
  /{username}/organizations:
    get:
        description: Get the list organizations a user is owner of member of
        responses:
            200:
                body:
                    application/json:
                      properties:
                        owner: string[]
                        member: string[]
  /{username}/notifications:
    get:
        description: Get the list of notifications, these are pending invitations or approvals
        responses:
            200:
                body:
                    application/json:
                        properties:
                            invitations: JoinOrganizationRequest[]
                            approvals: JoinOrganizationRequest[]
                            contractRequests: ContractSigningRequest[]

  /{username}/contracts:
    get:
      description: Get the contracts where the user is 1 of the parties. Order descending by date.
      queryParameters:
        includeExpired:
            type: boolean
            description: Include the expired contracts, by default only the active contracts are returned.
            required: false
        start:
            type: integer
            description: Start offset, useful for paging. Default is `0`.
            required: false
        max:
            type: integer
            description: Max page size, useful for paging. Default is `50`.
            required: false
            maximum: 250

  /{username}/scopes:
    get:
        description: Get the list of authorization scopes
        responses:
            200:
                body:
                    application/json:
                        type: Scope[]
  /{username}/scopes/{grantedTo}:
    get:
        description: Get a specific authorization
        responses:
            200:
                body:
                    application/json:
                        type: Scope
    delete:
        description: Remove a Scope, the granted organization will no longer have access the user's information.
    put:
        description: Update a Scope
