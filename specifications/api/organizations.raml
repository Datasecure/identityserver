#%RAML 1.0
title: ItsYouOnline
version: 0.1
baseUri: /
securitySchemes:
  - oauth_2_0:
        !include securitySchemes/oauth_2_0.raml

types:
  Organization:
    properties:
      globalid:
        type: string
        minLength: 3
        maxLength: 150
      publicKeys:
        type: string[]
        maxItems: 20
      dns:
        type: string[]
        maxItems: 100
        description: List of organization DNS.
      owners:
        type: string[]
        maxItems: 20
        description: List of users `usernames`.
      members:
        type: string[]
        maxItems: 2000
        description: List of users who are member in this organization.
      includes:
        type: string[]
        maxItems: 100
        description: globalId of sub organizations

    example:
      globalid: greenitglobe
      publicKeys:
        - 1A9WWh6iAE4RZGN7axy6xZbuWuLknqWLrV
      dns:
        - greenitglobe.com
      owners:
        - user1
        - user2
        - user3
      members:
        - user4
      includes:
        - admin.greenitglobe.com

  OrganizationTreeItem:
    properties:
      globalid:
        type: string
      children: OrganizationTreeItem[]

  member:
    properties:
      username:
        type: string
        description: Used when assigning a member to an organization.

    example:
      username: bob

  Invitation:
    properties:
        user: string
        role:
          type: string
          enum: [owner, member]
        created: date

    example:
      user: bob
      role: owner
      created: Sun, 06 Nov 1994 08:49:37 GMT

  APIKey:
    properties:
      label:
        type: string
        maxLength: 50
        minLength: 2
      callbackURL?:
        type: string
        maxLength: 250
        minLength: 5
      clientCredentialsGrantType?:
        description: Indicates if this key may be used in a client credentials oauth2 flow.
        type: boolean
        default: false
      secret?:
        type: string
        maxLength: 250

securedBy: [ oauth_2_0 ]
/organizations:
  post:
    displayName: CreateNewOrganization
    description: Create a new organization. 1 user should be in the owners list. Validation is performed to check if the securityScheme allows management on this user.
    body:
      application/json:
        type: Organization
    responses:
      201:
        body:
          application/json:
            type: Organization
      401:
        description: Unauthorized
  /{globalid}:
    get:
      securedBy: [oauth_2_0: { scopes: [ "organization:member", "organization:owner" ] } ]
      description: Get organization info
      responses:
        200:
          body:
            application/json:
              type: Organization
        401:
          description: Unauthorized
        404:
          description: Not found
    put:
      securedBy: [oauth_2_0: { scopes: [ "organization:owner" ] } ]
      description: Update organization info
      body:
        application/json:
          type: Organization
      responses:
        200:
          body:
            application/json:
              type: Organization
        401:
          description: Unauthorized
        404:
          description: Not found
    post:
      securedBy: [oauth_2_0: { scopes: [ "organization:owner" ] } ]
      displayName: CreateNewSubOrganization
      description: Create a new suborganization.
      body:
          application/json:
            type: Organization
      responses:
          201:
            body:
              application/json:
                type: Organization
          401:
            description: Unauthorized
    /members:
      post:
        securedBy: [oauth_2_0: { scopes: [ "organization:owner" ] } ]
        description: Assign a member to organization.
        body:
          application/json:
            type: member
        responses:
          201:
            description: Member assigned successfully
            body:
              application/json:
                type: member
          401:
            description: Unauthorized
          404:
            description: Not found

      /{username}:
        delete:
          securedBy: [oauth_2_0: { scopes: [ "organization:owner" ] } ]
          description: Remove a member from organization
          responses:
            204:
              description: Member deleted successfully
            401:
              description: Unauthorized
            404:
              description: The user or the organization does not exist.
            409:
              description: The user already is a member.

    /owners:
      post:
        securedBy: [oauth_2_0: { scopes: [ "organization:owner" ] } ]
        description: Invite a user to become owner of an organization.
        body:
            application/json:
              type: member
        responses:
            201:
              description: Invite created successfully
              body:
                application/json:
                  type: member
            401:
              description: Unauthorized
            404:
              description: The user or the organization does not exist.
            409:
              description: The user already is an owner.

      /{username}:
          delete:
            securedBy: [oauth_2_0: { scopes: [ "organization:owner" ] } ]
            description: Remove an owner from organization
            responses:
              204:
                description: Owner removed successfully
              401:
                description: Unauthorized
              404:
                description: Not found

    /contracts:
      securedBy: [oauth_2_0: { scopes: [ "organization:owner", "organization:contracts:read" ] } ]
      get:
        displayName: GetContracts
        description: Get the contracts where the organization is 1 of the parties. Order descending by date.
        queryParameters:
          includeExpired:
              type: boolean
              description: Include the expired contracts, by default only the active contracts are returned.
              required: false
          start:
              type: integer
              description: Start offset, useful for paging. Default is `0`.
              required: false
          max:
              type: integer
              description: Max page size, useful for paging. Default is `50`.
              required: false
              maximum: 250

    /invitations:
      securedBy: [oauth_2_0: { scopes: [ "organization:owner" ] } ]
      get:
        displayName: GetPendingInvitations
        description: Get the list of pending invitations for users to join this organization.
        responses:
            200:
              body:
                application/json:
                  type: Invitation[]

      /{username}:
        delete:
            displayName: RemovePendingInvitation
            description: Cancel a pending invitation.
            responses:
                204:
                  description: Invitation cancelled

    /apikeys:
      description: API keys are the oauth2 client secrets and callbacks needed to access the api.
      securedBy: [oauth_2_0: { scopes: [ "organization:owner" ] } ]
      get:
        displayName: GetAPIKeyLabels
        description: Get the list of active api keys.
        responses:
            200:
              body:
                application/json:
                    type: string[]
      post:
        displayName: CreateNewAPIKey
        description: Create a new API Key, a secret itself should not be provided, it will be generated serverside.
        body:
          application/json:
            type: APIKey
        responses:
            201:
              body:
                application/json:
                    type: APIKey
            409:
                description: Label is already used.
      /{label}:
        get:
          displayName: GetAPIKey
          responses:
            200:
                body:
                    application/json:
                     type: APIKey
            404:
                description: Not found
        put:
          displayName: UpdateAPIKey
          description: Updates the label or other properties of a key.
          body:
            application/json:
              properties:
                type: APIKey
          responses:
            201:
                description: Updated
            409:
                description: New label is already used
        delete:
          displayName: DeleteAPIKey
          description: Removes an API key
          responses:
              204:
                description: API key removed
    /dns:
      description: Manage domain names linked to an organization.
      securedBy: [oauth_2_0: { scopes: [ "organization:owner" ] } ]
      /{dnsname}:
        post:
          displayName: CreateDns
          description: Creates a new DNS name associated with an organization
          body:
            application/json:
              properties:
                name:
                  type: string
                  minlength: 4
                  maxlength: 250
          responses:
            409:
                description: DNS name is already used.
            201:
              body:
                application/json:
                    properties:
                       name: string
        put:
          displayName: UpdateDnsName
          description: Updates an existing DNS name associated with an organization
          body:
            application/json:
              properties:
                oldname:
                  type: string
                  minlength: 4
                  maxlength: 250
                newname:
                  type: string
                  minlength: 4
                  maxlength: 250
          responses:
              201:
                  description: Renamed
              409:
                  description: New DNS name is already used
              404:
                description: DNS Name not found
        delete:
          displayName: DeleteDNSName
          description: Removes a DNS name
          responses:
              204:
                description: DNS name removed
              404:
                description: DNS Name not found

    /tree:
      get:
        displayName: GetOrganizationTree
        response:
          200:
            body:
              application/json:
                properties:
                  "[]": OrganizationTreeItem
