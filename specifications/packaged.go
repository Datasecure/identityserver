// Code generated by go-bindata.
// sources:
// specifications/api/companies.raml
// specifications/api/contracts.raml
// specifications/api/organizations.raml
// specifications/api/securitySchemes/oauth_2_0.raml
// specifications/api/userorganizations.raml
// specifications/api/users.raml
// DO NOT EDIT!

package specifications

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _companiesRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x5f\x53\xdb\x46\x10\x7f\xd7\xa7\xd8\xd0\xe9\x1b\xc8\x92\x21\x0c\xd5\x53\x09\x4d\x13\x5a\x48\x3b\x10\x1e\x68\x86\x89\xcf\xba\xb5\xb9\x46\xba\x53\xee\x4e\x06\x25\xcd\x77\xef\x9e\x4e\xb6\x24\x23\x07\x43\x1f\xaa\x81\x19\xd0\xfe\xfb\xed\x6f\xff\x68\x7f\xf8\xf1\xe2\xf8\xfc\x0c\xe2\x30\x0a\xac\xb0\x19\x26\x70\xa2\xf2\x82\x49\x81\x26\x58\xa0\x36\x42\xc9\x04\xa2\x30\x0e\xa6\xcc\xe0\x95\x16\x09\x8c\x02\x83\x69\xa9\x85\xad\x2e\xd3\x5b\xcc\xd1\x24\x01\x80\x62\xa5\xbd\xfd\x38\xfe\x18\x25\xf0\x42\xc8\x34\x2b\x39\xc2\x9a\xda\x68\xa5\x13\x6a\x96\x67\x41\x60\xab\xc2\x1b\xfb\x88\x95\xfb\x13\xa0\xd0\xaa\x40\x6d\x85\x17\xf9\x67\x9e\xa9\x29\xcb\x04\x6f\xdf\xb8\xc7\xd9\x27\x60\xac\x16\x72\xde\x13\xe4\x42\x9e\xa1\x9c\xdb\xdb\x04\xf6\xfb\x02\x76\xbf\x14\xc4\x2f\xa3\x95\xa8\x28\xa7\x99\x48\x7f\xc7\xca\x6c\x0e\xf0\xe1\x66\xdd\xd3\xa9\xc5\xdc\x24\x30\x6e\xfd\xe0\x7d\x21\x34\x0e\xf9\xe0\xcc\xa2\x15\x39\xf6\x44\x1a\x3f\x97\xa4\xcf\x13\x98\xb1\xcc\xb4\x32\xa5\xe7\xc4\xff\x17\x66\x89\xfb\xe7\x20\x8a\xa3\x68\xab\x38\x42\xce\xd4\x7f\x4b\xf8\x7b\xde\x2d\xbb\x97\x7a\xcb\x82\x0d\xf9\xc0\x7b\x96\x17\x19\x0e\x34\x01\x9c\x9e\x89\x4f\x78\xc2\x24\xaf\x1e\x2d\xe1\x1e\xc4\x47\x97\x6f\xde\x5e\x5f\x8a\xa3\xdf\x4e\x16\xc7\x8b\xf7\x57\x87\xd7\xf9\x22\x7e\x7b\x91\xe7\xe5\xd1\xe1\xf9\xe7\xf1\x75\xf1\x65\xbd\x7e\x94\x61\x7c\xb8\x17\x8d\xf7\xc6\x47\xef\xe3\xc3\xe4\x20\xa6\x9f\x30\xfa\x29\xfa\x6b\x23\x73\x7b\xf5\x9b\x9f\x45\x46\xb8\x52\x87\x2b\x4c\x55\xbe\xc6\x04\xbc\x7a\x1d\x8f\xf7\x0f\xba\xbf\x01\xa9\xa4\xbe\xf7\x17\x02\xef\x5a\x8f\x9e\xa8\x66\x2c\x02\x3f\x6f\xc8\x5f\x55\x09\x7c\x68\x27\x0d\x6e\x82\x51\xba\x9c\x55\x67\x5b\x28\x63\xbd\x0f\x8e\x26\xd5\xa2\xb0\xf5\xf0\x5e\xe0\x5c\x18\x8b\x1a\x18\x48\xbc\x5b\x06\xac\xf5\xa6\x8a\x57\x6d\x54\x56\x14\xc4\x61\xdd\x76\xa3\xbf\x0d\x99\x0e\x14\xef\x64\x65\x3d\xc7\x65\x30\x61\x8a\x8c\x55\xef\x58\x4e\xf2\x37\x68\x1b\x95\x33\x0a\xfa\x10\xcc\x3f\x1d\x9f\xa4\x0b\xab\x04\x42\x38\xa6\xbc\x94\x6e\xfa\x1e\x32\x91\x0b\x6b\x80\x69\xf4\xb8\x90\x83\x55\x75\xa3\xa0\xb1\xd4\x3f\x50\x1a\xd4\x61\xe0\xbb\xc7\x14\x34\x29\xd8\x2b\xfd\x38\x8a\xfa\xf8\xfb\xb9\x6e\x93\xf1\x83\xac\xeb\x91\x18\x7d\xf5\x8d\x78\xca\xbf\x79\xf5\x15\x11\x00\xdd\x42\x75\x36\xe2\x57\x30\xa9\x72\xbb\x8e\xca\xb7\xd3\xf0\x9f\x68\x64\x7c\x67\xb7\xfd\x9f\x71\x5a\x5b\x3b\x70\x03\xdf\x60\x39\x79\x3d\xe6\x1c\x5b\xdd\xcd\x50\xb7\x5c\xa3\x38\xc0\xc0\x5a\xfe\x0f\xb3\x7f\x2c\xf7\xf5\x7a\xfb\xe7\x20\x8a\xbb\x8a\x3d\x84\x57\x92\x35\x25\x44\xde\x31\x38\xd8\x68\xf0\x4e\x59\x98\xa9\x52\x7a\xed\xa2\x7c\x16\x8f\x8f\xf1\x76\x55\xb8\xe5\x4b\xb3\x2d\x7c\xdf\x34\x76\xa1\x17\xb8\x37\x93\xc9\xb2\xa2\x93\x09\x08\x03\x92\x60\xb1\x2c\x53\x77\xc8\xc3\xff\x81\xe0\xfd\xcd\x04\x2f\x11\x2f\xf1\x3a\xb4\xbf\x2a\x3d\x15\x9c\xa3\x7c\x51\x9b\x8d\xba\xbb\xe9\x29\x3c\x3a\xbb\x3e\x8d\x9d\xc6\xde\x30\x64\x03\x63\x36\xcc\xc5\xb6\x9c\xac\xb3\xd3\xd9\x8e\x3e\xbb\x85\xfb\x02\x50\x3d\x93\x21\x8c\xb4\x1b\x74\xf5\x27\xa3\xeb\x02\x69\xdf\xad\x7f\x3a\xd5\x27\xdc\x38\xe0\xcd\x37\xc9\xc7\x48\x95\xb4\x9a\xa5\xd6\x0c\x06\x79\x7a\x6f\x76\x86\xbc\x75\x5d\x8f\x7f\x8f\xee\x81\x79\xb7\xb7\x08\x2b\x13\xb8\xbb\x45\xda\x86\xee\x5d\x7f\x0f\x18\x88\x41\xcd\x6a\x41\xc1\xea\xcb\x29\x84\x3f\x34\xa7\x8d\xef\x1c\xa2\xe4\xae\x65\xa6\x55\x7d\x84\x84\xdb\x90\xd5\x1c\x70\xaf\xeb\xcf\x21\x1f\xee\xdb\xa9\x52\x19\x32\xb9\x26\xeb\x65\x70\xda\xdc\x81\x0e\x98\xff\xb4\xf2\x36\x9b\xdd\x1a\x11\xce\x58\x99\xd1\x5e\x93\x59\x55\xab\x91\x44\x2c\xba\x39\xbb\xfd\xaf\xd1\x96\x5a\xb6\xc3\xb8\x7c\x36\x5d\x1e\x54\x23\x4b\x3c\x0c\xe3\x16\xd2\xe2\x1c\xf5\xf7\x70\x5f\x3a\x6b\x62\x74\x66\xd0\xee\xba\xef\xcc\xac\xcc\x68\x4f\x69\x62\x77\x4e\x54\x86\xf0\x4b\x03\x9b\x98\x9f\x44\x93\xed\x61\xd1\x0d\xf5\x6c\x50\xe7\xec\xde\xc5\xa7\xab\x9a\xd6\xeb\xa3\xa8\x5e\x3e\x05\x56\x03\x4d\xe4\x65\x4e\xb7\x0f\xdd\xc5\xff\x06\x00\x00\xff\xff\x01\xaf\x17\xb7\x14\x0c\x00\x00")

func companiesRamlBytes() ([]byte, error) {
	return bindataRead(
		_companiesRaml,
		"companies.raml",
	)
}

func companiesRaml() (*asset, error) {
	bytes, err := companiesRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "companies.raml", size: 3092, mode: os.FileMode(420), modTime: time.Unix(1465552309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _contractsRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\xdd\x6e\xf4\x34\x10\xbd\xcf\x53\x0c\x1f\x42\x80\x54\xed\x66\x57\x6d\x55\xe5\x06\x95\xa5\x85\x8a\x16\xa1\xfe\x5c\x55\x55\xe5\x75\x66\x37\xa6\x59\x3b\xf8\xa7\xdd\x50\xfa\xee\x8c\x9d\xc4\x49\x76\x29\x15\x20\x7d\xbd\xa8\xd6\x63\xcf\x9c\x33\xc7\xc7\x93\x2f\xbf\xba\x3e\xbd\xba\x84\xd9\x24\x4d\xac\xb0\x25\x66\xb0\x50\xd2\x6a\xc6\xad\x49\x9e\x51\x1b\xa1\x64\x06\xe9\x64\x96\x2c\x99\xc1\x3b\x2d\x32\x98\x26\x06\xb9\xd3\xc2\xd6\x37\xbc\xc0\x0d\x9a\x2c\x01\x50\xcc\xd9\xe2\x71\xfe\x98\x66\xf0\x85\x90\xbc\x74\x39\xc2\xce\xb1\x69\x3c\x33\xd1\x6c\x53\x26\x89\xad\xab\x26\xf9\x46\xac\x25\xb3\x4e\xa3\x5f\x00\x54\x5a\x55\xa8\xad\x68\x36\xfd\x9f\xa1\x03\x98\x7f\x5f\x67\x60\xac\x16\x72\xdd\x86\x73\x66\x89\xaf\xff\x6f\xc5\x06\xdb\x60\xe5\x96\xa5\xe0\x3f\x63\xdd\x25\x03\x78\xa0\x9d\x54\x4a\x46\xc3\xb5\xa8\x6c\x68\xf0\xb6\xc0\x36\x11\x9e\xb0\x06\x67\x30\x1f\x40\x0f\xb8\xed\x95\xa3\x68\x27\xd8\x7b\xec\x2b\x36\x5a\x8e\x0b\xdc\x3f\xc4\xf0\x46\xc8\x0b\x8b\x1b\x93\xc1\xbc\x8f\xb1\x6d\x17\x4b\x63\xd0\x49\xf1\xbb\xc3\x36\x6e\xb5\xeb\x5a\xe7\x44\x04\xa5\xdd\x69\x95\xb7\xf4\x6e\x3d\xea\x3f\x6b\x42\x68\x97\x28\xd7\xb6\xc8\xe0\x30\xfd\x7b\xa5\xce\x35\x22\xac\x04\x96\x39\x58\x05\x4b\x0c\x5a\xc1\x4a\x69\xb0\x6c\x6d\x60\x59\x83\xf5\x5a\x52\xcb\x35\x70\x8d\xcc\x52\x7d\x60\x91\x44\x5b\x54\xc8\x67\x56\x0a\x7f\x73\xe6\xbb\x8f\x75\x89\x1a\xcc\xde\x21\x55\x0a\x63\x41\xad\x22\xca\x45\xfe\xb5\x21\x1e\xc2\xc4\xc8\x10\x71\xd2\x16\xc1\x2d\xa9\x95\x7f\x36\x02\x06\x98\x6c\x30\xfd\xa3\x02\x57\x29\x19\x89\x54\x42\x93\x41\x76\xad\xdc\x57\xfb\x37\x5e\xfe\x33\x86\x21\xf8\xba\xaf\xe2\x39\xf8\xdb\x29\x98\x29\x3c\xdb\xee\xa6\xc8\x9c\x07\x61\xd1\x1a\xa8\x5f\x74\xbe\x39\x00\x22\x9f\x87\x70\x20\xcb\x3c\x54\xa0\x3b\x19\xa2\x29\xe0\xac\xe4\xae\xa4\x78\x04\xa2\x62\xec\xa9\x59\xfe\x66\x28\x49\x63\x45\xbd\x12\x4a\x53\xa3\xa5\x11\x65\x7a\x11\xb6\x50\xce\x86\xa0\xc8\x03\x6a\x7c\x82\x9e\xa5\x16\x9b\xb0\x27\xf1\xa5\x14\x12\x0d\x90\xf3\x4c\xc5\x38\xfd\xfa\x06\xb7\x1c\x2b\x2a\x51\xa0\xf4\x67\x6a\x60\x55\x85\x4c\xd3\xdd\x87\x14\x32\x80\x43\xf3\x6d\xa8\x89\x92\x2b\x1a\x51\xb4\x03\xce\xae\x4e\x86\x5d\x9c\x6b\xb5\x69\xee\x8e\x10\x5d\x69\xdb\x06\x18\xdc\xfc\x74\x3a\x3f\x3a\x26\xaf\x97\xa5\x7a\x21\xd3\x93\xd7\x19\x5c\x5f\xfc\x7a\x76\xf5\xc3\xec\x38\x3d\x20\x4a\x5b\x0b\x7e\x4c\x1e\x9d\x2c\x0a\xe4\x4f\x67\x0d\x86\x87\x6e\x2a\x85\xe6\x28\x27\xdd\xa6\x29\xcd\x09\x5c\x89\xed\x24\xd9\x9d\x33\x64\x83\x38\x0f\xc9\x83\xcd\xb0\x6d\x86\xdf\x7d\x3f\x66\xe1\x21\x99\x76\x9a\x85\xc9\x52\x29\xd3\x0e\xa0\x91\x19\x16\xfe\x09\x7a\xf2\xa4\x57\x14\xb9\xe9\x96\xa0\xc8\x82\xa6\x1f\x4c\xf3\x74\xd6\xfb\x6c\xa9\xf2\xc1\x04\x05\x2f\x25\x4d\xc7\x70\x67\x53\x7f\x8f\xc3\xbd\xce\x95\x8b\xf1\x23\x3f\x1c\xd6\x1b\xb1\xba\x93\xbe\x0f\xa5\xc5\x1f\x34\x67\xe9\xc8\xf4\xb5\x37\xe9\x5b\x93\xb3\x46\x1b\xa7\xff\x40\x81\xc1\x77\xe6\x15\x0c\x57\xfe\x0b\x42\xba\x7c\xea\xf2\x33\xea\x37\xff\x04\x0f\xf0\x06\xdd\xfb\x1d\x21\xff\x88\x76\x7f\x1a\xed\x29\xe1\xb5\x48\x87\x1d\xee\xaa\xf1\x91\x1e\xef\x28\xe2\x35\x39\x1c\x9e\x1c\x71\xfb\x45\x59\x32\x97\x93\xcd\xa7\x67\x3a\x70\x44\xcc\xe8\x6f\xf9\x3f\x48\x13\x9e\x3a\x17\x15\x93\x76\xac\xd0\x1e\x13\x6f\xc0\x7d\x99\xfe\x8f\x10\xd1\xd2\xc9\x5f\x01\x00\x00\xff\xff\x3f\xf9\x8c\x07\x71\x08\x00\x00")

func contractsRamlBytes() ([]byte, error) {
	return bindataRead(
		_contractsRaml,
		"contracts.raml",
	)
}

func contractsRaml() (*asset, error) {
	bytes, err := contractsRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "contracts.raml", size: 2161, mode: os.FileMode(420), modTime: time.Unix(1465552315, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _organizationsRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5a\x6f\x6f\xdb\x38\xf2\x7e\xef\x4f\xc1\x5f\x7e\xb8\x77\x89\xff\x64\xd3\xde\xd5\x6f\x0e\xb9\x66\x51\x04\x97\x66\x8b\xa6\xdd\x02\x2d\x8a\x2d\x25\x8d\x6d\x6e\x64\x52\x25\xa9\x38\xde\xa2\xdf\xfd\x86\xa4\x64\x49\x14\x25\x2b\x89\xb7\x77\x58\xa1\x40\xaa\x3f\x24\x87\xcf\x3c\x7c\x66\x38\xf4\xff\xff\xed\xed\xf9\xeb\x2b\x32\x1b\x4f\x47\x9a\xe9\x14\xe6\xe4\x17\xb9\xa4\x9c\xfd\x41\x35\x13\x5c\x8d\xee\x40\x2a\xfc\xcf\x9c\x4c\xc7\xb3\x51\x44\x15\xbc\x97\x6c\x4e\x26\x23\x05\x71\x2e\x99\xde\xde\xc4\x2b\x58\x83\x9a\x8f\x08\x11\x34\xd7\xab\xdf\x4e\x7f\x9b\xce\xc9\xff\x31\x1e\xa7\x79\x02\xc4\xfb\x6c\xb2\xfb\x66\x2c\xe9\x3a\x1d\x8d\xf4\x36\x73\x8d\xeb\xa3\x9a\x7b\x42\x32\x29\x32\x90\x9a\xb9\xf7\xe6\x5a\xa6\x22\xa2\x29\x4b\xca\x7b\x42\x4c\xf3\x39\x51\x5a\x32\xbe\xdc\x3d\x5c\x33\x7e\x05\x7c\xa9\x57\x73\xf2\x53\xf5\x90\xde\x97\x0f\x67\xcf\xa6\xc5\xe3\x2c\x8f\x52\x16\xff\x1b\xb6\x2a\xdc\xe5\xa7\xcf\xf5\xf6\x97\x1a\xd6\x6a\x4e\x4e\xcb\xd6\x09\x7f\x48\xb3\xd9\x74\xba\x7b\x9a\x80\x8a\x25\xcb\xec\x5c\xc9\x15\x53\x9a\x88\x05\x11\x35\x04\xc8\xc5\xf5\xcd\xb8\xf8\x5c\x6c\x38\xfa\xe0\x31\x06\x76\x0c\x94\x2b\xec\x8f\x7c\x31\x7f\x38\x45\xa7\x7c\x29\x47\x5a\xc3\x3a\x7a\xe8\x50\xfb\x66\xe5\x06\xdb\xac\x04\xa1\x12\x8a\x11\x08\xe3\x44\xaf\x98\x6a\x4c\xb9\x34\xa2\x60\xce\x41\xa0\x75\x84\xb9\x4c\x8c\x21\x2a\x8f\x1a\xe3\xa9\x91\x6d\x03\xf7\x74\x9d\x21\xed\x7d\x8a\x91\xa5\x04\xe0\x4c\x9b\x07\xd0\x43\x97\x13\x32\x3b\x7f\xf1\xe1\xc3\xea\x39\x3b\xff\xf9\xec\xed\xc7\x57\xd7\x7f\xa7\xf7\xdb\xe7\xf7\x1f\xa3\xfc\x43\x7e\x75\xcb\xbf\x7e\xb8\x92\xbf\x86\xf8\x72\xd2\x18\x60\x1c\x8b\x75\x87\xbb\x4f\x2c\x84\x33\xef\xfe\xd4\xbb\xff\xa9\xcb\x85\xee\xf5\x59\x27\xb8\x27\x84\x26\xb8\x60\xc6\x2d\x6b\xbc\x35\xf9\x0e\xdf\x1b\xb8\x9f\xb4\x36\xe3\x15\x4b\x13\x09\x7c\x1e\xec\x1a\x7d\x3b\x2a\x67\xd0\x35\x4c\x49\xda\x3d\x12\xd0\x60\xc1\x7b\x05\x09\x32\x10\x38\xa1\x4a\xb1\x25\xc7\x0f\x09\x2d\xa9\xa8\x91\x98\xdc\x23\x62\x88\x18\xbb\x81\x49\x24\x22\xf3\xc5\x25\xbf\x63\xba\x57\xae\x5c\xa3\x96\x6d\x52\xa4\x35\xf3\x3b\x26\x80\xe3\xf3\x7c\x3d\x27\x9f\x2c\x1d\x8e\x0b\x6b\x2b\xf2\xc7\x12\xa8\x06\xa4\x69\x82\x7f\x34\x5b\x43\xa7\xd1\xce\xe0\xda\xd0\x8e\x61\x23\xaf\x9f\xd3\xe9\xec\xf9\xc9\xf4\xf4\xe4\xf4\x1f\xef\x66\xcf\xe7\x67\x33\xfc\x37\x9e\xbe\x98\x7e\x34\xfd\x9e\xbf\xb9\x44\xd2\x77\x4d\x33\xa5\x11\xa4\xfb\x24\xb9\x52\xdf\x67\xd3\x90\x50\x97\x7c\x8e\x69\x9a\x46\x34\xbe\x7d\xff\xf6\xea\x9f\xc3\xfb\x3c\x0d\x77\xfa\xac\xec\x34\x65\xc0\xf5\x4b\x09\x09\xfe\x61\x34\x55\xaf\x24\xe5\xfa\x1d\x76\x5a\x1b\xa3\x41\x99\x4b\x9e\xb0\x18\x81\x51\x84\x2d\x9c\x54\xdd\xc2\x16\x47\xdc\x92\x08\x0c\xaa\x89\x91\x30\x5a\x74\x6c\x40\x2c\x7b\x76\x41\xf0\x94\x2c\x52\xb1\x19\x7b\xf6\x47\x02\xe1\xa7\xbc\x36\xe2\x82\xe6\xa9\x9e\x93\x05\x36\x2c\x35\x06\x03\xa6\x04\xfd\xc0\xb9\xbb\x68\x0c\xc9\xbf\xb6\xc8\x98\x2a\x0e\x93\xcf\xa3\x49\x43\xf2\x4c\xaf\x99\x50\xda\xf5\x9e\x30\x95\xa5\x74\x7b\x6d\x59\xfd\xd2\x12\xe1\x1a\x36\xf5\x95\x39\x6a\x01\xe3\x3e\xc3\xa9\x73\xd8\x34\x57\x0d\x99\x59\xba\x11\xb5\x12\x79\x9a\x18\x9c\xac\xca\x43\x21\x68\x24\xc5\x80\x30\x26\xbf\x1a\x8d\x70\x21\x0e\x41\x45\x26\x2d\x84\x5c\x23\x9c\xb8\x0c\x31\x43\x88\x6f\x1d\xde\x7e\xde\x40\x90\x15\x62\xa3\x70\xda\x9c\x2e\xf1\x1e\x31\x17\x45\x08\x31\x63\x3a\xa0\x23\x91\x6c\x4b\xd8\x68\x96\xa5\xc6\x81\x38\xce\xe4\x77\x55\x2e\xd1\x0a\xce\xd6\x24\x25\xa8\x0c\x01\xaa\x58\x8d\xeb\xa1\x6a\x54\xef\xba\xbf\xfb\x9e\x21\x08\x39\xab\xf7\xd9\x94\x28\x6e\x7c\x26\x24\xfb\x03\x12\xfc\x62\xf2\xad\x94\xd3\xef\xae\xc1\x12\xf4\xbc\x22\xc8\xce\xd5\xb5\x8c\xeb\x1b\x51\xb1\x30\xb9\x14\x12\xe0\xa8\xee\x98\xb9\x93\x8e\xa3\x63\xef\xb1\x75\xcb\x11\xf9\x4c\xbe\x93\x52\x56\x1a\x26\xbd\x02\xdd\x4c\x49\x18\x5f\x88\x52\x47\x7c\xb4\x0c\x5e\xd3\x3a\x0a\x3e\x62\xfb\x30\xeb\x41\xcd\xc3\xad\x1f\xb9\xb2\xc1\x59\x67\x83\x6b\xa1\xc9\x42\xe4\xdc\x7d\x9d\xe5\x8f\x07\x76\x1f\x82\xef\x33\x23\xce\x9d\x20\x36\x21\xea\x83\xa7\x13\x9a\xbf\x90\x1f\x76\xaa\x74\x20\x47\x04\xb5\xed\x26\x8f\x02\x13\xeb\x16\x38\xcc\x19\x43\x29\xea\x81\xe4\x20\xe0\x3d\x4f\x77\xc2\x1e\xdc\xef\xc3\x5e\x2f\xb6\xfc\xb8\xcf\x93\x13\x2f\xa9\xac\xfb\xea\x30\xde\xf2\x2c\x38\xb7\x69\x5a\x23\x47\x0b\xb9\xe1\x71\x8e\x70\x7d\x56\xd9\xd8\x20\x27\x34\xcc\x7b\xed\xac\x72\xc9\x24\xc6\x2e\x95\xc7\x31\x28\xb5\xc8\xd3\x74\x7b\x30\xd7\x79\x66\x3e\xd8\x69\x65\xa3\xb3\x9e\x46\xd5\x12\x2c\xbe\x99\x7c\x2b\xd3\xdc\xef\xf5\x40\x95\x82\x6e\x64\xac\x87\x71\xb9\x67\xcc\x5b\x58\x8b\x3b\xa8\x9c\xbe\x90\x62\xdd\x70\x7b\xad\x61\xd0\x69\xc6\x6d\x67\x3e\x9c\x21\xc7\xb9\x09\xf5\xf8\xad\x05\xf5\x30\xb0\x03\x70\x7b\x0d\xdf\xad\xc0\x25\x49\x42\xba\xd4\xa8\x1e\x1a\x12\x81\xe9\x26\x47\x97\xc0\xbd\x49\x95\xbc\x8e\x5f\x0c\xeb\x98\xa6\xa8\x5f\xc9\xd6\x24\x57\x25\x92\xc5\x7e\x66\xd2\xdc\x58\xfe\xe9\x8b\xd8\xee\x8f\x8c\x3f\xad\x5d\xb8\x84\x23\xc0\x6d\x65\x91\x0e\x9a\x0d\x79\x6b\xdb\x55\x76\xf3\xd8\x98\x35\x64\x65\x07\xd6\x76\xd8\xee\x62\x63\xd4\x4d\x92\xf0\xf2\x1e\xb2\xc0\x3b\x97\xf8\x5f\x86\x79\xdc\x79\x79\xdc\xab\x2b\x21\x65\x39\x9c\xb6\x74\xa8\x4b\x61\x59\xaf\xba\x74\x52\x27\xa8\x30\xde\x40\xbf\xd8\xee\xa5\x1d\xae\x97\x3d\x01\x57\x0f\x75\x76\xd0\xdd\xfd\xda\x3e\x89\x05\xd7\x92\xc6\x5a\x3d\x31\xcb\xf2\xb7\x11\x55\xbf\xc6\xfd\x4d\x3f\xd4\x76\x2d\x5e\x46\x86\x9b\x8b\x97\x65\xc3\xb0\x7c\x98\xed\x87\x21\xea\xae\x7f\x53\xc1\x91\xd0\x26\x2f\xf2\x6d\x66\xe4\xc4\xbc\xc8\xa8\xad\x4c\x8c\x31\xf1\x49\xac\xd0\xab\x18\x70\x27\xcf\x97\x24\xda\xda\x4a\x49\xc5\xed\xaf\x39\xc8\xed\x1b\x2a\xd1\x1c\xdd\x28\x98\xed\x8a\x64\x3f\xdf\x67\x0c\x01\x0a\x6b\x8d\xbf\x97\x0f\xcc\xe0\xb2\x28\x81\x1b\xc3\xc0\xf5\x55\xcd\xe6\xd8\x5a\xe4\x0a\x00\xb8\x97\x4d\xb7\xf6\x33\x7c\xc3\xee\xea\x73\x36\x35\x53\x09\x3a\x97\x98\x67\x8c\xbd\xc1\x24\x7c\xcd\xad\x81\x8d\xfa\x81\x75\xad\x46\x1c\xc2\x76\x33\xae\x61\xe9\x89\x8e\x67\xf7\x8d\x69\x8d\x88\x2e\x14\xe8\x63\xb3\xb6\x91\xbd\x48\x25\x89\xe8\x2e\x11\xca\x31\xb9\x28\xcc\x46\xe4\xbf\x4c\xbf\x0c\x37\x6b\x4d\xef\x1f\x6d\xd4\x6b\x7a\x6f\xc6\x07\xa2\x70\x35\xec\xb5\xea\xd9\x43\xcc\x2a\x4c\x63\x6b\x53\x6f\xb3\xd5\x14\xf3\x64\xc2\x76\xf5\xbd\xa7\x2e\x99\xe1\x6b\xe2\x8d\x63\x6b\x55\x5a\xdc\xb3\x38\xd2\xa2\xc8\x9e\x15\x2c\xaf\xd9\x6c\xb1\x71\xc5\x77\x8c\xbd\xbf\x8b\xbe\x92\x7b\x4f\xac\x9c\xfa\x1e\x7b\x6a\xd0\xab\xe6\xe6\xca\xbd\x16\xeb\x61\x69\xa7\x87\x97\x93\xf4\x16\x64\xdd\x31\xe0\x25\xe5\x31\xa4\x98\x91\xb4\xe1\x1a\x0f\x93\xff\x8e\x00\x10\xca\x20\x9c\x38\xc5\x76\xc8\x14\x4a\x15\xa6\x19\xbb\xad\x1d\x1f\x34\x77\x3d\x6f\x2e\x4d\x95\xd1\x2d\x7a\x2b\x73\xae\x94\x58\x14\x19\x5d\x61\xd0\x04\xd7\x64\x57\x25\xc5\xa8\x0d\x90\xb8\xf2\x19\xb5\x91\xc6\xc9\x48\xc6\xc6\x3f\x8a\xb2\xae\x36\x7c\x65\x6a\xc0\x03\xc9\x5a\x88\x1c\x1a\x69\xa7\xfb\x63\x49\xd8\x71\x9a\xd4\xcc\x86\xc3\xc5\x03\x37\xd3\xf0\x1c\x1b\x55\x03\xe3\x48\xfc\xf2\x18\x6f\x9d\xd3\x08\xd3\x0a\xd2\x45\x59\x1a\x35\x99\x56\x04\xa6\x92\x7e\xc7\xd0\x79\xc7\xf8\x9a\x6c\x58\x9a\x9a\x87\x4b\x40\xf8\x5d\xe2\x09\xd2\x9e\xbd\x26\xf0\xb4\xfd\xae\x67\xf6\xf0\xac\xf8\xe9\x20\x7b\x43\x9b\x2b\x90\x4e\xfa\x07\x87\x86\x4a\x36\x8b\x2c\x12\x4a\x53\x6e\x1f\xef\x94\xc2\x9e\x36\xd4\x64\xa2\x41\xce\x2e\x7a\x0e\xd9\x3a\xb6\x48\xd6\x85\xc0\x70\x14\xfa\x60\x18\x9e\xbf\x95\xaf\x6b\xa5\xca\xd6\x4c\x5d\xa9\xb1\x35\x50\xa0\x1c\xe9\x14\xc2\xa2\x68\xf6\x02\x02\xef\x64\xed\x50\xc7\x2e\x50\xb3\x2e\xeb\x8a\xf8\xf0\x0d\x59\xe8\x30\x6c\x0f\x28\xc3\x89\x19\x9c\x97\xbf\x1d\xda\x47\x33\x5c\xd0\x05\x0a\x1e\xd5\x7a\x02\x50\x03\xf2\x0b\xfb\xba\x1f\x72\x17\xa2\xec\x86\xa8\x50\xf7\xfd\x13\x1e\xb2\xc9\x28\x3a\x2b\xb7\x19\x2e\xb6\xd4\x8e\x97\xbd\xd4\xc9\x1c\x9a\xe0\x26\x6f\x4d\x31\x09\xb0\x27\xfe\xa8\xc5\xfc\xb6\x08\x1b\xe1\x5d\xf8\x21\xe2\xc6\xe4\x1b\x9a\xe4\x45\xf5\xa6\xd0\x06\xa5\xf6\xa2\x96\xf5\x04\x65\x56\x15\x3a\x7b\x71\x7d\x63\xa7\x63\x2a\x71\x22\x66\x56\x35\x37\x4c\xaf\xfc\x39\xfd\x69\x4c\x6e\x1e\x44\x57\x57\xc7\x89\x6e\x79\xd5\x4e\x28\xcf\x42\xaf\xc3\xe7\x9a\x9d\x84\xd9\xcf\xf5\x1d\x50\x1d\xaa\xea\xae\x03\x87\x80\x3e\xe0\x8a\xcb\x9d\xa7\x7b\x38\xed\x97\x39\x24\x88\xb9\xdd\xa7\x73\xc8\x02\x5b\xcf\x30\x99\xde\x7f\x9d\x2a\x22\x4d\x7e\x30\x5b\x0a\x88\x61\xf3\xbf\xc1\xd2\x0e\x25\x6f\x09\xa6\xb1\xb6\x5d\xed\x08\x30\x3c\xa0\xe7\x5d\x3c\x6f\x75\xb7\x4f\x5f\x4d\x47\x86\x62\x36\x55\x6b\x46\xe1\x41\x51\x01\xdb\xf7\x31\x74\x17\x16\x76\x16\x1f\x26\x2c\xec\xe6\x5f\x8f\x0b\x4f\x9c\xb7\x8b\x2d\x5a\x42\xf5\x13\xa9\xbe\xed\x80\xff\xbb\x9e\xfe\xbc\xb3\x95\x75\x3d\xee\xc4\xa4\x5f\x6a\x8e\x3e\x7d\x3e\x0a\xff\xe0\x68\xf4\x9f\x00\x00\x00\xff\xff\x60\xa5\x39\x57\xfd\x28\x00\x00")

func organizationsRamlBytes() ([]byte, error) {
	return bindataRead(
		_organizationsRaml,
		"organizations.raml",
	)
}

func organizationsRaml() (*asset, error) {
	bytes, err := organizationsRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "organizations.raml", size: 10493, mode: os.FileMode(420), modTime: time.Unix(1465552322, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _securityschemesOauth_2_0Raml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x92\x31\x8f\x13\x41\x0c\x85\xfb\xfd\x15\xd6\x36\x34\x90\x1c\xa7\xab\xb6\x3b\x84\x44\x09\x05\xa9\x10\x8a\xe6\x66\x4c\x32\x62\x63\x0f\xb6\x37\x21\x88\x1f\x8f\x27\x9b\x8d\x92\x28\x91\xa8\x2e\x4d\x56\x6f\xe6\x3d\x7f\xf6\x38\xa1\x46\xc9\xc5\x32\x53\x07\x7f\x1b\x80\xcf\xcf\x83\xad\x1f\x21\x2b\x04\x28\xc2\xc6\x91\x7b\xb0\x75\x30\xe8\xd1\x14\xf0\xb7\xa1\x50\xe8\x21\x94\xa2\x20\xf8\x6b\x40\x35\x08\xee\x61\xc9\x7f\x42\xcd\x01\x63\x77\xe6\x6d\x30\xf4\xbc\x84\x16\x72\xaf\x90\xc9\x03\x07\x45\x79\xe3\xc9\x31\xf2\x40\x06\xbb\xec\xb6\xc1\x60\x85\x66\x99\x56\x5e\x06\xb3\x40\x09\xaa\x3b\x96\x34\x6b\x6c\x5f\xb0\x1b\x89\xe0\x71\xf6\xd0\x8c\xb0\x2f\x98\x3e\xec\x3b\x8f\x5e\x63\x48\x28\x5a\x3f\x01\x9e\xcf\x11\x46\xa9\x16\xbf\xea\x6e\xfc\x2d\x14\x53\xa5\x54\xa4\xe4\x54\xdb\xd0\xe7\x34\x95\xa9\x70\xa8\xea\xc7\x3f\x91\x66\xf0\x91\x81\xd8\x2a\xb8\x2b\xce\xb9\x46\x39\x60\x9f\xb2\x5c\x81\x76\xf4\x2c\x0f\x9e\x16\x7c\x26\xb2\x07\x35\xa9\x3d\x95\x20\x61\x83\x3e\xb4\x99\x5b\x0e\x27\x5f\x26\xe5\x48\x7e\x6e\x7e\x6d\xf0\x8b\xa9\xb5\xc7\x89\xfa\x15\x41\x2d\x4c\x8a\x47\xc4\xa7\x87\xa7\x9b\x64\x0b\x9a\x5e\x1e\x53\xa3\xe3\x2b\x1e\x2c\x17\x0b\xb1\x90\xdc\xc1\xda\xac\x68\x37\x9f\x67\xd3\x3d\x0f\x33\xa6\x3e\x13\xce\xb7\xef\xe7\x5c\xef\xce\x4f\x39\xcd\x34\x90\xaf\xb5\x8f\xff\xb2\x9e\xcd\xef\xba\xf4\x27\x09\x64\xda\xc1\xb7\x4b\x79\x19\x39\xe1\x5b\x88\x7d\x46\xb2\x65\x14\x4c\xfe\x9f\x83\xaf\xe9\x77\x4f\xd0\xc8\x65\xea\xfc\x1d\xb4\x75\x69\xbb\x90\x36\x99\xda\x0b\x29\xd3\x0f\x3e\x29\x2c\xab\x40\xd3\xf6\xf1\x8e\x50\x6e\x1f\x6d\x70\xf3\x72\xef\xec\x7e\x60\x64\x32\x09\xd1\x3b\x11\x7f\xa1\xd3\x9d\xc8\x9b\x12\x68\x7f\x05\x37\xa9\x37\xaf\x5e\xd4\x98\xc4\xbb\xf1\xa3\x7c\x47\xf5\xcd\xb6\x1c\xb3\x27\x58\xdb\xfc\x0b\x00\x00\xff\xff\xbf\x96\x88\x8b\x48\x04\x00\x00")

func securityschemesOauth_2_0RamlBytes() ([]byte, error) {
	return bindataRead(
		_securityschemesOauth_2_0Raml,
		"securitySchemes/oauth_2_0.raml",
	)
}

func securityschemesOauth_2_0Raml() (*asset, error) {
	bytes, err := securityschemesOauth_2_0RamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "securitySchemes/oauth_2_0.raml", size: 1096, mode: os.FileMode(420), modTime: time.Unix(1465551297, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _userorganizationsRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x41\x6f\xdb\x30\x0c\x85\xef\xfa\x15\x5c\x87\xdd\x06\xdb\x29\x76\xf2\xad\xbb\x0c\x1b\x36\x0c\x68\xd1\x53\x11\x14\x8a\xcc\x26\x2c\x64\x49\x10\xe5\x0e\x5e\x96\xff\x3e\xc9\x4e\x1a\x39\x73\xb2\xf2\x62\xc3\xa4\xde\xe3\xfb\xe4\xf7\x1f\x6e\x6f\x7e\x7c\x87\x45\x51\x89\x40\x41\x63\x0d\xf7\x8c\xfe\xa7\x5f\x4b\x43\xbf\x65\x20\x6b\x58\xbc\xa0\xe7\xf8\x52\x43\x55\x2c\xc4\x4a\x32\xde\x7b\xaa\xa1\x14\x8c\xaa\xf3\x14\xfa\x3b\xb5\xc1\x16\xb9\x16\x00\x56\x76\x61\xf3\x78\xfd\x58\xd5\xf0\x8e\x8c\xd2\x5d\x83\x70\x32\x56\xbe\xce\x14\x5e\xb6\x5a\x88\xd0\xbb\x74\x38\x9e\x4e\xf5\xcd\x92\xc9\xed\xbf\x9a\x17\x0a\xc3\x5b\xbd\x9f\x00\x70\xde\x3a\xf4\x81\x46\xcf\x63\xd9\xec\x5c\x0d\x1c\x3c\x99\xf5\x64\xa0\x8b\xd9\x66\x1b\xde\xc6\xe8\x93\x2f\xa9\xd2\x66\xb3\xe3\xa9\xd0\x74\x6d\x0d\x0f\xf6\x97\x41\xff\x11\x5a\x6c\x57\xe8\x97\x62\x84\x82\xcd\xe7\x3e\xf6\x8e\x38\x60\x29\xca\x64\xce\xe5\x36\x3d\x8c\x6c\x71\x57\xe6\xeb\x0e\x49\xf2\xb3\x19\xc9\x2d\xb0\xb2\x89\x51\x54\xbc\x1a\x22\xc8\xa6\x25\x73\x05\x4b\xd8\x45\x61\x80\x35\x86\x71\xf9\x06\x59\x79\x72\x63\xfe\x2f\x18\x20\x6c\x10\x34\x71\x98\xa0\x61\x90\x03\x09\x20\x86\x61\xfd\xd8\xdd\x07\x00\xfb\x34\x08\x79\x64\x17\x07\x8f\x80\xaf\xab\xea\xc8\x67\x65\x9b\x3e\xa7\x25\x9d\xd3\xa4\x06\xed\xf2\x99\xf3\x9b\xba\x74\x5b\x30\x9a\x1f\x00\x3f\x2c\x4f\xba\xe3\x46\x59\x3b\xf6\xcb\xed\x5a\xdb\x95\xd4\xd4\xec\xca\x74\x67\x91\x67\x7a\xec\x46\x65\x67\x39\x1c\x3c\x26\x28\x6e\x94\x42\x17\xf6\x8a\xbc\x21\x07\x64\x26\x48\xc4\x5c\xb0\x4b\xb1\xc6\x5f\xe3\xfc\xcf\xba\x1f\xfd\x87\x63\x22\xb9\xc8\x85\x4e\x59\xfe\x8f\xe6\x1b\xad\x1b\xd4\x18\x70\x16\xc6\x9f\x57\xbd\x5b\x7c\x46\x75\x82\xe5\xa0\x92\x08\xc9\x29\xa4\xe2\x52\xa8\x4f\xf9\x9a\x67\xfc\x52\xdd\x75\xf1\x2e\xf8\xa9\xd3\xba\x8f\x42\xc9\x1f\x9b\xcc\xb6\x10\x7f\x03\x00\x00\xff\xff\x92\xde\xc4\xf6\x92\x04\x00\x00")

func userorganizationsRamlBytes() ([]byte, error) {
	return bindataRead(
		_userorganizationsRaml,
		"userorganizations.raml",
	)
}

func userorganizationsRaml() (*asset, error) {
	bytes, err := userorganizationsRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "userorganizations.raml", size: 1170, mode: os.FileMode(420), modTime: time.Unix(1465552894, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _usersRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3c\x5b\x73\xd4\x38\xd6\xef\xfd\x2b\xf4\xe5\xdb\xad\x7d\x98\xd0\x37\x3a\xb3\x43\xbf\x30\x81\x01\x16\x26\x61\x28\x12\xd8\xaa\xcd\xb2\x8c\xda\x56\x77\x6b\x63\x5b\x5e\x5b\x4e\xd2\x50\xfc\xf7\x3d\x92\x65\x5b\xb2\x25\xdb\x7d\x99\x00\x55\xeb\xe2\x92\xd8\x92\xce\x55\xe7\xa6\x63\xff\xff\x9f\xdf\x9e\x9e\x9f\xa1\xc9\x70\x3c\xe0\x94\x07\x64\x8e\xde\xa5\x24\x49\x07\x37\xf0\x0f\x65\xd1\x1c\x8d\x87\x93\xc1\x02\xa7\xe4\x5d\x42\xe7\x68\x34\x48\x89\x97\x25\x94\x6f\x2e\xbc\x35\x09\x49\x3a\x1f\x20\xc4\x70\xc6\xd7\x1f\xa7\x1f\xc7\x73\xf4\x7f\x34\xf2\x82\xcc\x27\xa8\x36\x6c\x54\x8e\x19\x26\x38\x0c\x06\x03\xbe\x89\xf3\xc9\x67\x78\x41\x02\xf1\x03\x42\xe2\xde\x1c\xa5\x3c\xa1\xd1\x4a\xde\x08\xf1\xdd\x19\x89\x56\x7c\x3d\x47\x27\xe3\xfc\x0e\x8d\x8a\x3b\xd3\x01\xdc\x39\x7d\xf3\xf2\x57\xb2\xc9\xa7\xfb\x24\xf5\x12\x1a\x73\x89\xb5\x20\x02\xa5\x31\xf1\xe8\x92\x7a\x62\x18\xba\x26\x1b\x39\x2c\x4e\x58\x4c\x12\x4e\x73\xf0\xf9\x95\xc1\xe8\x08\x87\x26\x74\x71\xe1\x98\xc2\x3c\xcb\xed\x38\xa0\x1e\x16\xa0\xa8\xdf\x78\x9a\x7a\x4c\x10\xa7\x6e\x5f\x7d\x28\x1f\x04\x92\xd6\x62\xb8\x40\x1f\x98\xc2\x12\xfa\x49\xae\x64\xa1\xe2\x39\x4b\x10\x8e\x10\xb9\x8b\x03\x1c\xc9\x41\x08\x2f\x58\xc6\x15\x08\x78\xe6\xe7\x3f\x86\x80\x11\xac\x79\x0c\x7c\x27\x68\xcd\x79\x9c\xce\x47\xa3\x15\xe5\xeb\x6c\x31\xf4\x58\x38\xa2\x3c\xdd\xb0\x8c\x45\x01\x8d\xc8\x88\xfa\x24\x02\x59\x6f\x80\x68\x90\xf2\x68\x11\xb0\xc5\x28\xc4\x29\x87\x9f\x7d\xe6\x29\x59\x4d\x47\x39\x8c\x61\xe8\x6f\xcf\xb6\x55\x82\x23\x4e\xfc\x4b\x56\x8d\xb5\x88\x37\xbf\x0c\x82\x2f\xd7\x04\xb1\x64\x85\x23\xc5\x13\xc4\xd7\x98\x23\x9a\x16\x2b\xa2\x84\x60\x1f\x61\xcf\x23\x69\x8a\x38\x43\x29\x0b\x61\xc2\x12\x86\x11\x89\xcd\x5f\x52\x44\xa3\x25\x4b\x42\x39\xbb\x92\x97\xef\x27\x30\xe3\xf1\xdc\x05\xf7\x3c\xe7\x5f\xb1\x94\x14\x54\x5a\xfc\x56\xc0\x66\x11\x91\x40\xb5\x11\xbc\x8e\x6f\x42\xfe\x93\x11\x60\xa5\x3f\xd4\x40\xd9\x78\x27\xae\xa3\xab\x0f\x47\xe6\x1d\x07\x97\xe2\x6c\x01\xfa\x06\x9a\x0e\x24\x34\xd5\x0a\xa4\x4f\x83\xef\x97\xb6\x35\xc0\xfe\x6e\xb1\x5f\xe0\xe8\xfa\xbb\x45\x7e\x89\x3d\xb2\x60\x0c\x08\x40\xf0\x5f\x40\x70\xb5\x63\x72\xdb\x61\x79\xa0\xa3\x95\xba\xb6\xb7\xa6\x9c\x35\x8e\x9c\xd1\x94\x0b\x06\x18\xcb\x48\x7a\x15\x89\x92\x5d\x3a\xe9\x1e\x18\x40\x61\xd5\xc0\x7e\x25\x28\x24\xe1\x02\x1c\xd3\x9a\xc6\xb0\xc8\x50\x98\xd0\x27\x20\x80\x53\xcf\x63\x59\xc4\xe7\x4e\x43\x45\x41\x4c\x3d\x4c\x91\xe6\x6f\x1e\x8e\x2b\x11\x53\x6f\xbb\xb9\x93\x6a\xae\xc4\x2b\xd9\x6c\x37\x7f\x36\x16\x84\xbd\x11\xfb\x22\xca\x04\xbd\x8a\x30\xcc\xc1\x44\x03\x0f\xff\xf5\xcf\x1f\x1e\x5f\x8d\x1f\x3c\xfa\xf0\xc3\x9f\xa4\x13\xc9\x8d\x9b\x9b\x7a\x0f\x6c\xbd\xa9\x0f\x0e\x1c\x5c\x1c\x80\x81\x84\xf0\xed\x97\x38\xa9\x96\x88\x92\xed\xa7\x6b\x7c\x64\xa0\x21\xc9\xe3\xbd\x88\xb0\x88\xa2\xdf\x1a\xb3\x6a\x8d\x98\xa5\x1c\x07\x1e\xf3\xc9\xf6\xcb\x4c\xc5\x32\xcf\xd5\x8e\xeb\xd0\x58\x08\x2a\x06\xe6\xda\x14\x4c\xc5\x8a\x24\xea\xae\x74\xba\x83\x16\xe8\x31\xf5\x78\x96\xb4\x8f\x81\x58\xe0\xda\x31\x00\xee\xbe\x90\x06\xa0\x03\xcf\x80\xad\x68\xd4\x0a\xa4\x8b\x12\x7c\x83\x39\x4e\x3e\x66\x49\xd0\xba\xcc\x9a\x87\x41\xe7\xa0\x16\xae\xc0\x5d\x11\x11\xba\xf7\x48\x19\xca\xec\xa3\x62\xf2\x89\x1e\xa1\x16\x37\x97\x34\x49\xb9\x35\x52\x0a\xb0\xe3\x41\xe5\xf2\x6d\x1e\xff\x2e\xa6\x09\x38\x4d\xe4\x63\x4e\x38\x0d\x49\x4b\x2c\xf0\x07\x38\xe8\xed\x97\xd4\x8c\x59\x6b\x50\xb6\xfd\xca\xca\xfa\xb9\x1d\xf2\xf6\x4b\x6a\x2e\xc5\xe2\x2a\x2d\x0a\x52\xdb\xd5\x0d\x27\x6a\x99\x62\x6c\xaf\x81\x1c\x40\xee\x70\x18\x07\xc4\x16\x5e\x2f\xd8\xc2\xa6\x4b\x4f\xb4\xdb\x95\x22\xbd\x62\xeb\x28\xd5\x82\x5f\x4d\x93\x0c\x44\x1e\xa0\xc9\x8b\xf7\x17\x7f\x3d\x99\xcd\xf8\xcd\xdf\xcf\xa7\x97\xe7\x93\x87\x37\xaf\xff\xf6\x53\xba\x60\x38\x7c\xf5\xe9\xec\xc7\xf0\xd5\xc3\x1f\x6b\x1a\x27\xac\xd8\xe4\xa7\x07\x93\xf1\x83\xe9\xf8\x72\xf2\xe3\x7c\x36\x81\x3f\xc3\xf1\xa3\xf1\x3f\x4c\x05\x34\x01\xdd\xb2\xe4\x5a\xd2\xf0\x33\xa4\x22\x31\x8e\x36\x22\x25\x31\x46\xac\x99\xa2\xf2\x67\xc5\x84\xc6\x88\x23\x1f\x47\x1e\x41\x90\x5c\x2e\x8e\xf2\x91\x22\x95\x91\x37\xc5\xbd\x61\x31\x0f\x42\x07\x53\x71\x75\x54\x16\x00\xe4\xe8\x87\x87\xd3\xc9\xf4\xe1\x4c\xfd\x3d\xd2\x1e\x93\x95\x78\x0c\x14\xda\x1e\x63\xdd\xcb\x1a\x78\xd7\x74\x48\xf9\x5b\x74\x11\x8b\x5d\xb4\xa4\x24\xf0\x1b\x23\x94\x43\x85\xf8\x90\x46\xea\x97\xc6\x18\xf0\x98\x68\x76\xf2\xa4\xb9\xba\xf2\x63\xe8\x92\x85\x2c\x49\xd8\x2d\xa4\x86\x4d\x08\x9a\xa7\x42\x97\x0f\x1e\xcd\x4e\xc6\x4d\x91\x38\x10\x7f\x0a\x49\x2f\xcc\x45\x4f\xe1\x37\x27\xe6\xc5\xa0\x16\xe4\x8f\x26\x47\x07\x41\x7e\x32\x1e\x8f\x8d\xed\x6d\x22\x7e\xbd\xf0\x9a\x94\xc8\x80\x0f\x5d\x9e\x09\x31\x9e\x54\xff\x34\xc6\x89\xd8\x0e\x9d\x3e\x79\xfa\xcb\xb3\xe7\x3d\x71\x1d\xe4\xfb\xf2\x86\x92\xdb\x83\x78\x93\x6d\x53\xbb\xff\x99\xf3\x6f\xdf\x9c\x17\xcf\xcc\x5c\xa9\x92\x2e\x0c\x78\xc5\x68\xf4\x9b\xf6\xf8\x65\x74\x03\xfb\xa9\x2a\x03\xd9\xc8\xd4\x97\x6b\x88\x55\xa8\x5c\xe3\x66\xc2\x82\xbe\x11\x8d\x10\xe7\x1c\x5d\xb1\xdb\x88\x24\xc7\x2a\xcf\x92\x98\x3e\x65\xb0\x0b\xb0\xc7\x2f\xe8\x2a\x82\x49\x6f\xf3\x34\xad\x25\xdb\x50\xe3\x5f\x36\x0b\x63\x31\x4e\x78\x55\x4c\xcb\x4b\x89\xc4\x7f\x02\xb7\xae\xaa\x22\x22\xfa\x30\x18\x09\x62\xe4\x92\xc2\x12\x58\xea\x62\x4f\x13\x02\x81\x0f\xc2\x28\x22\xb7\x92\x72\x39\x64\xc1\x7c\x2d\xbc\xd7\x6a\x74\xa3\x7f\xa7\x2c\xb2\xf1\x41\xc4\x84\x82\xc6\xd1\xe7\x62\xc7\x7e\xc9\x87\xad\xaa\x74\x47\xc7\x52\xab\x74\x7e\x2e\xcb\x7c\x57\xe8\x48\x32\x1f\xfb\x10\xfb\x1d\xa1\x0f\xe8\x0b\x2a\x36\x30\xa8\x72\x0c\xa2\xaf\xeb\xea\x74\x3c\x6e\x9a\x2c\x13\x7b\xfd\x6a\xa7\xc4\x41\x95\xf8\x75\xa4\xdb\xa0\x7d\xe8\x88\x33\x2d\xfb\xf3\x69\x1a\x07\x78\xf3\x5a\x06\x1b\xef\x62\x11\x82\x8a\x9f\xab\xe7\x46\x1d\x56\x3e\x2f\xeb\x73\x68\x4d\xd3\x2a\x82\x91\xf5\xcb\x22\x70\x19\xb8\x18\xd1\x4e\xbe\xcb\x1e\xb4\x05\xdd\xf9\xe5\x0c\xbd\xad\x52\x9b\x8e\x67\x26\x00\x83\xcc\x8b\x4c\x96\x24\x97\x59\x10\x6c\x50\x26\x69\xf6\xbb\xe8\x44\x90\x59\xb6\xad\x29\x4b\xd8\x11\xe3\x68\x09\x46\xc5\xcf\x63\xc4\x51\x8c\xd3\x14\x9c\xb7\x7f\x70\xa9\x5a\xe5\xfa\x46\x41\x1b\xb8\x50\xb4\x48\x37\x6e\xce\x69\xaa\x76\x97\x4a\xbb\xa5\x0a\x06\x26\x4b\x12\x12\xf1\x92\x13\x76\xe9\x22\x61\x1b\x5a\xc6\x38\xb6\xa6\x45\xd0\x0d\xaa\x5f\xb3\x72\xb6\x48\xc0\x70\x6d\xf4\x6c\x3a\xb5\xed\x50\x63\x09\x30\xf7\x38\xa0\x7e\xc9\x2c\x94\xd7\xac\xc1\xc4\x43\x7e\x0c\x8f\xc4\xb3\x1a\x9d\x96\x25\xf7\x37\x19\x6d\x7c\x2e\x2e\x02\xb1\x8f\xe9\x5a\x46\x32\x2c\x51\x0e\xbf\x9a\xba\x8f\x2e\xae\x88\xcb\xc2\xbc\x20\xfc\x99\x00\x77\x5a\x80\xb3\x1b\x1a\x18\x06\xfe\x20\x50\xe5\x45\x43\x23\x25\xb6\xa8\x44\xb7\x2a\xa1\x82\x27\x4b\x36\x6f\x70\x02\x70\xb8\x72\x38\xc5\x25\xc5\x23\x76\x71\x4f\xf7\x69\xe0\xc2\xe4\xff\x10\x1d\x9b\x00\x44\x91\x77\x49\x03\xf1\x13\x8b\xe0\x0f\x98\x8a\x12\x8c\x89\xa4\x4e\xa5\xc3\x1a\xd5\x3c\x88\x4d\x15\xfa\x28\x41\x97\x02\xd8\xc2\xaa\x16\x66\x54\xfe\x5a\xb1\x45\x97\xe4\x5b\xb2\xa2\xe2\x94\xe9\x35\xb9\xd5\x25\xea\x32\x2e\xc5\x70\xe5\xe6\x0d\x06\xfd\x61\xc6\x45\x1d\xd1\xc9\x53\xc9\xc6\x43\x5d\xed\xb7\x33\x29\x93\x0e\x93\x52\xd0\x0a\x8a\xd0\x4e\xad\x8b\xe6\x7e\x94\xf7\xe1\x40\x3f\x56\x94\x57\x07\x4f\xc4\x35\x1b\x3f\xea\x34\x88\x12\x8a\x38\xe8\xc3\x81\x38\xe2\xdb\x88\xdd\x5b\x1e\x76\x8c\x3e\x4b\x5c\xbe\xcc\xb5\xac\xa9\x56\x8e\xb6\x38\x2f\x87\x8e\x59\x5d\x58\x5a\x9d\xbe\x08\x67\x3d\x02\x3b\x0c\x5b\x33\x93\x67\x8b\xe2\x00\xd6\x29\x8d\xdd\xf6\x5d\x3b\xff\x3b\x18\xdf\xc9\xf1\xed\xf4\xd0\xca\x8f\xba\xb7\xe9\x23\x42\x71\x76\x2b\x54\x37\xb0\x89\x52\x33\xda\x01\xd8\xc2\x16\xe1\xfd\x22\x07\xf4\x13\xde\x5b\x12\xb2\x1b\x79\x0e\xde\x22\x22\x27\x3b\x1c\xbe\xbe\x06\xe3\x99\xbe\x30\x2c\x26\x20\x1a\xc7\x70\xdb\x71\x48\x84\x81\x26\xb2\xf2\x84\x4b\xc4\x79\x0b\x52\x2d\x5f\x2e\x35\x2a\x5c\x84\x91\x04\xd7\xcc\x6c\x8d\x85\xef\xd5\x94\x7e\x4c\xbc\x20\x91\x9f\x16\x9e\x48\x9c\xb8\xe5\xd8\x81\xb3\xda\x81\xa7\x36\x8e\x1a\xd0\xde\xd7\xe1\xac\x71\x0a\x94\x13\x71\xc8\x57\x46\xb9\x79\xdb\xc5\x41\x02\x8b\x56\x8f\x04\xbc\x39\x8d\xe9\xaf\x64\xe3\xf2\x41\x30\x40\x6a\x57\xde\x67\x52\x9c\xd2\x96\x19\x67\x7e\xdd\x8b\x07\xda\xc3\xb9\x00\x11\xd2\xaf\xb4\x12\xe1\x22\xa5\x1f\x41\xc5\xa5\x8a\x38\x12\xd0\xa1\xbd\xc0\x8a\xb8\x05\x29\x8e\x95\x73\xa8\xce\x70\x42\x0c\xc9\xcd\xbc\xea\x06\x4a\xfb\x71\xd7\x92\xaa\x5b\x4f\xb4\x2d\xab\xe6\xd7\x21\x79\x5a\x96\x06\x77\x73\x89\xb0\xc8\x75\x4d\x30\x1d\xce\x10\xf2\x12\xf9\x1b\xec\x48\x54\x9f\x7a\xaf\xbe\xef\x9b\x76\x6a\xab\xfa\xe9\x78\x3d\x83\xe9\x62\xbc\xcc\x5e\xa2\x42\x87\xd0\x62\x93\x03\xec\xcb\x01\x8b\x8e\xd6\x6d\x80\xd6\x01\x67\x5e\xfb\x27\x91\xc6\xa6\xdf\xd6\xd1\x77\x71\x46\x73\xf1\x36\x1a\xf6\x74\xee\x05\xc3\x4d\xbf\xab\x3a\xe7\x8a\xd9\x75\x4a\x2c\x54\xd8\xeb\xbf\xa6\x0e\x8a\xe6\xbb\x6b\x55\x29\x46\xf5\xa1\xce\x4a\x61\x83\x06\x13\xff\x7c\x19\x94\xc9\xc5\x49\xe1\x3f\x8b\xf2\xb6\x8b\x82\x7d\x1c\xaa\x95\x7e\x57\xc9\xdc\x40\x36\x1f\x9a\x9b\x93\x34\x65\x1e\xcd\xab\x64\x6a\xaa\xe8\xea\xdb\x91\x25\x56\x38\x96\x95\x07\x46\xa5\x77\x24\x3a\x05\x77\x2f\xf7\x8a\xd9\x47\xc7\x6e\x3e\xd5\x4d\x80\x28\xe7\xbd\x6c\xf4\x26\x7e\x9d\x0a\x71\x71\x82\x55\x63\x88\x19\x6a\x6a\x4c\x69\x29\x94\xc0\x92\xec\x9a\x58\x20\xd6\xfb\x2f\x74\x40\xb5\xd2\xd1\xee\xea\xa8\xe1\x78\xdf\x9c\xec\x95\x43\xb7\xd6\x4f\x74\x3e\xe9\x51\xba\x1e\xb2\xba\x0a\x28\x66\x54\xdf\x56\x37\x31\xc3\xf7\x6d\xce\x48\x76\xae\x93\x94\xc9\xa9\x89\xa5\x45\x42\x35\xe7\xdd\x5e\x13\x39\x44\xed\x67\xcf\xdc\xdb\x41\x59\x33\x96\xe8\x1b\xd6\xd6\xe3\x38\x23\x92\xb8\x5f\x95\xb6\x1d\xc0\x76\x1f\x11\x74\x14\xf1\xb4\x13\x02\x77\x75\xe5\x8e\xe6\x7d\x9f\x8a\xbb\xc3\xfb\xce\xad\xd4\x44\xad\xe1\xb2\x21\xdf\x16\x61\x74\xa5\x5f\xb6\xe0\xd3\x1a\x7a\x6e\x1d\x78\x36\x43\x2c\x5b\x80\xd5\x55\x65\x2d\xe3\xab\xe6\xfe\xda\xe3\x90\xe4\xb4\x5e\x30\xa9\xb9\x00\x8d\xdb\x87\xf4\x02\x4e\x4f\x65\x2d\xe8\xf7\x79\x25\x61\x97\x62\xbe\x4e\x5c\x9b\xf1\x33\xf6\xf1\xe1\x8d\x99\xdb\xf9\xd8\xdb\x38\xfa\x38\x9e\x66\xeb\x47\x9b\xf3\x89\x1b\xa3\xfb\x3b\x20\x17\x6d\xce\x4d\x6c\x6c\xe0\x26\x9e\x8e\x83\x94\xda\xf6\x6d\x77\x41\x12\x04\xaa\x75\xbe\x34\xc9\xea\x26\xae\x8b\xc8\x6e\x6a\xfb\x92\x2d\x2e\x8b\xb9\xf9\x0e\x1d\x94\xbb\xfb\xa8\xab\x3f\xc1\xc6\x95\xdd\xdd\x94\xc6\xf0\xca\x55\x1d\xaa\x6b\xa1\x45\xde\x9d\x82\xee\xa7\xe1\x9d\xee\xa9\x4b\x5b\x76\x71\x4d\x16\xc7\xd4\x29\x94\xd2\x35\x59\xcc\xc8\xce\x19\xf3\x1b\x6d\x07\xd7\xab\xf9\x23\xec\x71\x7a\x63\xd4\xda\x5b\xcb\xc7\x45\x9d\xdd\xbe\xe9\xda\x8b\xec\x9c\xdc\x71\xe1\x43\x74\x8b\xd2\x2b\xdc\x68\x6c\x2d\x57\x79\x5d\xd1\x28\xcb\xea\xe6\x0c\xfb\x56\xec\xb7\x0d\xfb\xa4\x3d\x15\x99\xb6\x97\x27\xdb\x62\xca\xf7\x24\xa1\xcb\x8d\xe4\xe7\xeb\x56\x7e\xca\x81\xb4\x52\x8e\xa6\x4d\x3e\x6c\xe4\x98\x86\x69\xde\x8f\xea\x68\x36\x69\x27\xf9\x30\xda\x7a\x93\xd3\x5c\x8b\x24\x9b\xdd\x26\xc6\x0a\x54\x75\x9a\x18\x08\x8a\x3e\x13\x41\xce\x3d\xeb\x85\xd9\x49\x52\x0b\x08\x45\xa7\xe7\xde\x91\xa0\x11\xc1\x58\x3a\x06\x85\xd9\x12\x80\x6a\xc5\xa6\xc3\x64\xc5\xf6\x70\xcb\xd5\x84\xda\x9d\x0d\xdf\x7f\x40\x58\xc7\xf2\xab\x3a\xfb\xc3\x16\x58\x4c\xd2\x1a\x8a\x67\x86\x39\x07\x49\x45\xbe\x56\x78\x54\x17\xa2\x19\x1c\x59\xa2\x1e\x3d\xb6\x11\xcc\x50\x7b\x43\x75\x2d\x02\x57\xdc\x51\x4e\x1f\xec\xec\x58\x35\x02\x04\x4b\xa5\x18\xb7\x48\x2d\x62\x5c\xbc\xda\xaf\xbf\x87\x7a\x20\xa9\x35\x0e\x66\x64\x54\xa8\x4e\xf9\x0c\xb0\xc7\xe2\x51\x0a\x78\x26\x04\xc5\xe0\x66\x05\x03\x69\xd9\xc8\x9d\x0a\x2b\x0b\xec\x49\x18\xd8\xde\x8e\x7e\xae\xaf\xbe\x8d\x90\x8e\xf8\xbc\xa5\x3d\xdd\x78\xb5\xd7\x8a\x57\x4e\xef\x1e\x6b\x14\x1d\xe4\xaa\xd5\x1c\x96\xb2\xf7\xa0\xe7\x9d\xf4\xba\x52\x14\x33\x0f\xa9\x10\x56\x75\x28\x01\xa1\xdb\x35\xa4\x87\x55\xbf\x21\x44\xc3\x93\xa2\x01\x51\xb4\xbb\x03\xdb\x87\xe8\xb7\xc4\x87\x47\x62\x21\xa5\x24\x8b\x8d\x7c\x73\xaf\xd8\x57\xce\xa2\x85\xfa\x9a\xc6\x33\xf9\xf2\x95\xb5\x15\xb1\xfe\x7a\x76\x03\xe3\x97\xea\x83\x1c\x02\xa1\xfc\x25\x2e\xbf\xc2\xfe\x58\x62\x42\x96\x38\x0b\x78\x5e\xc3\x90\x87\x33\x22\x0a\xd6\x69\x14\xfa\x9d\x10\x9e\x25\x51\xbd\xf3\x45\xbc\xb4\x2d\x51\x43\x4b\x90\x79\x15\x4f\xa4\x1c\x68\xb7\xe1\x6b\xbe\xfd\x69\xc1\xf7\x42\xcc\x04\x0e\x2e\x53\xc2\x8f\x05\x4f\x97\x59\x7e\x0a\x1d\xe3\x15\xb0\x6e\x08\xb6\x21\x47\x17\x38\xfd\xfb\xf8\xf7\x7e\xe8\x84\xf8\x6e\x27\x64\xce\xf1\x9d\x80\x4b\x50\x4a\x3f\x91\x4e\x6c\x4e\xfa\xa2\xa3\x50\xa2\xa1\x78\xe5\x62\x7a\x32\x6e\x1c\x8f\xe8\x9f\x05\x39\xb0\x71\xab\x1f\x4c\x07\x81\xf1\x11\x92\x96\xee\x5a\xdd\x0c\x9a\x18\x0e\xbf\xb2\xc7\x33\x28\x50\xc6\x65\xf4\xb9\xfc\x08\x89\xbd\x76\xd1\xe0\x84\xbe\x48\x3b\x17\x0c\xea\xa5\x3a\xe0\xea\x5b\x33\xfa\x5b\x3a\xdf\x14\x63\xfa\x67\xe6\x3d\x58\x91\xe7\xe6\x2e\x6e\x44\x06\x17\x8e\xcd\xcf\x5d\xe8\x1f\x77\xb8\xa5\x41\x00\x3e\x15\x05\x2c\x5a\x89\x6e\x6d\x7c\x43\xca\xaf\xbb\x58\x3f\xe9\x52\x70\xb4\xab\xe2\xd3\x83\x84\x73\xe6\x43\xae\x09\x06\x9c\x7a\x6b\x1d\x44\x1d\x7d\x59\xe1\x58\x04\x44\x7e\x6f\x86\x90\x43\x04\x43\x26\x76\xff\x0d\x00\x00\xff\xff\x91\x62\x02\x72\x83\x49\x00\x00")

func usersRamlBytes() ([]byte, error) {
	return bindataRead(
		_usersRaml,
		"users.raml",
	)
}

func usersRaml() (*asset, error) {
	bytes, err := usersRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "users.raml", size: 18819, mode: os.FileMode(420), modTime: time.Unix(1465552333, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"companies.raml": companiesRaml,
	"contracts.raml": contractsRaml,
	"organizations.raml": organizationsRaml,
	"securitySchemes/oauth_2_0.raml": securityschemesOauth_2_0Raml,
	"userorganizations.raml": userorganizationsRaml,
	"users.raml": usersRaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"companies.raml": &bintree{companiesRaml, map[string]*bintree{}},
	"contracts.raml": &bintree{contractsRaml, map[string]*bintree{}},
	"organizations.raml": &bintree{organizationsRaml, map[string]*bintree{}},
	"securitySchemes": &bintree{nil, map[string]*bintree{
		"oauth_2_0.raml": &bintree{securityschemesOauth_2_0Raml, map[string]*bintree{}},
	}},
	"userorganizations.raml": &bintree{userorganizationsRaml, map[string]*bintree{}},
	"users.raml": &bintree{usersRaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

