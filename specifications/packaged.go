// Code generated by go-bindata.
// sources:
// specifications/api/companies.raml
// specifications/api/contracts.raml
// specifications/api/organizations.raml
// specifications/api/securitySchemes/oauth_2_0.raml
// specifications/api/userorganizations.raml
// specifications/api/users.raml
// DO NOT EDIT!

package specifications

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _companiesRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x4b\x73\xdb\x36\x10\xbe\xf3\x57\x6c\xdc\xe9\xcd\xa6\x48\xd9\xc9\x78\x78\xaa\xe3\xa6\x89\x5a\x3b\xe9\xd8\xf5\xc1\x93\xf1\x44\x10\xb1\x92\xd0\x90\x00\x03\x80\xb2\x98\x34\xff\xbd\x4b\x82\x12\x1f\xa6\x62\xd9\x3d\x94\x33\x3a\x08\xfb\xc0\xb7\xdf\x3e\xb0\x3f\xfd\x7c\x75\x76\x79\x01\xa1\x1f\x78\x56\xd8\x04\x23\x98\x58\x73\xab\xf2\x0f\x32\x11\x12\xbd\x15\x6a\x23\x94\x8c\x20\xf0\x43\x6f\xc6\x0c\xde\x68\x11\xc1\xc8\x33\x18\xe7\x5a\xd8\xe2\x3a\x5e\x62\x8a\x26\xf2\x00\x8e\x40\xb1\xdc\x2e\x3f\x8d\x3f\x05\xe5\x5f\xf7\xbd\x10\x32\x4e\x72\x8e\xd0\x33\x18\x6d\x75\x7d\xcd\xd2\xc4\xb3\x45\xe6\xbc\x9c\xab\x34\x63\xb2\x70\x1e\x32\xad\x32\xd4\x56\x38\x91\xfb\x16\x89\x9a\xb1\x44\xf0\xe6\xa4\xfc\x4a\xfb\x08\x8c\xd5\x42\x2e\x3a\x82\x54\xc8\x0b\x94\x0b\xbb\x8c\xe0\xb8\x2b\x60\xeb\x8d\x20\x7c\x19\x6c\x45\x59\x3e\x4b\x44\xfc\x07\x16\x66\xf7\x05\x1f\xef\xfa\x9e\x26\x16\x53\x13\xc1\xb8\xf1\x83\xeb\x4c\x68\x1c\xf2\xc1\x99\xc5\xce\xb1\xc6\x2f\x39\xe9\xf2\x08\xe6\x2c\x31\x8d\x4c\xe9\x05\x93\xe2\x2b\xb3\x94\x80\xe7\xa0\x09\x83\x60\xaf\x7b\x84\x9c\xab\xff\x16\xec\x8f\xbc\x5b\xb6\x96\x7a\xcf\x64\x0d\xf9\xc0\x35\x4b\xb3\x04\x07\x0a\x00\x26\x17\xe2\x33\x9e\x33\xc9\x8b\x47\xd3\x77\x04\xe1\xe9\xf5\xdb\x77\xb7\xd7\xe2\xf4\xf7\xf3\xd5\xd9\xea\xaf\x9b\x57\xb7\xe9\x2a\x7c\x77\x95\xa6\xf9\xe9\xab\xcb\x2f\xe3\xdb\xec\x6b\x3f\x77\x14\x61\x78\x7a\x14\x06\x47\xad\x48\xfb\x5c\x1d\x55\x27\xbf\x88\x84\x90\xc4\x25\x12\x3f\x56\x69\x2f\x76\x78\xfd\x26\x1c\x1f\x9f\xb4\x7f\x1e\xa9\xc4\xae\xd2\x57\x02\xef\x1b\x8f\x8e\x9a\xba\x09\x3c\xd7\x66\xc8\x5f\x17\x11\x7c\x6c\xda\x0b\xee\xbc\x91\xb3\xae\x3b\x23\x53\xc6\x3a\x1f\x1c\x4d\xac\x45\x66\xab\x9e\xbd\xc2\x85\x30\x16\x35\x30\x90\x78\xbf\xb9\xb0\xd2\x9b\x29\x5e\x34\xb7\xb2\x2c\x23\xd6\xaa\x42\x1b\xfd\x6d\xc8\x74\x20\x5d\xe7\x5b\xeb\x05\x6e\x2e\x13\x26\x4b\x58\xf1\x9e\xa5\x24\x7f\x8b\xb6\x56\xb9\xa0\x4b\x1f\x82\xf9\xa7\xe5\x93\x74\x61\x1b\x80\x0f\x67\x14\x97\xd2\x75\xa5\x43\x22\x52\x61\x0d\x30\x8d\x0e\x17\x72\xb0\xaa\x2a\x0d\x34\x96\x2a\x06\x72\x83\xda\xf7\x5c\xbd\x98\x8c\x7a\x03\x3b\xc9\x1e\x07\x41\x17\x7f\x37\xd6\x7d\x22\x7e\x10\x75\xd5\x04\xa3\x6f\xae\xf4\x26\xfc\xbb\x53\xdf\x12\x01\xd0\x4e\x54\x33\x06\xe1\x1b\x98\x58\x95\x93\x8d\xd2\x77\x50\xf3\x1f\x69\x64\xfc\xe0\xb0\xf9\xcf\x38\x0d\xa9\x03\xb8\x83\xef\xb0\xe9\xb5\x0e\x73\x25\x5b\xed\x59\x50\x95\x5c\xad\x38\xc0\x40\x2f\xfe\x87\xd1\x3f\x16\x7b\x3f\xdf\xee\x3b\x09\xc2\xb6\x62\x07\xe1\x8d\x64\x75\x0a\x91\xb7\x0c\x4e\x76\x1a\xbc\x57\x16\xe6\x2a\x97\x4e\x3b\xcb\x9f\xc5\xe3\x63\xbc\xdd\x64\xe5\xa8\xa5\x6e\x16\xae\x6e\x6a\x3b\xdf\x09\xca\x93\xe9\x74\x93\xd1\xe9\x14\x84\x01\x49\xb0\x58\x92\xa8\x7b\xe4\xfe\xff\x40\xf0\xf1\x6e\x82\x37\x88\x37\x78\x4b\xb4\xbf\x29\x3d\x13\x9c\xa3\x7c\x51\x99\x8d\xda\xb3\xe9\x29\x3c\x96\x76\x5d\x1a\x5b\x85\xbd\xa3\xc9\x06\xda\x6c\x98\x8b\x7d\x39\xe9\xb3\xd3\x9a\x8e\x2e\xba\x55\x39\xf3\x29\x9f\xd1\x10\x46\x9a\x0d\xba\xf8\x93\xd1\x2a\x81\x34\xef\xfa\x8f\xa5\xfa\x8c\x3b\x1b\xbc\x7e\x85\xdc\x1d\xb1\x92\x56\xb3\xd8\x9a\xc1\x4b\x9e\x5e\x9b\xad\x26\x6f\x5c\x57\xed\xdf\xa1\x7b\xa0\xdf\xed\x12\x61\x6b\x02\xf7\x4b\xa4\x69\x58\x9e\x75\xe7\x80\x81\x10\xd4\xbc\x12\x64\xac\xda\x93\x7c\xf8\xa0\x39\x4d\xfc\xd2\x21\x4a\x5e\x96\xcc\xac\xa8\x56\x0e\x7f\x1f\xb2\xea\x6d\xed\x4d\xf5\x00\xf2\xe1\xba\x9d\x29\x95\x20\x93\x3d\x59\x27\x82\x49\xbd\xf4\x95\xc0\xdc\x63\xca\x9b\x68\x0e\x2b\x44\x38\x67\x79\x42\x73\x4d\x26\x45\xa5\x46\x12\xb1\x6a\xc7\x5c\xce\x7f\x8d\x36\xd7\xb2\x69\xc6\xcd\xb7\x6b\xd7\xa0\x1c\x59\xe2\x61\x18\xb7\x90\x16\x17\xa8\x7f\x84\xfb\xba\xb4\x26\x46\xe7\x06\xed\x61\xf9\xce\xcc\xf3\x84\xe6\x94\x26\x76\x17\x44\xa5\x0f\xbf\xd6\xb0\x89\xf9\x69\x30\xdd\x1f\x16\x6d\x4d\xcf\x06\x75\xc9\xd6\xe5\xfd\xb4\x42\xd3\x78\x7d\x14\xd5\xcb\xa7\xc0\xaa\xa1\x89\x34\x4f\x69\xdb\xa1\x2d\xf8\xdf\x00\x00\x00\xff\xff\x7b\x0f\xa7\x77\x0e\x0c\x00\x00")

func companiesRamlBytes() ([]byte, error) {
	return bindataRead(
		_companiesRaml,
		"companies.raml",
	)
}

func companiesRaml() (*asset, error) {
	bytes, err := companiesRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "companies.raml", size: 3086, mode: os.FileMode(420), modTime: time.Unix(1458554786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _contractsRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x5d\x6f\xeb\x44\x10\x7d\xf7\xaf\x18\x2e\x42\x80\x54\x12\x27\xea\xbd\xba\xf2\x0b\x2a\xa1\x85\x88\x16\x50\x3f\x1e\x50\x55\x55\x9b\xf5\x24\x5e\xea\xec\x9a\xfd\x68\x63\x4a\xff\x3b\xb3\x6b\x7b\x6d\x27\x94\x0a\x90\xc8\x43\x55\x8f\x77\xe6\x9c\x39\x73\x76\xfc\xe9\x67\x97\x27\x17\xe7\x30\x9b\xa4\x89\x15\xb6\xc4\x0c\x96\xd6\xfc\xa2\xdc\x4f\xb2\x14\x12\x93\x47\xd4\x46\x28\x99\x41\x3a\x99\x25\x2b\x66\xf0\x46\x8b\x0c\xa6\x89\x41\xee\xb4\xb0\xf5\x15\x2f\x70\x8b\x26\x4b\x00\xbe\x02\xc5\x9c\x2d\xee\xe7\xf7\xa9\x7f\x6c\x7e\x9f\x08\xc9\x4b\x97\x23\xec\x25\x4c\xe3\xd9\x89\x66\xdb\x32\x49\x6c\x5d\x35\x65\xae\xc4\x46\x32\xeb\x34\x36\x45\x2a\xad\x2a\xd4\x56\x34\x2f\xfd\xcf\xd0\x01\xcc\xbf\xa9\x33\x30\x56\x0b\xb9\x69\xc3\x39\xb3\x44\xde\xff\x6d\x03\x95\x5b\x95\x82\xff\x80\x75\xcf\xc6\x83\xec\xa5\x51\x22\x1a\xae\x45\x65\x43\x9b\xd7\x05\xb6\x89\xf0\x80\x35\x38\x83\xf9\x00\x76\xc0\xeb\xa0\x1c\x45\x17\x4a\x5a\xcd\xb8\x7d\x8d\x79\xc5\x46\x8f\xe3\x02\xb7\x77\x31\xbc\x15\x72\x69\x71\x6b\x32\x98\xf7\x31\xb6\xeb\x62\x69\x0c\x3a\x29\x7e\x73\xd8\xc6\xad\x76\x5d\xeb\x9c\x88\xa0\xb4\x7b\xad\xf2\x96\xde\xb5\x47\xfd\x7b\x4d\x08\xed\x1c\xe5\xc6\x16\x19\x1c\xa7\x7f\xad\xd4\x99\x46\x84\xb5\xc0\x32\x07\xab\x60\x85\x41\x2b\x58\x2b\x0d\x96\x6d\x0c\xac\x6a\xb0\x5e\x4b\x6a\xb9\x06\xae\x91\x59\xaa\x0f\x2c\x92\x68\x8b\x0a\xf9\xc8\x4a\xe1\xa7\x66\xbe\x7e\x5b\x97\xa8\xc1\xec\x15\x52\xa5\x30\x16\xd4\x3a\xa2\x2c\xf3\xcf\x0d\xf1\x10\x26\x46\x86\x88\x93\xb6\x08\xee\x48\xad\xfc\x7f\x23\x60\x80\xc9\x06\xd3\x5f\x2d\x70\x95\x92\x91\x48\x25\x34\x19\x64\x68\xe3\xbe\xd2\x3f\xf1\xf1\x1f\x31\x0c\xc1\xd3\x7d\x15\x8f\xef\x27\x53\x30\x53\x78\xa6\xdd\x94\xc8\x98\x47\xe1\xa1\x35\x4f\xff\xd0\x79\xe6\x08\x88\x78\x1e\xc2\x81\x28\xf3\x50\x81\xea\x64\x88\xa6\x80\xb3\x92\xbb\x92\xe2\x11\x88\x8a\xb1\x87\xe6\xf1\x57\x43\x49\x1a\x2b\xea\x93\x50\x9a\x1a\x2d\x8d\x28\xd1\x93\xb0\x85\x72\x36\x04\x45\x1e\x50\xe3\xf5\xf3\x2c\xb5\xd8\x86\x77\x12\x9f\xfc\x96\x32\x40\xae\x33\x15\xe3\xf4\xdf\x17\xb8\xe3\x58\x51\x89\x02\xa5\x3f\x53\x03\xab\x2a\x64\x9a\xe6\x1e\x52\x68\xf8\x0e\xcd\x97\xa1\x26\x4a\xae\x68\x35\xd1\x1b\x70\x76\xfd\x71\xd8\xc5\x99\x56\xdb\x66\x6e\x84\xe8\x4a\xdb\x36\xc0\xe0\xea\xfb\x93\xf9\xfb\x0f\xe4\xf3\xb2\x54\x4f\x64\x78\xf2\x39\x83\xcb\xe5\xcf\xa7\x17\xdf\xce\x3e\xa4\x47\x44\x69\x67\xc1\x2f\xca\xf7\x1f\x17\x05\xf2\x87\xd3\x06\xc3\x43\x37\x95\x42\x73\x94\x93\xee\xd2\x94\x76\x04\xae\xc5\x6e\x92\xec\xef\x18\xb2\x40\xdc\x83\xe4\xbf\x66\xdd\x36\x4b\xef\xb6\x5f\xb3\x70\x97\x4c\x3b\xcd\xc2\x56\xa9\x94\x69\x97\xcf\xc8\x0c\x0b\x7f\xfd\x3c\x79\xd2\x2b\x8a\xdc\x74\x4b\x50\x64\x3f\xd3\x2f\xa5\x79\x3a\xeb\x7d\xb6\x52\xf9\x60\x7b\x82\x97\x92\x36\x63\x98\xd9\xd4\xcf\x71\xf8\xae\x73\xe5\x62\x7c\xc1\x8f\x87\xf5\x46\xac\x6e\xa4\xef\x43\x69\xf1\x3b\xed\x58\x3a\x32\x7d\xee\x4d\xfa\xd2\xe4\x6c\xd0\xc6\xad\x3f\x50\xa0\xff\xce\xc0\x33\x18\xae\xfc\x97\x83\x74\x79\xd7\xe5\x67\xd4\x6f\xfe\x0e\xee\xe0\x05\xba\xbb\x3b\x42\xfe\x0e\xed\xe1\x26\x3a\x50\xc2\x6b\x91\x0e\x3b\xdc\x57\xe3\x2d\x3d\x5e\x51\xc4\x6b\x72\x3c\x3c\x39\xe2\xf6\xa3\xb2\x64\x2e\x27\x9b\xcf\xce\x74\xe0\x88\x98\xd1\x4f\xf9\x5f\x48\x13\xae\x3a\x17\x15\x93\x76\xac\xd0\x01\x13\x6f\xc0\x43\x99\xfe\x8b\x10\xd1\xd2\xc9\x9f\x01\x00\x00\xff\xff\x1f\x14\xe6\x48\x76\x08\x00\x00")

func contractsRamlBytes() ([]byte, error) {
	return bindataRead(
		_contractsRaml,
		"contracts.raml",
	)
}

func contractsRaml() (*asset, error) {
	bytes, err := contractsRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "contracts.raml", size: 2166, mode: os.FileMode(420), modTime: time.Unix(1458557466, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _organizationsRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x59\x5d\x73\xd4\xb8\x12\x7d\xf7\xaf\xd0\xe5\xd6\x7d\x4b\x3c\x9e\x30\x81\x9b\x79\xcb\x02\x45\xa5\x36\x09\x14\x01\x52\x0b\x45\x11\xd9\xd6\xcc\x08\x64\xc9\x58\x72\x32\x03\xcb\x7f\xdf\x96\x64\x8f\x6d\xf9\x63\x9c\x8f\xe5\x01\xbf\xa4\xc6\x96\xd4\xad\xd3\xa7\x8f\xba\x95\xff\xfe\xef\xcd\xf1\xd9\x29\x9a\xfa\x81\xa7\xa8\x62\x64\x8e\x4e\x94\xfc\x4b\xe4\xaf\x38\xa3\x9c\x78\xd7\x24\x93\x54\xf0\x39\x0a\xfc\xa9\x17\x62\x49\xde\x65\x74\x8e\x26\x9e\x24\x51\x9e\x51\xb5\xb9\x88\x56\x24\x21\x72\xee\x21\xb4\x8f\x04\xce\xd5\xea\xf3\xc1\xe7\x40\xff\xb4\xcf\x7f\x28\x8f\x58\x1e\x13\xe4\x4c\x98\x6c\xc7\xfa\x19\x4e\x98\xe7\xa9\x4d\x6a\x97\x79\x95\x2d\x31\xa7\xdf\xb1\xd2\x66\xcd\x3a\x69\x26\x52\x92\x29\x6a\xbf\xeb\x67\xc9\x44\x88\x19\x8d\x2b\x3b\x7a\xfa\x1c\x49\x95\x51\xbe\xdc\xbe\x4c\x28\x3f\x25\x7c\xa9\x56\x73\xf4\xb8\x7a\x89\xd7\xe5\xcb\xe9\x61\x50\xbc\x4e\xf3\x90\xd1\xe8\x4f\xb2\x91\xdd\x4b\x7e\xfc\x54\x9f\x7f\xa2\x48\x22\xe7\xe8\xa0\x9c\x1d\xf3\xdb\x4c\x9b\x06\xc1\xf6\x6d\x4c\x64\x94\xd1\xd4\xec\x15\x9d\x52\xa9\x90\x58\x20\x51\x43\x00\x3d\x3f\xbf\xf0\x8b\xe1\xe2\x86\x43\x34\xee\xe2\x60\x8f\xa1\x5c\xc2\x7a\xe8\x4a\xff\xe1\x18\x82\x72\x55\x5a\x4a\x48\x12\xde\xd6\xd4\xae\x5d\x59\x63\x37\x2b\x81\x70\x46\x0a\x0b\x88\x72\xa4\x56\x54\x36\xb6\x5c\x3a\x51\x30\xe7\x41\xa0\xb5\x84\x39\x89\xb5\x23\x32\x0f\x1b\xf6\xa4\x67\xe6\x90\x35\x4e\x52\xe0\xbf\x4b\x31\xb4\xcc\x08\xe1\x54\xe9\x17\x64\x80\x2e\xfb\x68\x7a\x7c\x74\x79\xb9\x7a\x42\x8f\x5f\xcc\xde\x7c\x78\x79\xfe\x14\xaf\x37\x4f\xd6\x1f\xc2\xfc\x32\x3f\xfd\xca\xbf\x5d\x9e\x66\xef\xbb\xf8\xb2\xdf\x30\xe0\x47\x22\xe9\x09\xf7\xbe\x81\x70\xea\xfc\x3e\x70\x7e\x3f\xee\x0b\xa1\xfd\x3c\xeb\x05\x77\x1f\xe1\x18\x12\xc6\x6f\x79\xe3\x95\x8b\xf5\x65\x63\xc9\x9f\x1d\xd9\xd8\x08\xc8\x3b\x49\x62\x20\x03\xe1\x08\x4b\x49\x97\x1c\x06\x22\x5c\xb2\x42\x01\x47\xb8\xc3\x89\xae\x18\x6d\x0d\xa3\x50\x84\x7a\xc4\x09\xbf\xa6\x6a\x50\x39\xec\xa4\x96\x6f\x99\x60\x35\xf7\x7b\x36\x00\xf6\x79\x9e\xcc\xd1\x47\x13\x99\xbd\xc2\xdb\x8a\x87\x51\x46\xb0\x22\xc0\x98\x18\xfe\xf4\x3a\x6c\x9d\xad\x99\xb5\x81\xf6\x9c\x35\x2e\x72\xbe\x87\x82\x27\xe8\x5c\x5c\xa3\xe9\xd1\xd1\x0c\x05\xff\x9f\xcf\x8e\xe6\x8f\x9f\xa2\x97\x67\x6f\x3d\xab\xbf\x24\xfe\x63\x03\xee\x54\xba\x8b\x3e\x79\x93\x06\xb5\xb5\xe1\x54\x48\x65\x1d\x88\xa9\x4c\x19\xde\x9c\x1b\xc8\x9e\x19\x4b\xe7\xe4\xa6\x2e\xb8\x5e\x2b\x50\x76\x18\xc4\x86\x93\x9b\x66\x48\xd0\xd4\xec\x07\xc9\x95\xc8\x59\x8c\x42\x62\xb3\x99\x14\xc4\x45\x0c\x12\xdf\x47\xef\x75\x12\x59\x29\x83\x3c\x87\x68\x2c\x44\x96\x40\xec\x21\xc6\x70\x12\x44\x5f\x11\x5d\x98\x49\xcd\xf3\x01\x61\xc6\xc4\x8d\x84\xd4\xe6\x78\x09\xbf\x39\x48\x48\x21\x15\xda\xa6\x95\x88\x50\xc4\x9b\x12\x59\x9c\xa6\x90\x91\xc6\xce\xe4\x8b\x2c\xe3\x5f\x85\xb2\xb5\xc9\x8c\xc8\x14\x00\xaa\x98\x71\x10\x4c\xab\x49\xf5\xa5\x87\x97\x1f\x30\x81\xd0\xac\xbe\x66\x93\xff\x5c\xc7\x4c\x64\xf4\x3b\x89\x61\xc4\x92\x94\x21\xaa\x0f\xfa\xbb\x98\xfb\x92\xa8\xa6\x62\xf9\xe8\xb8\x98\x6d\x91\x65\x34\xa1\x4a\x1a\x61\x35\x9e\x5a\x7c\x33\xf2\x2d\x27\x52\xe9\xd4\xaa\x40\xeb\xd8\x77\xf0\x70\xfb\x06\x55\x86\x11\x93\x1f\xa5\x7a\xfe\xb4\x13\xb6\xdb\x43\xa8\x4e\xdc\xaa\x5e\x40\x3f\x90\x8c\x84\xae\x00\x80\xce\x8f\xea\x7b\x9d\x03\xff\xe2\x47\x7b\xce\x4b\x23\x55\x8f\xd0\x27\xf4\x13\x95\xf9\xd7\x40\xce\x45\x0c\xa8\xb9\x10\x65\xd2\xb9\x08\x38\x18\xb4\x51\xd8\x85\xc3\x00\x03\x1c\x0e\x0c\xb3\xa0\x9c\x30\xeb\x9d\x70\x2e\x14\x5a\x88\x9c\xdb\xd1\x69\x7e\x77\x58\x77\x21\xf8\x2e\xd5\x2a\xd6\x0b\x62\x13\xa2\x21\x78\x7a\xa1\xf9\x3d\xe2\x60\x46\x4c\x9c\xd3\xb6\x92\xdc\x87\x8a\x8d\x63\xff\xd8\x1c\x9a\x8d\x13\xb3\xab\x84\xba\x5b\x42\xdb\x35\xab\xb3\xb1\x1d\x27\x47\x2d\x5b\xee\x9d\x59\xaf\xec\xd1\x0e\x62\x24\xf3\x28\x22\x52\x2e\x72\xc6\x36\x8d\x59\xed\x08\xef\x8e\x71\x8f\x9b\xad\x08\x8f\x89\x71\x2b\xca\xc3\x71\xd6\xd2\x56\x16\x1d\x3f\xeb\xca\xce\x88\x6a\xd4\x0f\x0f\x13\x72\xc7\x99\x37\x24\x11\xd7\xa4\x0a\xfa\x22\x13\x49\x23\xec\xb5\x89\x9d\x41\xd3\x61\x9b\xb9\x70\x76\x05\xce\x6e\x68\x20\x6e\x2d\xa8\xc7\x81\xdd\x01\xb7\x33\xf1\x2d\x94\x02\xa6\xaa\x10\x99\xad\x25\xea\xfa\x13\x0b\x22\x11\x87\x90\x90\xb5\xae\x2d\x9c\x85\x8f\xc6\x2d\x8c\x99\x3e\x51\x36\xba\x1a\x29\x91\x2c\xaa\xcb\x49\xb3\xe2\xfe\xd7\x93\xd8\x54\xab\x3a\x9e\xc6\x2f\x48\xe1\x90\x40\xbd\x5d\xd4\x4f\xba\x53\x69\x15\xc1\xe5\x32\x77\x15\xc6\x31\x99\xdd\x91\xdb\xdd\x7e\x17\xa5\x6a\x3f\x49\xba\xd3\x7b\x4c\x82\xf7\xa6\xf8\x6f\xc3\x3c\x6e\xa3\xec\x0f\xea\x4a\x97\xb2\x3c\x9c\xb6\xf4\xa8\x4b\xe1\xd9\xa0\xba\xf4\x52\xa7\x53\x61\x1c\x43\xaf\xcc\xf2\x99\x31\x37\xc8\x9e\x8e\x50\x8f\x0d\x76\x67\xb8\xfb\xb5\xdd\xa6\x7f\x24\xb8\xca\x70\xa4\xe4\x3d\x8b\x2a\xb7\x58\xad\xd6\x35\xb5\x6c\x23\x10\xb5\xca\xd8\xe9\xcf\xa0\x84\x7d\x56\x4e\xec\xd6\x0f\x5d\xe4\x6a\xa6\x6e\xd7\xd7\x0d\x35\xb4\x00\x2d\xf6\x02\xe1\xa6\x5a\x4f\xf4\x87\x14\x9b\x7e\xd8\x87\x22\x29\x36\x4a\x2f\x23\xc2\x63\xdd\x23\x84\x1b\xd3\xb8\x56\xe4\x86\xee\x21\xdb\xbc\xc6\x19\xb8\xa3\x1a\x57\x09\xdb\xeb\x83\x17\xeb\x94\x02\x40\xdd\x62\x13\x0a\xe8\x6e\x31\x1f\x56\x12\x7b\x39\xa8\x1d\x23\x76\xad\x6a\x37\x7b\xc6\x23\xb2\xc0\x39\xd3\xdd\x1f\xdb\x98\x61\xf0\x85\x5e\xd7\xf7\xac\x9b\x9e\x8c\xa8\x3c\x83\x42\xc3\x77\x8c\xe9\x0e\xc8\x38\x88\x16\x98\x49\x52\x3f\xa0\x15\xe0\xd0\xed\x37\xe5\x8a\x2c\x1d\xd5\x71\xfc\xbe\xd0\xb3\x01\xd1\x85\x24\x6a\x4f\x27\x37\xd0\x17\xb8\x94\x01\xba\x4b\x80\xd2\x47\xcf\x0b\xb7\x01\xf9\xab\xe0\x6a\xbc\x5b\x09\x5e\xdf\xd9\xa9\x33\xbc\xd6\xf6\xa1\x95\x86\x74\xd8\xe9\xd5\xe1\x6d\xdc\x2a\x5c\xa3\x89\xbe\xfe\x38\x38\x0c\x8a\x84\xa1\xdb\xeb\x96\xfb\xa6\xcc\xf8\x9c\x78\x6d\xd9\x5a\xdd\xf4\xec\x48\x0e\x56\x5c\x3f\xa6\x05\xcb\x6b\x3e\x1b\x6c\xec\xb5\x24\x1c\xbe\x5f\xc4\xd0\x65\xe4\xc0\x61\x19\xb8\x11\xbb\xef\xa9\x57\xed\xcd\xb6\xd3\x06\xeb\x71\x75\xa7\x83\x97\xd5\xf4\x16\x64\xfd\x87\xc0\x33\xcc\x23\xc2\xa0\x24\x69\xc3\xe5\x8f\xd3\xff\x9e\x13\xa0\xab\x84\xb0\xe2\x14\x19\x93\x8c\x94\xad\x14\x4e\x29\x90\x08\x32\x7a\xbb\x74\xb3\xf3\x79\x7d\x82\x8a\xef\x26\xf5\x8d\xd8\x69\xa2\x1d\xa0\x88\x51\x7d\x51\x54\x7e\xe5\x84\xc4\xf6\x22\x04\x9b\x23\xc6\xca\x47\x4a\xfd\x5f\x45\x55\x70\xf5\xc2\xf8\x72\x8a\x43\xc2\x46\xf2\x94\x99\xb1\xf0\x0a\x2b\xb3\x3f\x10\x40\xaa\x5b\x28\xcd\xd5\x42\xfb\x60\x0f\xe5\x26\x7d\x53\x5d\x94\x3b\x86\x75\x12\x49\xd8\x35\xb1\xd0\xe8\x7a\xa5\x10\xea\xf8\xd7\xf2\xb8\xe7\xaa\xbe\x59\x51\x77\xdf\x46\x6e\x41\xeb\x86\xab\x71\x1d\xa9\xb9\xe0\x0c\xbe\x5d\xbf\xdb\x75\x3f\x6c\x1f\x13\x86\xbe\xce\xb3\x75\x2f\x6c\x9f\xda\x7f\x96\x0e\x83\xf6\xd7\xea\x9f\x51\x07\x77\xa8\xc0\xef\x13\x8c\xfe\x6d\x3a\xfb\xed\xdb\x59\xf1\x58\x9e\x75\x8e\xea\x28\x82\xdd\xff\x03\x69\x0b\xa6\xf6\x2d\xca\x60\x10\xb4\x2d\x2d\x27\x3f\x8c\x03\x35\x6d\x6b\x64\xd6\x40\x6e\x8d\xe9\x79\x5b\xcc\xee\x83\x53\x3f\xe3\x20\x1d\x83\xe9\x38\x50\x87\x51\x1d\x5f\xc4\x6e\x1d\xcb\xfb\x81\xb3\x97\x7a\x4d\x5d\xea\xbb\x6d\xb0\x63\xad\x6a\x9a\x8d\x94\x15\xa4\x74\x71\xbf\x7d\x37\x3a\x04\x5e\x4f\xe6\xed\xc8\xbd\x5d\xd9\xd7\x93\x7f\xb7\xc9\xc0\x56\xbf\xa4\x4f\x63\xb7\xc7\xdc\x95\x05\xa0\x70\x05\x9a\x4e\x26\x0c\x1c\xea\x8d\x10\x3e\x37\x9f\xbb\xe8\xdf\xd1\xcd\x99\x46\xb3\x3a\x31\x77\x6f\x7b\x4c\xff\x56\xad\x57\x36\x71\xde\x3f\x01\x00\x00\xff\xff\x78\xae\x09\xeb\x45\x20\x00\x00")

func organizationsRamlBytes() ([]byte, error) {
	return bindataRead(
		_organizationsRaml,
		"organizations.raml",
	)
}

func organizationsRaml() (*asset, error) {
	bytes, err := organizationsRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "organizations.raml", size: 8261, mode: os.FileMode(420), modTime: time.Unix(1459252131, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _securityschemesOauth_2_0Raml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xb1\x8e\xd4\x40\x0c\xed\xf3\x15\x56\x1a\x2a\x92\xe3\x74\x55\xba\x43\x48\x94\x50\xb0\x15\x42\x68\x98\x31\x9b\x11\xd9\xf1\x60\x3b\x7b\x04\xf1\xf1\x78\x92\xcd\x6a\xb3\xda\x95\xa8\x48\x15\x3d\xfb\x3d\x3f\xbf\x71\x40\xf1\x1c\xb3\x46\x4a\x1d\xfc\xa9\x00\x3e\x3c\x8f\xda\x3f\x42\x14\x70\x90\x99\x94\x3c\x0d\xa0\xbd\x53\x18\x50\x05\xf0\x97\x22\x27\x37\x80\xcb\x59\x80\xf1\xe7\x88\xa2\xe0\x8c\x43\x1c\x7f\xbb\xa2\x03\x4a\xc6\x8c\x47\xa7\x68\x7a\x01\xd5\xc5\x41\x20\x26\x13\x1c\x05\xf9\x95\x29\x7b\x4f\x63\x52\x78\x89\x46\x1b\x15\xf6\xa8\x1a\xd3\xde\xc6\x60\x64\xc8\x4e\xe4\x85\x38\x34\x95\x4e\x19\xbb\xc5\x11\x3c\x36\x0f\xd5\x62\xf6\x1b\x86\xb7\x53\x67\xd2\x3d\xba\x80\x2c\xe5\x17\xe0\xf9\xd2\xc2\x02\x95\xe1\x57\xdb\x2d\xdf\x4e\x30\x14\x97\x82\x29\x98\xab\xa3\x1b\x62\x58\xc7\x14\x73\x28\x62\xe5\x1f\x98\x1a\x78\x47\x90\x48\x8b\x71\x43\xcc\x67\x8f\x3c\xdb\x3e\x6b\x19\x02\xf5\xc2\xf9\x3a\x73\x6a\xb0\x4c\x78\x02\x51\x2e\x3b\x65\xc7\xee\x80\x16\x5a\x63\x94\xb9\xf2\x71\x45\x4e\xce\x2f\xc9\xff\xdb\xf8\x26\xb5\xfa\x94\xa8\xb5\x30\x4a\xa6\x24\x78\xb2\xf8\xf4\xf0\x74\xd3\xd9\x2e\xad\x2f\x8f\xa1\x92\xe5\x15\x67\xca\xe6\x20\x76\x1c\x3b\xe8\x55\xb3\x74\x6d\x1b\x55\x26\x1a\x1b\x4a\x43\x4c\xd8\x1e\xdf\xb4\x54\x7a\xdb\xb3\x4e\xb5\x06\xf2\xa9\xec\xf1\x4f\xd4\x8b\xfc\xae\x47\xbf\x67\x97\x54\x3a\xf8\x0c\x9e\x02\xc2\x17\xab\x8b\xa7\xbc\xee\xf5\x1a\xea\x72\x92\x9d\x0b\x87\x98\xea\x0d\x14\xd3\x77\x3a\x23\xc4\x7b\x97\xd6\xdb\xda\x36\x6f\x4a\x6c\xf9\xdd\xae\xdc\x97\xf3\x94\x94\x9d\x37\x97\x1b\xb6\xa7\x43\x76\x69\xba\x9a\xb6\xa2\x37\x5b\x37\x33\x56\xf0\xae\xfc\x02\xdf\x41\xed\x6a\x35\xfa\x68\x0a\x5a\x57\x7f\x03\x00\x00\xff\xff\xbf\x97\x5e\xde\x24\x04\x00\x00")

func securityschemesOauth_2_0RamlBytes() ([]byte, error) {
	return bindataRead(
		_securityschemesOauth_2_0Raml,
		"securitySchemes/oauth_2_0.raml",
	)
}

func securityschemesOauth_2_0Raml() (*asset, error) {
	bytes, err := securityschemesOauth_2_0RamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "securitySchemes/oauth_2_0.raml", size: 1060, mode: os.FileMode(420), modTime: time.Unix(1458298636, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _userorganizationsRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xc1\x6e\xdb\x30\x0c\x86\xef\x7a\x0a\xae\xc3\x6e\x5b\x9c\x14\x3b\xf9\xd6\x5d\x86\x0e\x1b\x0a\xb4\xd8\x61\x28\x82\x42\x91\xd9\x84\x85\x2c\x09\xa2\xdc\xc1\xcb\xf2\xee\x93\xac\xa4\x96\xb3\x34\x1b\x2f\x4e\x4c\xf2\xff\xc9\x8f\x7e\xfb\xee\xf6\xea\xdb\x57\x58\xcc\xe6\x22\x50\xd0\x58\xc3\x75\xe0\x1f\xb6\xbb\x31\x9a\x0c\x8a\x67\xf4\x4c\xd6\xd4\x30\x9f\x2d\xc4\x4a\x32\x7e\xf7\x54\x43\x25\x18\x55\xe7\x29\xf4\x77\x6a\x83\x2d\x72\x2d\x00\x3e\x80\x95\x5d\xd8\x3c\x5c\x3e\xcc\xd3\xdf\x1c\x6f\xc8\x28\xdd\x35\x08\x47\x0d\xd5\x4b\xed\xcc\xcb\x56\x8b\xd0\xbb\xa4\xb2\xef\xfb\x62\xc9\xdc\xf8\xb5\x34\xf4\x4b\x86\x68\x7f\x6d\x9e\x29\x0c\xbf\x46\x65\xe7\xad\x43\x1f\x28\x9b\x8f\x61\x8b\xbe\x1a\x38\x78\x32\xeb\x49\x41\xc7\xe8\x4f\x26\xbc\x8d\xeb\x4f\xde\xa4\x48\x93\x9d\x2c\x4f\x81\xa6\x6b\x6b\xb8\xb7\x3f\x0d\xfa\xf7\xd0\x62\xbb\x42\xbf\x14\x99\x0e\x36\x9f\xfa\x98\x1b\xa9\xc0\x52\x54\xc9\x9c\xab\x6d\x7a\x18\xd9\xe2\xae\x2a\xc7\x1d\x36\x29\x7b\x47\xa0\xb0\x05\x56\x36\x31\x8a\x8a\x17\xc3\x0a\xb2\x69\xc9\x5c\xc0\x12\x76\x51\x18\x60\x8d\x21\x0f\xdf\x20\x2b\x4f\x2e\xef\xff\x19\x03\x84\x0d\x82\x26\x0e\x13\x34\x0c\x72\x20\x01\xc4\x30\x8c\x1f\xb3\xfb\x05\xc0\x3e\x0e\x42\x1e\xd9\xc5\xc2\x11\xf0\xe5\xbc\xb8\xec\xca\x36\x7d\x49\x4b\x3a\xa7\x49\x0d\xda\xd5\x13\x97\x97\x3a\x77\x2d\xc8\xe6\x07\xc0\xf7\xcb\xa3\x6c\x9e\xa8\x48\xc7\x7c\xb5\x5d\x6b\xbb\x92\x9a\x9a\x5d\x95\x6e\x16\x79\xa6\xc7\x2e\x2b\x3b\xcb\xe1\xe0\x31\x41\x71\xa5\x14\xba\xb0\x57\xe4\x0d\x39\x20\x33\x41\x22\x4e\x2d\x76\x6e\xad\xfc\x69\xbc\xfe\xb1\xee\x4b\xff\xe2\x98\x48\x2e\x4a\xa1\x63\x96\xff\xa2\xf9\x9f\xd6\x0d\x6a\x0c\x78\x12\xc6\xef\x17\xbd\x5b\x7c\x42\x75\x84\xe5\xa0\x92\x08\xc9\x29\xa4\xd9\xb9\xa5\x3e\x96\x63\xbe\xe2\x97\xe2\xae\x8b\xb7\xe0\xc7\x4e\xeb\x3e\x0a\x25\x7f\x6c\x0a\xdb\x99\xf8\x13\x00\x00\xff\xff\xc7\x4d\xbb\x01\x96\x04\x00\x00")

func userorganizationsRamlBytes() ([]byte, error) {
	return bindataRead(
		_userorganizationsRaml,
		"userorganizations.raml",
	)
}

func userorganizationsRaml() (*asset, error) {
	bytes, err := userorganizationsRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "userorganizations.raml", size: 1174, mode: os.FileMode(420), modTime: time.Unix(1458554765, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _usersRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\x7b\x73\xdb\xb8\x11\xff\x5f\x9f\x02\xe7\xb6\xd3\x76\x62\xeb\x65\xf9\x7a\xd1\x3f\xb9\xc4\x97\xa4\x4e\xed\x24\x13\x3b\xed\x74\x5c\xf7\x0c\x92\x90\x84\x9a\x22\x58\x10\xb2\xac\x64\xf2\xdd\xbb\x0b\x92\x12\x40\x82\x0f\xd9\xba\xf8\xd2\x39\xce\xb4\x17\x91\xc0\x62\x9f\xbf\x5d\x2c\xe0\xdf\xfd\xe1\xc3\xf3\xb3\x53\x32\xe8\xf6\x3b\x8a\xab\x90\x8d\xc9\x89\x4a\xfe\x29\x16\xef\xa2\x90\x47\xac\x73\xcb\x64\xc2\x45\x34\x26\xfd\xee\xa0\xe3\xd1\x84\x7d\x94\x7c\x4c\x7a\x9d\x84\xf9\x0b\xc9\xd5\xea\xdc\x9f\xb1\x39\x4b\xc6\x1d\x42\x0e\x88\xa0\x0b\x35\xfb\x79\xf8\x73\x1f\x7f\xa6\xcf\x77\x3c\xf2\xc3\x45\xc0\x48\x61\x42\x6f\x3d\xb6\x2b\xe9\x3c\xec\xa8\x55\x9c\x52\x39\xa5\x1e\x0b\xd3\xf9\xf8\x6e\x4c\x12\x25\x79\x34\xd5\x2f\xe6\xf4\xee\x94\x45\x53\x35\x1b\x93\xa3\x7e\xfa\x86\x47\xf9\x9b\x61\x07\xde\x9c\xfb\x02\xe6\xe8\x4f\x01\x4b\x7c\xc9\x63\xa5\xb9\x7f\x25\x24\xa1\x11\x61\x77\x71\x48\x23\x8a\xef\x08\xf5\xc4\x42\x91\x04\x27\x24\xf0\x2d\x48\xff\x39\xa7\x71\x0c\xcb\xed\x03\xbf\x8c\xcc\x94\x8a\x93\x71\xaf\x37\xe5\x6a\xb6\xf0\xba\xbe\x98\xf7\xb8\x4a\x56\x62\x21\xb4\x72\x7a\x3c\x60\x11\x28\x6d\x95\x30\x09\x7a\xea\x79\xa1\xf0\x7a\x73\x9a\x28\xf8\x77\x20\xfc\x4c\xc6\x61\x2f\x5d\xa3\x3b\x0f\x34\x5f\xb1\x84\x5f\x52\xf1\x54\xdc\xf4\x59\x00\x85\x88\xce\x6d\x69\xf1\x99\x4a\x1a\x29\x16\x5c\x88\xcd\x58\x87\x5e\xd2\xc7\x12\xf8\x62\xc6\x88\x90\x53\x1a\xf1\x4f\xa9\xb8\x6a\x46\x15\xe1\x49\x4e\x91\x48\x46\x03\x42\x7d\x9f\x25\x09\x51\x82\x24\x62\x0e\x13\x26\x30\x8c\x69\x6e\xfe\x98\x10\x1e\x4d\x84\x9c\xeb\xd9\xeb\x55\x68\x10\x48\x98\xf1\x6c\x5c\xb5\xee\x59\xaa\xbf\x9c\x54\x88\xd6\x4c\xf2\x5f\xf9\xda\x22\x62\x7a\x51\x63\x84\x2a\xf2\x2b\xd9\x7f\x17\x0c\x54\x19\x74\x8d\xa5\x5c\xba\xc3\x67\xef\xf2\x6a\xcf\x7e\x53\xa1\xa5\x78\xe1\x85\xdc\xff\x1b\x5b\x81\x08\xd9\xb7\xcb\xab\xf5\x57\xb0\x3e\x0f\xbf\x5d\xd9\x66\xb0\xf6\x37\xcb\xbd\x47\xa3\x9b\x6f\x96\xf9\x09\xf5\x99\x27\x04\x08\x40\xe0\x3f\x21\xa3\x9b\x88\x49\xb1\xc3\xf1\xc1\x64\x2b\xa9\x0a\x6f\xc3\x39\x0b\x1a\x39\xe5\x89\x42\x05\x58\x64\xb4\xbc\x99\x88\x5a\x5d\xa6\xe8\x3e\x00\x20\xa2\x1a\xe0\x97\x24\x73\x36\xf7\x00\xda\x67\x3c\x06\x22\x5d\x84\xce\x17\x60\x80\xe7\xbe\x2f\x16\x91\x1a\x57\x02\x15\x07\x33\xb5\x80\x22\x03\xa8\x0f\xfb\x1b\x13\x73\x7f\xbb\xb9\x83\xcd\x5c\xcd\x97\x5c\x6d\x37\x7f\xd4\x47\xc1\xde\x63\x5c\x44\x0b\x94\x37\x13\x8c\x2a\x80\x68\xd0\xe1\xbf\xff\xf5\xe4\xd9\x65\xff\xe0\xe9\xd5\x93\xdf\xe3\xc0\xe7\x29\xb8\x55\x4b\xef\x03\xd6\xdb\xfe\x50\xc1\x43\x95\x06\x60\x20\x63\x6a\x7b\x12\x47\x1b\x12\x91\xdc\x7e\xba\xa1\x47\x01\x1e\x22\x9f\x3d\x48\x08\x87\x29\xda\xd1\x18\x6d\x68\xc4\x22\x51\x34\xf4\x45\xc0\xb6\x27\x33\x44\x32\x1f\x93\xb5\x35\xeb\xf2\xe9\x43\xe4\xd4\x5f\xcc\xfa\x62\xcd\xfc\x3a\x89\xb8\x72\xc8\x5d\xcc\x25\xc0\x30\x09\xa8\x62\x35\x99\xe5\x17\x80\xfb\xed\x49\x1a\xa1\x51\x9b\xe2\xb7\xa7\x9c\xc5\x52\x35\xbc\x6f\x4f\xd2\x00\x28\x07\xf0\x3e\xc4\x1b\x73\x8c\xbe\x4f\x5c\xea\x4f\xec\x8e\xce\xe3\x90\xb9\x0a\x3a\x4f\x78\x2e\xc7\xb1\x28\x1e\x90\xc1\xeb\xbf\x9f\xff\xe5\x68\x34\x52\xb7\xff\x38\x1b\x5e\x9c\x0d\x0e\x6f\xdf\xfe\xf5\x87\xc4\x13\x74\xfe\xe6\xd3\xe9\xf7\xf3\x37\x87\xdf\x17\x1c\x0c\xc3\x60\xf0\xc3\xc1\xa0\x7f\x30\xec\xdb\x5e\x66\x93\x5e\x0a\x79\xa3\x99\xf8\x11\xaa\xd7\x98\x46\x2b\xac\x62\xad\x11\x33\x91\xb1\xf9\x63\x26\x45\x69\xc4\x5e\x40\x23\x9f\x11\xa8\xe3\xbd\xbd\x74\x24\x56\xbf\xfa\x25\xbe\xeb\xe6\xf3\x20\xdb\xd8\xde\x69\xb2\xe2\xc1\x22\x4f\x0e\x87\x83\xe1\xe1\x28\xfb\x9f\xf1\x91\x4d\xe1\x23\x08\xe4\xf8\x48\x4d\x50\xb6\x78\x2e\x38\x49\x06\xcf\xe4\x3c\x46\x8b\x4d\x38\x0b\x83\xd2\x88\x0c\x7f\xa1\x9c\xe0\x51\xf6\xa3\x34\x06\x00\x96\x8c\x8e\x5e\x94\xa9\x67\xb0\x47\x2e\xc4\x5c\x48\x29\x96\xb0\x93\x28\xaf\x60\x00\x1b\xb9\x38\x78\x3a\x3a\xea\x97\xcd\x51\xc1\xf8\x31\x8d\x39\xcc\x25\xc7\xf0\xab\x92\xf3\x7c\x50\x0d\xf3\x83\x9d\xb0\x3e\xe8\xf7\xfb\x56\xf4\xda\x6c\xdf\x78\x7e\x59\x0e\x5d\x1d\x90\x8b\x53\xb4\xe1\xd1\xe6\xff\x4a\xe3\xb0\x10\x20\xcf\x5f\x1c\xff\xf4\xf2\x55\x4b\x5e\x3b\x69\x48\xdd\x72\xb6\xdc\x09\xea\x6f\xbb\x0f\xf8\x0d\xad\xff\x3f\xd0\x3a\x7f\x6b\x17\xdf\x1b\x0f\x80\x01\x6f\x04\x8f\xde\x19\x9f\x4f\xa2\x5b\x88\x38\x5d\x74\x57\x7a\x9e\x49\xae\xc4\x05\xba\x65\xe9\xa5\x14\x61\xdb\xea\x04\x4d\x3e\x26\x97\x62\x19\x31\xb9\x9f\x15\xee\x9a\xd3\x63\x01\x91\x42\x7d\x75\xce\xa7\x11\x4c\xfa\x90\xd6\xfd\x35\xe5\x6b\x36\xfe\x24\x28\xbb\x27\x95\x08\x41\xd9\xdb\xb4\xbb\xc3\x82\x17\xf0\xea\x72\xd3\xd5\x21\x57\x9d\x1e\x0a\xa3\x49\x22\x5a\x38\x1a\x2d\xc7\x92\x41\xdd\x43\x28\x89\xd8\x52\x4b\xae\x87\x78\x22\x30\xea\x45\xd8\xcb\x41\xf0\x69\x65\xf5\xfe\x93\x88\xc8\xa5\x07\xac\xef\x50\xc6\xde\xe7\x3c\xaa\xbf\xa4\xc3\xa6\x9b\xfa\xd9\xe4\x72\xd3\x7a\x22\x9f\xb3\xa6\x0e\xf2\xbe\xa7\x95\x4f\x03\xa8\xe3\xf6\xc8\x15\xf9\x42\xf2\x20\x07\x77\x8f\xc1\xf4\x45\x7f\x1e\xf6\xfb\x65\x58\xb3\xb9\x37\x9f\x7a\x49\x2a\xa4\xd2\xfa\x5e\xec\x44\x0a\x4b\xf5\x1f\xe3\x40\xab\x1e\xdb\x5c\x3c\xdd\xff\xe1\xbc\x6e\xfa\x01\x7f\x5e\x5f\xe7\xca\xbc\xbe\xc6\x5e\x50\x24\x14\xa1\x61\x28\x96\xb0\x1d\xd6\x1d\x23\xbd\x6b\x0e\x61\x2b\x1d\x02\x81\x44\xef\x18\x71\x8c\xc7\xc8\x42\x13\x0f\x60\x83\x09\xf3\x96\x74\xb5\xaf\xb7\x9a\x11\x36\x88\x42\xc3\xd9\xf4\x94\x3f\x85\xfc\x86\x65\x61\xaa\x3b\x6b\x79\xdc\x63\xbf\x09\x01\xe1\xcf\xdd\x6a\x2b\x14\x2c\x50\xd6\x7d\x93\xce\x0b\x9a\xc6\x67\xd4\x3f\xac\xec\x2c\xac\x95\x93\xab\x06\x15\xf3\x4a\x48\x8f\x07\x01\x8b\xbe\xd3\xd3\x7a\x3a\x21\x64\x50\xbb\x61\xb6\x8d\xe5\x2c\x64\x70\x58\x70\x13\x46\x19\x6f\x3c\x89\x43\xba\x7a\xab\x6b\xc7\x0f\x6c\xca\xb1\x9b\xf8\x96\x2d\x5f\x22\x07\x45\x98\x2e\x88\x92\x0f\xcf\xa2\x4f\x33\x9d\x27\x88\x07\xa9\xb4\x0a\xfd\xf1\xd1\x2e\x33\x4e\xdb\xb6\xa5\x8f\xa6\xde\x1c\xd8\x56\x11\x84\xe8\x04\x83\xf2\x4a\x4e\x59\xc1\x25\xeb\xa5\xad\x92\xb9\x9d\xe4\x6d\x34\xd0\x4e\x15\xeb\xa7\x41\x27\xf8\x8c\xfa\x4f\x5d\xcb\xd8\xfd\x1f\x5c\x05\x7d\x95\x86\xd8\xca\x5d\xa1\xff\xae\x9b\x5a\xbd\xcf\x9a\x97\x2f\x63\xa3\xe0\x29\xb4\x1d\x2c\x47\x4b\xa1\xa3\xc2\xc7\x9c\x30\x93\x6c\xba\x6c\x18\xe2\x3d\x21\xc9\x2d\x0d\x17\xba\x87\x8c\x08\x54\x69\x0d\x97\x25\x9a\xad\x50\xaf\xff\x06\xc5\x37\x6a\x7c\x3b\x3f\x74\xea\xa3\x58\x4e\xb7\x31\x21\x22\x2e\xba\x6e\xe8\x32\x65\x67\x33\x25\x64\x8a\xd5\x18\xef\x27\x3d\xa0\x9d\xf1\x3e\xb0\xb9\xb8\xd5\xe7\x1d\x35\x26\xaa\x54\x07\x2a\x64\xd4\x28\xd6\x4b\x93\x30\x10\xc3\x15\xad\x76\xeb\x76\x1a\x0a\x69\xa2\x6c\x66\xcd\xbc\xb4\x26\x5f\x28\x16\x7a\x78\x7a\x71\xff\x8a\x01\x67\x17\x52\xad\xa9\xf2\xd7\x4c\x61\x82\x39\x29\x9d\x90\x3c\x4e\x59\x91\x6f\x8d\x0a\x2a\x80\x80\xe4\xe8\x9b\x25\x35\x40\x9d\x28\x57\xef\xa9\x84\x51\x2a\x2b\xe7\x0c\x92\xe2\x86\x39\x56\xb4\xca\xd3\xc2\x42\x85\xcc\x78\xff\x8a\xc6\xe0\xf1\x6b\x6b\xb2\x15\xc2\x3b\xf7\x3b\x2e\x3d\x99\x81\x68\xa6\xf8\xaa\xf4\x6e\x07\x6e\x5d\x56\xb7\x03\x76\x9b\xc2\xfa\xde\x59\x7c\x0d\x9d\x36\x97\xce\xe2\x6d\x50\x59\x68\x95\x32\xf6\x2e\x2a\x93\x07\x66\x86\x0a\xc9\xca\xe0\xd4\x36\xf5\x16\x13\xef\xd4\xec\xf6\x7f\x5d\x97\x76\xed\xec\x0b\x55\x80\xa3\x06\x68\x28\x31\xb3\x3d\x46\x7d\xee\xcf\x77\x1f\x99\x76\xbb\x8f\x53\x7b\xc6\xc6\xb1\x4f\xc9\xbe\x35\xc6\x68\xaa\x3c\x5d\xf9\xde\x99\xcb\xb6\xce\xf5\xe5\x4c\xef\xc8\xf3\x8d\x7b\x80\x75\x82\x2f\xc7\x57\x4d\x9d\xe3\x48\xeb\x16\xdd\xe7\xc5\x74\x5e\x48\x01\x86\xb6\x7f\xe1\x2c\xf0\xe0\x0d\x62\x13\x66\x54\x63\xbc\xbb\x0d\xd7\x06\xdf\xcb\xad\xbb\x3a\x8c\x8f\x4b\xa3\xdb\xe3\x7c\x95\x6c\x95\xb1\x62\xc5\x49\x99\x4f\xa7\xcf\x94\xa2\xa4\x1e\xe9\xf5\x12\xa4\xd0\xb9\x2c\x8b\xd5\x2c\x5c\x93\x90\xcd\xd2\xb6\x15\x1b\x1f\x47\x54\x7f\x83\x79\xa0\xba\x7b\x6c\x65\x03\x47\x2e\x70\x69\xe5\xfe\xd9\xc0\x50\xf8\x26\x23\x14\xc5\xbb\x6f\x05\x53\x63\xef\x46\x43\xb7\xf3\xf0\xc6\x2c\xd0\xe4\x2d\xf7\xc9\x00\x0e\xfc\x6f\x34\xca\x3a\x03\x38\x60\xa4\xc6\xf7\x4a\x09\xc0\x22\xfa\xde\x88\xe0\xca\x1c\x80\xa7\x06\x0f\x06\x7f\x0b\x4d\x1d\x9d\x65\x54\x21\x2e\x94\xf7\x12\x77\x5a\x08\xbb\xa1\xbf\xea\x40\xa3\xb9\x00\xfe\xfa\xc9\xa9\xc8\xe5\xa3\x02\xcf\x6e\xf7\x54\xb6\x68\x25\xc7\xb3\x21\x77\x27\xd5\xc7\x63\x41\x75\xd1\x88\x36\x50\x3b\x10\x18\x30\xd7\xcf\x0e\x5e\x0c\xc4\x45\xb5\x64\x51\x52\x8d\xb8\x6d\xb8\x73\x73\x55\x02\x2b\x93\xb1\x14\xac\x00\x84\xaa\xad\x16\x09\xc5\x27\xd9\xc2\xbb\xac\x19\x0b\x9c\xbc\x66\x2a\xcd\x50\xd9\x85\x39\x6b\x59\x7d\x8c\x91\x00\x9f\x92\x91\x98\x45\x01\xaa\x8d\xaf\x0f\xfc\x12\x54\x2c\xa8\x47\x0a\xc8\x68\xc9\xaf\x3c\x8c\x88\xc9\xf8\xb8\xe6\x18\xd3\xba\x53\xe8\xe4\x2b\x95\xf7\x01\x34\xf2\x93\xc6\xec\x48\x12\x48\xb9\xcf\x2a\xd3\x13\x57\xd3\x29\xf2\x99\xbb\x74\x08\xa7\x3b\xac\x17\x22\xcb\x19\x94\xaa\xeb\x8b\xcf\x98\x99\x07\xf9\xcd\x52\x3c\x16\x05\xb5\x77\xc9\x3b\x19\xc0\x27\x24\x94\x39\x89\xb7\xd2\x17\xbc\xf2\xb8\xaa\xec\xa8\x65\xd7\xdf\x5f\xea\x4b\x3b\x41\xa1\xd3\xa6\xc3\xaa\x78\x2f\xb4\xc4\xf1\x49\x76\x83\x1e\x19\x4a\x2f\xff\x04\x1b\xee\xf7\x35\x27\x6c\x42\x17\x21\x78\x77\x14\xae\xf4\x30\xf8\xc2\x6f\x4d\x19\xd1\xbf\x25\x53\x0b\x19\x15\x5b\xb1\x78\x5b\x54\xb3\x46\x26\x60\xf3\xcd\x8d\xb5\x44\x81\xec\x2e\x7e\x79\xa4\xd8\xb4\x50\xc7\x5b\xfc\x9e\xe3\x4c\xd0\xe0\x24\x61\x6a\x1f\x75\x3a\x59\x84\x64\x02\x91\x14\xd3\x29\xa8\xae\x0b\xd8\x90\xb2\x0b\x9a\xbe\xee\x5f\xb7\x63\x67\x4e\xef\xee\xc5\xcc\x19\xbd\xc3\x75\x19\x49\xf8\x27\xd6\xc8\xcd\x51\x5b\x76\x32\x96\xf8\x1c\x8f\xe6\x87\xe9\x35\x30\xd3\x8d\x33\xf7\xfc\x6a\xa0\x86\x64\x85\xcc\x6f\xfa\xa6\x84\x1f\x39\x89\xe9\x3f\xc5\xd0\x38\x51\x56\x4c\xef\xf3\xfa\x0f\x1b\x76\x9b\xaf\x4b\x4a\xa2\x24\x89\x99\x8f\x80\x6f\xeb\xe8\xd7\xa0\x9c\xe6\x2c\x9a\xd6\xf2\x20\x84\x1e\xbf\x6f\xdf\x76\x37\xef\x76\x2f\x79\x18\x42\x66\x23\xa1\x88\x20\x1c\xc8\x8c\xe2\xac\xec\x8f\x3b\x9c\x7f\xd1\xd1\x6d\x57\x58\x64\x2b\x77\xfe\x17\x00\x00\xff\xff\xd9\xe3\x85\x4c\x26\x34\x00\x00")

func usersRamlBytes() ([]byte, error) {
	return bindataRead(
		_usersRaml,
		"users.raml",
	)
}

func usersRaml() (*asset, error) {
	bytes, err := usersRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "users.raml", size: 13350, mode: os.FileMode(420), modTime: time.Unix(1458924436, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"companies.raml": companiesRaml,
	"contracts.raml": contractsRaml,
	"organizations.raml": organizationsRaml,
	"securitySchemes/oauth_2_0.raml": securityschemesOauth_2_0Raml,
	"userorganizations.raml": userorganizationsRaml,
	"users.raml": usersRaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"companies.raml": &bintree{companiesRaml, map[string]*bintree{}},
	"contracts.raml": &bintree{contractsRaml, map[string]*bintree{}},
	"organizations.raml": &bintree{organizationsRaml, map[string]*bintree{}},
	"securitySchemes": &bintree{nil, map[string]*bintree{
		"oauth_2_0.raml": &bintree{securityschemesOauth_2_0Raml, map[string]*bintree{}},
	}},
	"userorganizations.raml": &bintree{userorganizationsRaml, map[string]*bintree{}},
	"users.raml": &bintree{usersRaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

