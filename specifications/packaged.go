// Code generated by go-bindata.
// sources:
// specifications/api/companies.raml
// specifications/api/contracts.raml
// specifications/api/organizations.raml
// specifications/api/securitySchemes/oauth_2_0.raml
// specifications/api/userorganizations.raml
// specifications/api/users.raml
// DO NOT EDIT!

package specifications

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _companiesRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x4b\x73\xdb\x36\x10\xbe\xf3\x57\x6c\xdc\xe9\xcd\xa6\x48\xd9\xc9\x78\x78\xaa\xe3\xa6\x89\x5a\x3b\xe9\xd8\xf5\xc1\x93\xf1\x44\x10\xb1\x92\xd0\x90\x00\x03\x80\xb2\x98\x34\xff\xbd\x4b\x82\x12\x1f\xa6\x62\xd9\x3d\x94\x33\x3a\x08\xfb\xc0\xb7\xdf\x3e\xb0\x3f\xfd\x7c\x75\x76\x79\x01\xa1\x1f\x78\x56\xd8\x04\x23\x98\x58\x73\xab\xf2\x0f\x32\x11\x12\xbd\x15\x6a\x23\x94\x8c\x20\xf0\x43\x6f\xc6\x0c\xde\x68\x11\xc1\xc8\x33\x18\xe7\x5a\xd8\xe2\x3a\x5e\x62\x8a\x26\xf2\x00\x8e\x40\xb1\xdc\x2e\x3f\x8d\x3f\x05\xe5\x5f\xf7\xbd\x10\x32\x4e\x72\x8e\xd0\x33\x18\x6d\x75\x7d\xcd\xd2\xc4\xb3\x45\xe6\xbc\x9c\xab\x34\x63\xb2\x70\x1e\x32\xad\x32\xd4\x56\x38\x91\xfb\x16\x89\x9a\xb1\x44\xf0\xe6\xa4\xfc\x4a\xfb\x08\x8c\xd5\x42\x2e\x3a\x82\x54\xc8\x0b\x94\x0b\xbb\x8c\xe0\xb8\x2b\x60\xeb\x8d\x20\x7c\x19\x6c\x45\x59\x3e\x4b\x44\xfc\x07\x16\x66\xf7\x05\x1f\xef\xfa\x9e\x26\x16\x53\x13\xc1\xb8\xf1\x83\xeb\x4c\x68\x1c\xf2\xc1\x99\xc5\xce\xb1\xc6\x2f\x39\xe9\xf2\x08\xe6\x2c\x31\x8d\x4c\xe9\x05\x93\xe2\x2b\xb3\x94\x80\xe7\xa0\x09\x83\x60\xaf\x7b\x84\x9c\xab\xff\x16\xec\x8f\xbc\x5b\xb6\x96\x7a\xcf\x64\x0d\xf9\xc0\x35\x4b\xb3\x04\x07\x0a\x00\x26\x17\xe2\x33\x9e\x33\xc9\x8b\x47\xd3\x77\x04\xe1\xe9\xf5\xdb\x77\xb7\xd7\xe2\xf4\xf7\xf3\xd5\xd9\xea\xaf\x9b\x57\xb7\xe9\x2a\x7c\x77\x95\xa6\xf9\xe9\xab\xcb\x2f\xe3\xdb\xec\x6b\x3f\x77\x14\x61\x78\x7a\x14\x06\x47\xad\x48\xfb\x5c\x1d\x55\x27\xbf\x88\x84\x90\xc4\x25\x12\x3f\x56\x69\x2f\x76\x78\xfd\x26\x1c\x1f\x9f\xb4\x7f\x1e\xa9\xc4\xae\xd2\x57\x02\xef\x1b\x8f\x8e\x9a\xba\x09\x3c\xd7\x66\xc8\x5f\x17\x11\x7c\x6c\xda\x0b\xee\xbc\x91\xb3\xae\x3b\x23\x53\xc6\x3a\x1f\x1c\x4d\xac\x45\x66\xab\x9e\xbd\xc2\x85\x30\x16\x35\x30\x90\x78\xbf\xb9\xb0\xd2\x9b\x29\x5e\x34\xb7\xb2\x2c\x23\xd6\xaa\x42\x1b\xfd\x6d\xc8\x74\x20\x5d\xe7\x5b\xeb\x05\x6e\x2e\x13\x26\x4b\x58\xf1\x9e\xa5\x24\x7f\x8b\xb6\x56\xb9\xa0\x4b\x1f\x82\xf9\xa7\xe5\x93\x74\x61\x1b\x80\x0f\x67\x14\x97\xd2\x75\xa5\x43\x22\x52\x61\x0d\x30\x8d\x0e\x17\x72\xb0\xaa\x2a\x0d\x34\x96\x2a\x06\x72\x83\xda\xf7\x5c\xbd\x98\x8c\x7a\x03\x3b\xc9\x1e\x07\x41\x17\x7f\x37\xd6\x7d\x22\x7e\x10\x75\xd5\x04\xa3\x6f\xae\xf4\x26\xfc\xbb\x53\xdf\x12\x01\xd0\x4e\x54\x33\x06\xe1\x1b\x98\x58\x95\x93\x8d\xd2\x77\x50\xf3\x1f\x69\x64\xfc\xe0\xb0\xf9\xcf\x38\x0d\xa9\x03\xb8\x83\xef\xb0\xe9\xb5\x0e\x73\x25\x5b\xed\x59\x50\x95\x5c\xad\x38\xc0\x40\x2f\xfe\x87\xd1\x3f\x16\x7b\x3f\xdf\xee\x3b\x09\xc2\xb6\x62\x07\xe1\x8d\x64\x75\x0a\x91\xb7\x0c\x4e\x76\x1a\xbc\x57\x16\xe6\x2a\x97\x4e\x3b\xcb\x9f\xc5\xe3\x63\xbc\xdd\x64\xe5\xa8\xa5\x6e\x16\xae\x6e\x6a\x3b\xdf\x09\xca\x93\xe9\x74\x93\xd1\xe9\x14\x84\x01\x49\xb0\x58\x92\xa8\x7b\xe4\xfe\xff\x40\xf0\xf1\x6e\x82\x37\x88\x37\x78\x4b\xb4\xbf\x29\x3d\x13\x9c\xa3\x7c\x51\x99\x8d\xda\xb3\xe9\x29\x3c\x96\x76\x5d\x1a\x5b\x85\xbd\xa3\xc9\x06\xda\x6c\x98\x8b\x7d\x39\xe9\xb3\xd3\x9a\x8e\x2e\xba\x55\x39\xf3\x29\x9f\xd1\x10\x46\x9a\x0d\xba\xf8\x93\xd1\x2a\x81\x34\xef\xfa\x8f\xa5\xfa\x8c\x3b\x1b\xbc\x7e\x85\xdc\x1d\xb1\x92\x56\xb3\xd8\x9a\xc1\x4b\x9e\x5e\x9b\xad\x26\x6f\x5c\x57\xed\xdf\xa1\x7b\xa0\xdf\xed\x12\x61\x6b\x02\xf7\x4b\xa4\x69\x58\x9e\x75\xe7\x80\x81\x10\xd4\xbc\x12\x64\xac\xda\x93\x7c\xf8\xa0\x39\x4d\xfc\xd2\x21\x4a\x5e\x96\xcc\xac\xa8\x56\x0e\x7f\x1f\xb2\xea\x6d\xed\x4d\xf5\x00\xf2\xe1\xba\x9d\x29\x95\x20\x93\x3d\x59\x27\x82\x49\xbd\xf4\x95\xc0\xdc\x63\xca\x9b\x68\x0e\x2b\x44\x38\x67\x79\x42\x73\x4d\x26\x45\xa5\x46\x12\xb1\x6a\xc7\x5c\xce\x7f\x8d\x36\xd7\xb2\x69\xc6\xcd\xb7\x6b\xd7\xa0\x1c\x59\xe2\x61\x18\xb7\x90\x16\x17\xa8\x7f\x84\xfb\xba\xb4\x26\x46\xe7\x06\xed\x61\xf9\xce\xcc\xf3\x84\xe6\x94\x26\x76\x17\x44\xa5\x0f\xbf\xd6\xb0\x89\xf9\x69\x30\xdd\x1f\x16\x6d\x4d\xcf\x06\x75\xc9\xd6\xe5\xfd\xb4\x42\xd3\x78\x7d\x14\xd5\xcb\xa7\xc0\xaa\xa1\x89\x34\x4f\x69\xdb\xa1\x2d\xf8\xdf\x00\x00\x00\xff\xff\x7b\x0f\xa7\x77\x0e\x0c\x00\x00")

func companiesRamlBytes() ([]byte, error) {
	return bindataRead(
		_companiesRaml,
		"companies.raml",
	)
}

func companiesRaml() (*asset, error) {
	bytes, err := companiesRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "companies.raml", size: 3086, mode: os.FileMode(436), modTime: time.Unix(1460547626, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _contractsRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x5d\x6f\xeb\x44\x10\x7d\xf7\xaf\x18\x2e\x42\x80\x54\x12\x27\xea\xbd\xba\xf2\x0b\x2a\xa1\x85\x88\x16\x50\x3f\x1e\x50\x55\x55\x9b\xf5\x24\x5e\xea\xec\x9a\xfd\x68\x63\x4a\xff\x3b\xb3\x6b\x7b\x6d\x27\x94\x0a\x90\xc8\x43\x55\x8f\x77\xe6\x9c\x39\x73\x76\xfc\xe9\x67\x97\x27\x17\xe7\x30\x9b\xa4\x89\x15\xb6\xc4\x0c\x96\xd6\xfc\xa2\xdc\x4f\xb2\x14\x12\x93\x47\xd4\x46\x28\x99\x41\x3a\x99\x25\x2b\x66\xf0\x46\x8b\x0c\xa6\x89\x41\xee\xb4\xb0\xf5\x15\x2f\x70\x8b\x26\x4b\x00\xbe\x02\xc5\x9c\x2d\xee\xe7\xf7\xa9\x7f\x6c\x7e\x9f\x08\xc9\x4b\x97\x23\xec\x25\x4c\xe3\xd9\x89\x66\xdb\x32\x49\x6c\x5d\x35\x65\xae\xc4\x46\x32\xeb\x34\x36\x45\x2a\xad\x2a\xd4\x56\x34\x2f\xfd\xcf\xd0\x01\xcc\xbf\xa9\x33\x30\x56\x0b\xb9\x69\xc3\x39\xb3\x44\xde\xff\x6d\x03\x95\x5b\x95\x82\xff\x80\x75\xcf\xc6\x83\xec\xa5\x51\x22\x1a\xae\x45\x65\x43\x9b\xd7\x05\xb6\x89\xf0\x80\x35\x38\x83\xf9\x00\x76\xc0\xeb\xa0\x1c\x45\x17\x4a\x5a\xcd\xb8\x7d\x8d\x79\xc5\x46\x8f\xe3\x02\xb7\x77\x31\xbc\x15\x72\x69\x71\x6b\x32\x98\xf7\x31\xb6\xeb\x62\x69\x0c\x3a\x29\x7e\x73\xd8\xc6\xad\x76\x5d\xeb\x9c\x88\xa0\xb4\x7b\xad\xf2\x96\xde\xb5\x47\xfd\x7b\x4d\x08\xed\x1c\xe5\xc6\x16\x19\x1c\xa7\x7f\xad\xd4\x99\x46\x84\xb5\xc0\x32\x07\xab\x60\x85\x41\x2b\x58\x2b\x0d\x96\x6d\x0c\xac\x6a\xb0\x5e\x4b\x6a\xb9\x06\xae\x91\x59\xaa\x0f\x2c\x92\x68\x8b\x0a\xf9\xc8\x4a\xe1\xa7\x66\xbe\x7e\x5b\x97\xa8\xc1\xec\x15\x52\xa5\x30\x16\xd4\x3a\xa2\x2c\xf3\xcf\x0d\xf1\x10\x26\x46\x86\x88\x93\xb6\x08\xee\x48\xad\xfc\x7f\x23\x60\x80\xc9\x06\xd3\x5f\x2d\x70\x95\x92\x91\x48\x25\x34\x19\x64\x68\xe3\xbe\xd2\x3f\xf1\xf1\x1f\x31\x0c\xc1\xd3\x7d\x15\x8f\xef\x27\x53\x30\x53\x78\xa6\xdd\x94\xc8\x98\x47\xe1\xa1\x35\x4f\xff\xd0\x79\xe6\x08\x88\x78\x1e\xc2\x81\x28\xf3\x50\x81\xea\x64\x88\xa6\x80\xb3\x92\xbb\x92\xe2\x11\x88\x8a\xb1\x87\xe6\xf1\x57\x43\x49\x1a\x2b\xea\x93\x50\x9a\x1a\x2d\x8d\x28\xd1\x93\xb0\x85\x72\x36\x04\x45\x1e\x50\xe3\xf5\xf3\x2c\xb5\xd8\x86\x77\x12\x9f\xfc\x96\x32\x40\xae\x33\x15\xe3\xf4\xdf\x17\xb8\xe3\x58\x51\x89\x02\xa5\x3f\x53\x03\xab\x2a\x64\x9a\xe6\x1e\x52\x68\xf8\x0e\xcd\x97\xa1\x26\x4a\xae\x68\x35\xd1\x1b\x70\x76\xfd\x71\xd8\xc5\x99\x56\xdb\x66\x6e\x84\xe8\x4a\xdb\x36\xc0\xe0\xea\xfb\x93\xf9\xfb\x0f\xe4\xf3\xb2\x54\x4f\x64\x78\xf2\x39\x83\xcb\xe5\xcf\xa7\x17\xdf\xce\x3e\xa4\x47\x44\x69\x67\xc1\x2f\xca\xf7\x1f\x17\x05\xf2\x87\xd3\x06\xc3\x43\x37\x95\x42\x73\x94\x93\xee\xd2\x94\x76\x04\xae\xc5\x6e\x92\xec\xef\x18\xb2\x40\xdc\x83\xe4\xbf\x66\xdd\x36\x4b\xef\xb6\x5f\xb3\x70\x97\x4c\x3b\xcd\xc2\x56\xa9\x94\x69\x97\xcf\xc8\x0c\x0b\x7f\xfd\x3c\x79\xd2\x2b\x8a\xdc\x74\x4b\x50\x64\x3f\xd3\x2f\xa5\x79\x3a\xeb\x7d\xb6\x52\xf9\x60\x7b\x82\x97\x92\x36\x63\x98\xd9\xd4\xcf\x71\xf8\xae\x73\xe5\x62\x7c\xc1\x8f\x87\xf5\x46\xac\x6e\xa4\xef\x43\x69\xf1\x3b\xed\x58\x3a\x32\x7d\xee\x4d\xfa\xd2\xe4\x6c\xd0\xc6\xad\x3f\x50\xa0\xff\xce\xc0\x33\x18\xae\xfc\x97\x83\x74\x79\xd7\xe5\x67\xd4\x6f\xfe\x0e\xee\xe0\x05\xba\xbb\x3b\x42\xfe\x0e\xed\xe1\x26\x3a\x50\xc2\x6b\x91\x0e\x3b\xdc\x57\xe3\x2d\x3d\x5e\x51\xc4\x6b\x72\x3c\x3c\x39\xe2\xf6\xa3\xb2\x64\x2e\x27\x9b\xcf\xce\x74\xe0\x88\x98\xd1\x4f\xf9\x5f\x48\x13\xae\x3a\x17\x15\x93\x76\xac\xd0\x01\x13\x6f\xc0\x43\x99\xfe\x8b\x10\xd1\xd2\xc9\x9f\x01\x00\x00\xff\xff\x1f\x14\xe6\x48\x76\x08\x00\x00")

func contractsRamlBytes() ([]byte, error) {
	return bindataRead(
		_contractsRaml,
		"contracts.raml",
	)
}

func contractsRaml() (*asset, error) {
	bytes, err := contractsRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "contracts.raml", size: 2166, mode: os.FileMode(436), modTime: time.Unix(1460547626, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _organizationsRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x59\x5d\x73\xd3\xba\x16\x7d\xcf\xaf\xd0\xed\x9d\xfb\xd6\xe6\xa3\xa4\x70\x9b\xb7\x5e\x60\x98\xce\x6d\x0b\x43\x81\xce\x81\xe9\x50\xd9\x56\x12\x81\x2d\x19\x49\x6e\x13\x3a\xfc\xf7\xb3\x25\xd9\xb1\x2d\xcb\x8e\xdb\xe6\xf0\x40\x5e\x3a\xb5\xf5\xb1\xb5\xd6\xda\x4b\x5b\xf2\xbf\xff\xf3\xfe\xe4\xfc\x0c\x4d\x86\xe3\x81\xa2\x2a\x26\x33\x74\xaa\xe4\x5f\x3c\x7b\xcb\x62\xca\xc8\xe0\x96\x08\x49\x39\x9b\xa1\xf1\x70\x32\x08\xb0\x24\x1f\x05\x9d\xa1\xd1\x40\x92\x30\x13\x54\xad\x2f\xc3\x25\x49\x88\x9c\x0d\x10\x3a\x40\x1c\x67\x6a\xf9\xf5\xf0\xeb\x58\xff\x6b\x7f\xff\xa2\x2c\x8c\xb3\x88\x20\xa7\xc3\x68\xd3\x76\x28\x70\x12\x0f\x06\x6a\x9d\xda\x61\xde\x8a\x05\x66\xf4\x27\x56\x7a\x5a\x33\x4e\x2a\x78\x4a\x84\xa2\xf6\xbd\xfe\x2d\x62\x1e\xe0\x98\x46\xe5\x3c\xba\xfb\x0c\x49\x25\x28\x5b\x6c\x1e\x26\x94\x9d\x11\xb6\x50\xcb\x19\x7a\x56\x3e\xc4\xab\xe2\xe1\xe4\x68\x9c\x3f\x4e\xb3\x20\xa6\xe1\xff\xc9\x5a\xfa\x87\xfc\x72\x5d\xed\x7f\xaa\x48\x22\x67\xe8\xb0\xe8\x1d\xb1\x87\x74\x9b\x8c\xc7\x9b\xa7\x11\x91\xa1\xa0\xa9\x59\x2b\x3a\xa3\x52\x21\x3e\x47\xbc\x82\x00\x7a\x75\x71\x39\xcc\x9b\xf3\x3b\x06\x6c\x3c\x26\xc0\x96\x89\x32\x09\xe3\xa1\x1b\xfd\x87\x61\x20\xe5\xa6\x98\x29\x21\x49\xf0\xd0\xa9\xb6\xad\xca\x4e\x76\xb7\xe4\x08\x0b\x92\xcf\x80\x28\x43\x6a\x49\x65\x6d\xc9\x45\x10\xb9\x72\x76\x02\xad\x15\xcc\x69\xa4\x03\x91\x59\x50\x9b\x4f\x0e\x4c\x1f\xb2\xc2\x49\x0a\xfa\x77\x25\x86\x16\x82\x10\x46\x95\x7e\x40\x3a\xe4\x72\x80\x26\x27\xc7\x57\x57\xcb\xe7\xf4\xe4\xf5\xf4\xfd\xe7\x37\x17\x2f\xf0\x6a\xfd\x7c\xf5\x39\xc8\xae\xb2\xb3\xef\xec\xc7\xd5\x99\xf8\xe4\xd3\xcb\x41\x6d\x82\x61\xc8\x93\x16\xba\x0f\x0c\x84\x13\xe7\xff\x43\xe7\xff\x67\x6d\x14\xda\xd7\xd3\x56\x70\x0f\x10\x8e\x20\x61\x86\x8d\x68\x9c\x9c\xfc\x00\xef\x35\xdc\x4f\xca\xcd\x70\x49\xe3\x48\x10\x60\xc6\x37\x34\x70\x3b\x28\x56\xd0\x36\x4d\x21\xda\x2d\x16\x50\x53\xc1\x47\x49\x22\x50\x20\x61\x08\x4b\x49\x17\x0c\x1a\x22\x5c\x48\x51\x81\x30\x99\x23\x44\x9f\x30\x36\x13\xa3\x80\x07\xba\xc5\x29\xbb\xa5\xaa\xd3\xae\x6c\xa7\x46\x6c\x82\xc7\x95\xf0\x5b\x16\x00\xf3\xb3\x2c\x99\xa1\x2f\x46\x0e\xfb\x79\xb4\xa5\xf8\x43\x41\xb0\x22\x20\xd3\x08\xfe\xb4\x06\x6c\x83\xad\x4c\x6b\xd5\x35\x70\xc6\xb8\xcc\xd8\x3e\x1a\x3f\x47\x17\xfc\x16\x4d\x8e\x8f\xa7\x68\xfc\xdf\xd9\xf4\x78\xf6\xec\x05\x7a\x73\xfe\x61\x60\x4d\x9f\x44\xff\x5b\x43\x38\xa5\xd9\xa3\xeb\xc1\xa8\x96\x4f\x7a\xe2\x94\x4b\x65\x03\x88\xa8\x4c\x63\xbc\xbe\x30\x90\xbd\x34\x33\x5d\x90\xbb\x2a\xed\x83\x06\x51\xb6\x19\x70\xc3\xc8\x5d\x9d\x12\x34\x31\xeb\x41\x72\xc9\xb3\x38\x42\x01\xb1\x16\x42\xf2\x6c\x41\x31\xb8\xcd\x10\x7d\xd2\x02\xb4\xfe\x09\xe6\x02\x6c\xcc\xb9\x48\x80\x7b\xe0\x18\xb6\x9f\xf0\x3b\xa2\x73\xd3\xa9\xbe\x29\x21\x1c\xc7\xfc\x4e\x82\x9f\x30\xbc\x80\xff\x19\xf8\x56\xee\x4f\x7a\x4e\xeb\x4b\x01\x8f\xd6\x05\xb2\x38\x4d\xc1\x06\xcc\x3c\xa3\x6f\xb2\xe0\xbf\xa4\xb2\xb1\x48\x41\x64\x0a\x00\x95\xca\x38\x1c\x4f\xca\x4e\xd5\xa1\xbb\x87\xef\x98\x02\xa1\x69\x75\xcc\xba\xfe\x99\xe6\x8c\x0b\xfa\x93\x44\xd0\x62\x74\x5f\xe4\xea\x2f\xdb\x61\x41\x54\xd1\xb3\x4a\x75\xb9\xad\xa3\x7b\x24\x43\xae\x37\x6a\x10\xc0\x5e\x95\x98\x99\xd5\xe5\xde\xbe\xf3\xd8\xd0\xb2\x87\xae\xd1\x2f\x54\x68\xb6\x16\xd2\x1b\xa2\xea\xfb\x1d\x65\x73\x5e\x08\xd5\x45\x4b\xe3\x35\xae\xa2\xe0\x22\xb6\x0d\xb3\x0e\xd4\x1c\xdc\xba\x91\x2b\x3a\x4c\x5b\x3b\x5c\x70\x85\xe6\x3c\x63\xb6\x75\x9a\x3d\x1e\xd8\x6d\x08\x7e\x4c\x75\xe6\xb7\x82\x58\x87\xa8\x0b\x9e\x56\x68\xfe\x20\x1e\x36\xae\xb4\x23\x22\xbc\xde\x76\x99\x05\x9e\x85\xb5\x1b\x1c\x14\x24\xbe\xfa\x67\x47\x76\xe0\x61\xcf\xf1\x1d\x3f\x83\xdb\x39\xec\x64\xb1\xc1\xe3\x36\x26\x47\x4e\xc5\x52\xe5\x6a\x37\x6c\x39\x11\x9c\x98\x1a\xa0\x56\x00\xf8\x68\x78\x1c\x11\x76\xcc\x72\xab\xef\x45\x42\x2d\xbc\x73\x1b\x95\xad\x54\x60\xef\x92\x59\x18\x12\x29\xe7\x59\x1c\xaf\x77\x46\x9d\x13\xe6\x83\x49\x2b\x3a\x4d\x3b\x3a\x95\x29\x98\xb7\x19\xdd\x17\x35\xd4\xaf\xea\x46\x15\x13\x55\x2b\x87\x76\x43\xb9\x13\xcc\x7b\x92\xf0\x5b\x52\x92\x3e\x17\x3c\xa9\xd1\x5e\xe9\xe8\x25\x4d\xd3\x36\x75\xe1\xf4\x11\x67\x17\xd4\xc1\x5b\x03\xea\x7e\x60\x7b\xe0\x76\x3a\x7e\x80\xca\xc6\x14\x49\x5c\xd8\xd2\xa8\xba\x35\x44\x9c\x48\xc4\x80\x12\xb2\xd2\xa5\x92\x33\xf0\x71\xbf\x81\x71\x0c\xfe\x15\xad\x75\x71\x55\x20\x99\x17\xcb\xa3\xfa\xa9\xe5\x1f\x4f\x62\x53\x7c\x6b\x3e\x4d\x5c\x90\xc2\x01\x81\x33\x4b\x5e\x0e\xea\xd3\x5e\xa3\xa6\x2f\x86\x79\xec\x9e\xd5\x27\xb3\x3d\xb9\xed\x8f\x3b\xaf\xbc\xdb\x45\xe2\x4f\xef\x3e\x09\xde\x9a\xe2\x7f\x8c\xf2\x98\x65\x79\xd8\xe9\x2b\x3e\x67\xd9\x9d\xb7\xb4\xb8\x4b\x1e\x59\xa7\xbb\xb4\x4a\xc7\xeb\x30\xce\x44\x6f\xcd\xf0\xc2\x4c\xd7\xa9\x1e\x0f\xd5\x7d\xc9\xf6\xd2\xdd\xed\xed\xa3\x90\x33\x25\x70\xa8\xe4\x13\xab\x2c\xf7\x18\x51\x8e\xab\xe9\xaf\xf3\x50\x39\xb5\x38\x15\x19\x1c\x2e\x5e\x16\x1d\xfd\xf6\xa1\x8f\x1f\x5a\xa8\x9b\xf1\xf5\xf5\x80\x20\x4d\xf1\x82\xde\x26\xda\x4e\xf4\x8b\x14\x9b\xd3\xfd\x10\x0a\x9f\xc8\x18\xbd\x0c\x09\x8b\xf4\x65\x42\xb0\x36\xc7\xf0\x52\xdb\x3f\x32\x22\xd6\xef\xb0\x80\x70\x54\xed\x36\x66\x73\x03\xf3\x7a\x95\x52\x00\xc8\xef\x35\x01\x87\xb3\x3a\x66\xdd\x46\x62\xef\x57\x75\x60\xc4\x8e\x55\xae\x66\xdf\x44\x44\xe6\x38\x8b\xf5\x59\x36\x5e\x9b\x66\xf0\x86\xde\x56\xd7\xac\x2f\xe4\x04\x51\x99\x80\x3a\x63\xe8\x4c\x26\xc8\x8f\xcc\x04\x88\xe6\x38\x96\xa4\xba\x3f\x2b\xc0\xc1\x1f\x37\x65\x8a\x2c\x1c\xd3\x71\xe2\xbe\xd4\xbd\x01\xd1\xb9\x24\x6a\x5f\xe7\x36\xa8\x17\xa4\x24\x00\xdd\x05\x40\x39\x44\xaf\xf2\xb0\x01\xf9\x9b\xf1\x4d\xff\xb0\x12\xbc\x7a\x74\x50\xe7\x78\xa5\xe7\x27\x48\x42\x36\x6c\x8d\xea\xe8\x21\x61\xe5\xa1\xd1\x44\x5f\xe6\x1c\x1e\x8d\xf3\x84\xa1\x9b\xcb\xa3\xa7\xa6\x4c\xff\x9c\x78\x67\xd5\x5a\xde\x5b\x6d\x49\x8e\x38\xbf\xc1\x4d\x73\x95\x57\x62\x36\xd8\xd8\x9b\x5d\xd8\x7b\xbf\xf1\xae\xfb\xdc\x8e\xbd\x72\xec\x32\xf6\xd4\x4d\xaf\x5c\x9b\xbd\x4b\x34\x58\xf7\x2b\x3b\x1d\xbc\xac\xa5\x37\x20\x6b\xdf\x03\x5e\x62\x16\x92\x18\x2a\x92\x26\x5c\xc3\x7e\xf6\xdf\xb2\x01\xf8\x2a\x08\x6b\x4e\xa1\x99\x32\x26\x85\x0b\xe3\x94\x82\x88\x20\xa3\x37\x43\xd7\x0f\x3e\xef\x4e\x51\xfe\xde\xa4\xbe\x31\x3b\x2d\xb4\x43\x14\xc6\x54\x5f\x7b\x15\x6f\x19\x21\x91\xbd\x36\xc3\x66\x87\xb1\xf6\x91\xd2\xe1\xef\x92\x2a\x84\x7a\x69\x62\x39\xc3\x01\x89\x7b\xea\x34\x36\x6d\xe1\x11\x56\x66\x7d\x60\x80\x54\x9f\xa0\xb4\x56\x73\xef\x83\x35\x14\x8b\x1c\x9a\xe2\xa2\x58\x31\x8c\x93\x48\x12\xdf\x12\x0b\x8d\x2e\x57\x72\xa3\x8e\x7e\xaf\x8e\x5b\xbe\x76\xd4\x0b\x6a\xff\xfd\xc3\x06\x34\x3f\x5c\xb5\xbb\x07\xad\x05\xa7\xf1\xc3\x8e\xbb\xbe\xdb\x6e\xfb\x33\x34\xb4\x1d\x3c\x1b\xb7\xdc\xf6\x57\xf9\x38\x77\x34\x6e\xbe\x2d\xbf\xe7\x1d\x3e\xa2\x00\x7f\x0a\x19\xed\xcb\x74\xd6\xdb\xb6\xb2\xfc\x67\x75\xe6\x6d\xe5\xa9\x81\xdd\x4f\x69\x7a\x06\x53\xfa\xe6\x55\x30\x18\xda\x46\x96\xa3\x7b\x13\x40\xc5\xdb\x6a\x99\xd5\x91\x5b\x7d\x8e\xbc\x0d\x65\xb7\xc1\xa9\x7f\xfd\x20\xed\x83\x69\x3f\x50\xbb\x51\xed\x5f\xc3\x6e\x02\xcb\xda\x81\xb3\xd7\xad\x75\x5f\x6a\xbb\x6c\xb0\x6d\xad\x6b\x9a\x85\x14\x15\xa4\x74\x71\x7f\xf8\x61\xb4\x0b\xbc\x96\xcc\xdb\x92\x7b\xdb\xb2\xaf\x25\xff\x1e\x92\x81\x8d\xe3\x92\xde\x8d\xdd\x23\xe6\xb6\x2c\x00\x87\xcb\xd1\x74\x32\xa1\x63\x53\xaf\x51\xf8\xca\xbc\xf6\xc9\xdf\x73\x98\x33\xe7\xcc\x72\xc7\xdc\xbe\xec\x3e\xc7\xb7\x72\xbc\xe2\x0c\x67\x37\x6e\x25\x48\xf9\x01\xba\x6b\x5f\x74\xbf\x9a\x36\xdc\xb0\x7e\xcf\x38\xde\xc5\x65\x6f\x77\xba\xee\x7d\xb9\xde\xf3\x7f\xcd\x1d\xfc\x1d\x00\x00\xff\xff\x2b\x02\x18\xb5\x63\x22\x00\x00")

func organizationsRamlBytes() ([]byte, error) {
	return bindataRead(
		_organizationsRaml,
		"organizations.raml",
	)
}

func organizationsRaml() (*asset, error) {
	bytes, err := organizationsRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "organizations.raml", size: 8803, mode: os.FileMode(436), modTime: time.Unix(1461152142, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _securityschemesOauth_2_0Raml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x92\x41\x8f\xd3\x40\x0c\x85\xef\xf9\x15\x56\x2e\x9c\x48\x96\xd5\x9e\x72\x5b\x84\xc4\x11\x0e\xf4\x84\x10\x9a\x9d\x31\xcd\x88\x64\x3c\xd8\x4e\x4b\x10\x3f\x1e\x4f\xd3\x54\x6d\xd5\x4a\x9c\xb6\xa7\xea\x79\xde\xf3\x67\xc7\x01\xc5\x73\xcc\x1a\x29\x75\xf0\xb7\x02\xf8\xf4\x3c\x69\xff\x08\x51\xc0\x41\x66\x52\xf2\x34\x80\xf6\x4e\x61\x40\x15\xc0\xdf\x8a\x9c\xdc\x00\x2e\x67\x01\xc6\x5f\x13\x8a\x82\x33\x0f\x71\xfc\xe3\x4a\x0e\x28\x99\x33\xee\x9c\xa2\xe5\x05\x54\x17\x07\x81\x98\x2c\x70\x12\xe4\x37\x96\xec\x3d\x4d\x49\x61\x1f\xcd\x36\x29\x6c\x51\x35\xa6\xad\xb5\xc1\xc8\x90\x9d\xc8\x9e\x38\x34\x95\xce\x19\xbb\x85\x08\x1e\x9b\x87\x6a\x81\x7d\xc1\xf0\x7e\xee\x2c\xba\x47\x17\x90\xa5\xfc\x05\x78\x3e\x47\x58\xa4\xd2\xfc\x6a\xba\xe5\xb7\x11\x0c\x85\x52\x30\x05\xa3\xda\xb9\x21\x86\xb5\x4d\x81\x43\x11\x2b\xff\xc4\xd4\xc0\x07\x82\x44\x5a\xc0\x4d\x31\xce\x1e\xf9\x80\x7d\xca\x32\x05\xea\xc5\xf3\xfd\xe0\xa9\xc1\x76\xc2\x33\x88\x72\x99\x29\x3b\x76\x23\xda\xd2\x1a\xb3\x1c\x2a\x9f\x57\xe5\x48\x7e\x6e\x7e\x6d\xf0\x8b\xad\xd5\xc7\x8d\xda\x13\x46\xc9\x94\x04\x8f\x88\x4f\x0f\x4f\x37\xc9\x36\x69\xfd\xf2\x18\x2a\x59\xbe\xe2\xc1\x72\x71\x10\x1b\x8e\x1d\xf4\xaa\x59\xba\xb6\x8d\x2a\x33\x4d\x0d\xa5\x21\x26\x6c\x77\xef\x5a\x2a\x6f\xdb\x53\x4e\xb5\x2e\xe4\x4b\x99\xe3\xbf\xac\x67\xfb\xbb\x6e\xfd\x91\x5d\x52\xe9\xe0\x2b\x78\x0a\x08\xdf\xac\x2e\x9e\xf2\x3a\xd7\x5b\xa8\xcb\x49\x76\x2e\x8c\x31\xd5\x17\x52\x4c\x3f\xe8\xa4\x10\x6f\x5d\x5a\x6f\x8b\xf6\x09\xf9\x76\x69\xc4\xf1\xe5\x5e\xed\x7e\xa0\xa7\xa4\xec\xbc\x71\xb2\xed\xff\xf4\xc6\xd3\x98\x5d\x9a\xaf\xe0\x56\xf5\xe6\xd3\x8b\x1e\xab\x78\x37\x7e\x91\xef\xa8\x76\xb7\x1a\x7d\xb4\x04\xad\xab\x7f\x01\x00\x00\xff\xff\x62\x8e\x61\x93\x26\x04\x00\x00")

func securityschemesOauth_2_0RamlBytes() ([]byte, error) {
	return bindataRead(
		_securityschemesOauth_2_0Raml,
		"securitySchemes/oauth_2_0.raml",
	)
}

func securityschemesOauth_2_0Raml() (*asset, error) {
	bytes, err := securityschemesOauth_2_0RamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "securitySchemes/oauth_2_0.raml", size: 1062, mode: os.FileMode(436), modTime: time.Unix(1460547626, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _userorganizationsRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xc1\x6e\xdb\x30\x0c\x86\xef\x7a\x0a\xae\xc3\x6e\x5b\x9c\x14\x3b\xf9\xd6\x5d\x86\x0e\x1b\x0a\xb4\xd8\x61\x28\x82\x42\x91\xd9\x84\x85\x2c\x09\xa2\xdc\xc1\xcb\xf2\xee\x93\xac\xa4\x96\xb3\x34\x1b\x2f\x4e\x4c\xf2\xff\xc9\x8f\x7e\xfb\xee\xf6\xea\xdb\x57\x58\xcc\xe6\x22\x50\xd0\x58\xc3\x75\xe0\x1f\xb6\xbb\x31\x9a\x0c\x8a\x67\xf4\x4c\xd6\xd4\x30\x9f\x2d\xc4\x4a\x32\x7e\xf7\x54\x43\x25\x18\x55\xe7\x29\xf4\x77\x6a\x83\x2d\x72\x2d\x00\x3e\x80\x95\x5d\xd8\x3c\x5c\x3e\xcc\xd3\xdf\x1c\x6f\xc8\x28\xdd\x35\x08\x47\x0d\xd5\x4b\xed\xcc\xcb\x56\x8b\xd0\xbb\xa4\xb2\xef\xfb\x62\xc9\xdc\xf8\xb5\x34\xf4\x4b\x86\x68\x7f\x6d\x9e\x29\x0c\xbf\x46\x65\xe7\xad\x43\x1f\x28\x9b\x8f\x61\x8b\xbe\x1a\x38\x78\x32\xeb\x49\x41\xc7\xe8\x4f\x26\xbc\x8d\xeb\x4f\xde\xa4\x48\x93\x9d\x2c\x4f\x81\xa6\x6b\x6b\xb8\xb7\x3f\x0d\xfa\xf7\xd0\x62\xbb\x42\xbf\x14\x99\x0e\x36\x9f\xfa\x98\x1b\xa9\xc0\x52\x54\xc9\x9c\xab\x6d\x7a\x18\xd9\xe2\xae\x2a\xc7\x1d\x36\x29\x7b\x47\xa0\xb0\x05\x56\x36\x31\x8a\x8a\x17\xc3\x0a\xb2\x69\xc9\x5c\xc0\x12\x76\x51\x18\x60\x8d\x21\x0f\xdf\x20\x2b\x4f\x2e\xef\xff\x19\x03\x84\x0d\x82\x26\x0e\x13\x34\x0c\x72\x20\x01\xc4\x30\x8c\x1f\xb3\xfb\x05\xc0\x3e\x0e\x42\x1e\xd9\xc5\xc2\x11\xf0\xe5\xbc\xb8\xec\xca\x36\x7d\x49\x4b\x3a\xa7\x49\x0d\xda\xd5\x13\x97\x97\x3a\x77\x2d\xc8\xe6\x07\xc0\xf7\xcb\xa3\x6c\x9e\xa8\x48\xc7\x7c\xb5\x5d\x6b\xbb\x92\x9a\x9a\x5d\x95\x6e\x16\x79\xa6\xc7\x2e\x2b\x3b\xcb\xe1\xe0\x31\x41\x71\xa5\x14\xba\xb0\x57\xe4\x0d\x39\x20\x33\x41\x22\x4e\x2d\x76\x6e\xad\xfc\x69\xbc\xfe\xb1\xee\x4b\xff\xe2\x98\x48\x2e\x4a\xa1\x63\x96\xff\xa2\xf9\x9f\xd6\x0d\x6a\x0c\x78\x12\xc6\xef\x17\xbd\x5b\x7c\x42\x75\x84\xe5\xa0\x92\x08\xc9\x29\xa4\xd9\xb9\xa5\x3e\x96\x63\xbe\xe2\x97\xe2\xae\x8b\xb7\xe0\xc7\x4e\xeb\x3e\x0a\x25\x7f\x6c\x0a\xdb\x99\xf8\x13\x00\x00\xff\xff\xc7\x4d\xbb\x01\x96\x04\x00\x00")

func userorganizationsRamlBytes() ([]byte, error) {
	return bindataRead(
		_userorganizationsRaml,
		"userorganizations.raml",
	)
}

func userorganizationsRaml() (*asset, error) {
	bytes, err := userorganizationsRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "userorganizations.raml", size: 1174, mode: os.FileMode(436), modTime: time.Unix(1460547626, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _usersRaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\x6d\x73\xdb\xb8\xf1\x7f\xaf\x4f\x81\xbf\xff\xed\xf4\x45\x6c\x3d\xc5\xbe\x5e\xf4\x26\xe7\xf8\x92\xd4\xa9\x9d\x64\x62\xa7\x9d\x8e\xeb\xe6\x40\x12\x92\x50\x93\x00\x0b\x82\xb2\x95\x4c\xbe\x7b\x17\x20\x29\x02\x24\xf8\x20\x5b\x17\x27\x33\xe5\xcc\x5d\x2c\x12\x58\xec\xfe\xf6\x11\x0b\xf2\xff\xff\xf8\xe1\xf8\xfc\x0c\x4d\x86\xe3\x81\xa4\x32\x24\x33\x74\x2a\x93\x7f\xf0\xf4\x1d\x0b\x29\x23\x83\x15\x11\x09\xe5\x6c\x86\xc6\xc3\xc9\xc0\xc3\x09\xf9\x28\xe8\x0c\x8d\x06\x09\xf1\x53\x41\xe5\xfa\xc2\x5f\x92\x88\x24\xb3\x01\x42\x07\x88\xe3\x54\x2e\x3f\x4d\x3f\x8d\xd5\xcf\xec\xfa\x3f\xca\xfc\x30\x0d\x08\xaa\x4c\x18\x6d\xc6\x0e\x05\x8e\xc2\x81\x5c\xc7\x19\x95\x33\xec\x91\x30\x9b\xaf\xee\xcd\x50\x22\x05\x65\x0b\x7d\x23\xc2\x77\x67\x84\x2d\xe4\x72\x86\x8e\xc6\xd9\x1d\xca\x8a\x3b\xd3\x01\xdc\x39\x06\xa2\x5c\xd0\xcf\x58\x2a\xa6\xf5\x90\x80\x24\xbe\xa0\xb1\xbe\x81\x5e\x71\x81\x30\x43\xe4\x2e\x0e\x31\xd3\x83\x10\xf6\x78\x2a\x51\xe2\x73\x60\x00\x9e\x05\xd9\x9f\x11\x8e\x63\x58\x76\x1f\xf8\x26\x68\x29\x65\x9c\xcc\x46\xa3\x05\x95\xcb\xd4\x1b\xfa\x3c\x1a\x51\x99\xac\x79\xca\x35\x48\x23\x1a\x10\x06\xe0\xad\x13\x22\x00\xaf\x91\x17\x72\x6f\x14\xe1\x44\xc2\xdf\x01\xf7\x73\x59\xa7\xa3\x6c\x8d\x61\x14\x68\xbe\x62\x01\xbf\x84\xa4\x99\xd8\xd9\x95\x02\x05\x86\x23\x5b\x6a\x75\x2d\x04\x66\x92\x04\x97\xbc\x1c\xeb\xc0\x27\xbb\x2c\x81\x2f\x97\x04\x71\xb1\xc0\x2c\xc7\x04\xc9\x25\x96\x88\x26\x05\x45\x24\x08\x0e\x10\xf6\x7d\x92\x24\x48\x72\x94\xf0\x08\x26\xcc\x61\x18\xd1\xdc\xfc\x29\x41\x94\xcd\xb9\x88\xf4\xec\xcd\x2a\x38\x08\x04\xcc\x78\x3e\x6b\x5a\xf7\x3c\xc3\xaf\x20\x15\x2a\xad\x26\xc5\xaf\x62\x6d\xce\x88\x5e\xd4\x18\x21\xab\xfc\x0a\xf2\x9f\x94\x00\x94\xc1\xd0\x58\xca\x85\x9d\xba\xf6\xae\xae\xf7\xec\x3b\x0d\x28\xc5\xa9\x17\x52\xff\xaf\x64\x0d\x22\xe4\xcf\xae\xae\x37\x4f\x41\xfb\x34\xfc\x71\x65\x5b\xc2\xda\x3f\x2c\xf7\x1e\x66\x37\x3f\x2c\xf3\x73\xec\x13\x8f\x73\x10\x00\xc1\x3f\x21\xc1\xa5\xc7\x64\xb1\xc3\xf1\xc0\x64\x2b\x69\x72\x6f\xc3\x38\x2b\x88\x9c\xd1\x44\x2a\x00\x2c\x32\x5a\xde\x5c\x44\x0d\x97\x29\xba\x0f\x01\x50\x45\x35\x88\x5f\x02\x45\x24\xf2\x20\xc4\x2f\x69\x0c\x44\x86\x2a\x84\xbe\x00\x05\x1c\xfb\x3e\x4f\x99\x9c\x35\x06\x2a\x0a\x6a\xea\x11\x8a\x8c\x80\xfd\x74\x5c\xaa\x98\xfa\xdb\xcd\x9d\x94\x73\x35\x5f\x62\xbd\xdd\xfc\xc3\xb1\x12\xec\xbd\xf2\x0b\x96\x2a\x79\x73\xc1\xb0\x84\x10\x0d\x18\xfe\xeb\x9f\x4f\x9e\x5f\x8d\x0f\x9e\x5d\x3f\xf9\x83\x4e\x22\x59\x70\x6b\x96\xde\x87\x58\x6f\xdb\x43\x03\x0f\x4d\x08\xc0\x40\x42\xe4\xf6\x24\x8e\x4a\x12\x4c\x6c\x3f\xdd\xc0\x91\x83\x85\x88\xe7\x0f\x12\xc2\xa1\x8a\x7e\x34\x0e\x4b\x1a\x31\x4f\x24\x0e\x7d\x1e\x90\xed\xc9\x4c\x15\x99\x57\xb9\xc7\x75\x58\x2c\x0d\x36\xf4\x33\xd2\x94\xc9\xfc\x86\xce\xb7\x83\x96\x85\x63\xea\xcb\x54\xb4\x8f\x81\x32\xe0\xa6\x61\x00\xdc\x7d\xad\x7d\xbf\x83\xc5\x90\x2f\x28\x6b\x5d\xc4\x10\xa2\x26\x05\x5e\x61\x89\xc5\xa7\x54\x84\xad\x24\x96\x32\x0a\x3b\x07\xb5\x20\x02\x77\x3f\x26\x1b\xff\x69\xab\x60\x1e\x62\x59\xfa\x89\x59\xd9\x15\x37\xcb\xb4\xed\xca\xda\x77\x31\x15\x90\xf8\x50\x80\x25\x69\xc9\xe5\xbf\x43\x82\xdd\x9e\xa4\x11\x8c\x5a\x8b\xaa\xed\x29\xe7\xd1\xab\x39\xa1\x6e\x4f\xd2\x48\x09\x8e\x54\xe7\xd0\x74\xc5\x2b\x6b\x49\xd0\x31\xc5\xf2\x91\x81\x1e\x40\xee\x70\x14\x87\xc4\x55\x1e\x7b\xdc\x73\x19\x85\x45\xf7\x00\x4d\x5e\xff\xed\xe2\xcf\x47\x87\x87\x72\xf5\xf7\xf3\xe9\xe5\xf9\xe4\xe9\xea\xed\x5f\x7e\x4e\x3c\x8e\xa3\x37\x9f\xcf\x7e\x8a\xde\x3c\xfd\xa9\x62\x3c\x2a\xa8\x4c\x7e\x3e\x98\x8c\x0f\xa6\x63\xdb\x82\x6c\xd2\xb7\x5c\xdc\x68\x26\x7e\x81\xbd\x40\x8c\xd9\x5a\xed\x09\xac\x11\x4b\x9e\xb3\xf9\x4b\x2e\x45\x6d\xc4\x5e\x80\x99\x4f\x10\xec\x8e\xbc\xbd\x6c\xa4\xda\x4b\xe8\x9b\xea\xde\xb0\x98\x07\xb9\xdb\xb6\x3c\x93\x15\x0f\x16\x79\xf2\x74\x3a\x99\x3e\x3d\xcc\xff\x33\x1e\x92\x05\x3c\x04\x81\x1c\x0f\xb1\x99\xe2\x2c\x9e\x2b\x06\x90\x27\x3b\x74\x11\x2b\x17\x98\x53\x12\x06\xb5\x11\x79\x36\x83\xe2\x8c\xb2\xfc\x47\x6d\x0c\xa4\x2b\x74\x78\xf4\xa2\x4e\x3d\x4f\x22\xe8\x92\x47\x5c\x08\x7e\x0b\xfb\xb2\xfa\x0a\x46\x9a\x40\x97\x07\xcf\x0e\x8f\xc6\x75\x75\x34\x30\x7e\x82\x63\x0a\x73\xd1\x09\xfc\x6a\xe4\xbc\x18\xd4\xc2\xfc\x64\x27\xac\x4f\xc6\xe3\xb1\xe5\x99\x36\xdb\x37\x9e\x5f\x97\x43\xd7\x5a\xe8\xf2\x4c\xe9\xf0\xa8\xfc\x5f\x6d\x9c\x2a\xab\xd0\xf1\x8b\x93\x5f\x5f\xbe\xea\xc9\xeb\x20\x73\xa9\x15\x25\xb7\x3b\x89\xe8\xdb\xee\xaa\xfe\x17\x89\xbf\xff\x48\x5c\x3c\xb3\xb7\x29\xa5\x76\x61\xc0\x1b\x4e\xd9\x3b\xe3\xf1\x29\x5b\x81\x37\x95\x1d\x18\x97\x98\x26\xb9\x9a\x5a\x95\xc9\xd5\x6e\x0a\x1e\xf6\xad\x2a\x94\x3a\x67\xe8\x8a\xdf\x32\x22\xf6\xf3\x2d\x8e\xe6\xf4\x84\x83\x17\x60\x5f\x5e\xd0\x05\x83\x49\x1f\xb2\x1d\x52\x4b\xa1\x9f\x8f\x3f\x0d\xea\xa6\x87\x85\x0a\x2f\x45\x5d\xa4\xdb\x5b\x24\x78\x01\xb7\xae\xca\x3e\x18\xba\x1e\x8c\x94\x30\x9a\xa4\x8a\x04\x8e\x96\xd4\x89\x20\x50\xaf\x20\x8c\x18\xb9\xd5\x92\xeb\x21\x1e\x0f\x8c\xca\x1a\x76\xbd\xe0\x58\x1a\xac\xd1\xbf\x13\xce\x5c\x38\xa8\xba\x4c\xc9\x38\xfa\x52\x78\xec\xd7\x6c\xd8\xa2\xdc\x69\x98\x5c\x96\xcd\x3a\xf4\x25\x6f\x7f\x29\xde\xf7\x34\xf8\x38\x80\xfa\x6b\x0f\x5d\xa3\xaf\xa8\x70\x60\x30\xe5\x18\x54\x5f\xb5\xd5\xe9\x78\x5c\x0f\x59\x36\xf7\xe6\xd5\x2e\x49\xb3\x54\x20\x97\x8e\x1f\xb9\x67\x96\x5c\x3c\x44\xa4\x52\x23\xd9\x15\xd0\x24\x0e\xf1\xfa\xad\x2e\x31\x3e\x90\x05\x55\x2d\xbc\xb7\xe4\xf6\xa5\x5a\xb9\xea\xcd\x15\x35\x16\xc3\x73\x45\x6a\x66\x8b\x38\x32\x68\x43\xa6\x0b\x91\xa6\x20\xa1\x2e\xdd\xdd\x98\x65\x3d\xd3\xda\x43\x13\x2f\x87\x9b\x34\xe8\x53\x69\x74\x52\x5f\xc9\x29\x2b\x09\x3a\xa4\x6d\x92\xb9\x9f\xe4\x7d\x10\xe8\x07\xc5\xe6\xea\xc0\x44\x5d\x87\xe3\x67\xae\x65\xec\xa6\x8b\x5a\x45\x75\x51\x71\xa8\xfa\xa7\x6b\xe5\xb7\x9b\x4e\xd2\xe8\x8b\xe6\xe5\xeb\xcc\xc8\x8b\x95\xbd\xbe\x65\x68\x1f\x63\xb5\x61\x69\xb0\xb1\xca\xc2\xd9\xd8\xa4\x6c\x6d\xa9\x8e\xf5\x88\x0b\xb4\xc2\x61\xaa\x1b\xb7\xaa\xbb\xdd\xa8\x0d\x97\x26\xba\xb5\xd0\x8e\x7f\x07\xf0\x9d\x88\x6f\x67\x87\x4e\x3c\xaa\x55\x57\x1f\x15\xaa\xc6\xb8\x32\xdd\xd0\xa5\xca\x41\x39\x25\x24\x92\xb4\x28\xef\x57\x3d\xa0\x9f\xf2\x3e\x90\x88\xaf\xf4\x21\x43\x8b\x8a\x1a\xe1\x50\x80\x1c\x76\x8a\xf5\xd2\x24\x0c\xc4\xd4\x8a\x56\x8f\x73\x3b\x84\x42\x9c\x48\x9b\x59\xdd\x3e\x64\x5c\xc2\xd6\xa3\x24\x9f\x05\xe8\xac\xa6\x28\xe8\x56\xa1\x73\xc0\xe6\xae\x34\x6c\x05\xab\x13\x96\x9b\xbc\x26\x41\xd5\xa1\x8d\x39\xa9\x06\x94\x45\x34\x27\x83\x52\x4d\x9c\x04\x39\xff\x45\x21\xd5\x24\xc1\x43\x52\x8d\x53\xfe\xa6\xe2\xcc\x62\x36\x1b\xaa\x3d\x1e\x27\x09\xf7\xa9\x32\xf8\x4d\xd1\xa7\x8e\x6e\xee\x09\x89\x73\x1d\x07\x65\xbb\xa6\x18\xa9\xe3\xa0\xfb\x17\x16\x6a\xb6\x8d\x8c\x85\xcb\x6b\x22\x55\xc6\x3f\xad\x1d\x39\x3d\x4e\xf5\x51\xec\x8e\x2a\x10\x40\xb0\xa5\x2a\xee\xd4\x60\x80\x72\x52\xac\xdf\x63\x01\xa3\x64\x5e\xf5\x19\x24\xf9\x0d\x71\xac\x58\xed\xaf\x99\x0b\x55\xaa\x9d\xfb\x1b\xa0\xc1\xe3\xb7\x46\xb2\x57\xf6\x76\x6e\x79\x5c\x38\x99\x41\xd6\x2c\xdf\x9a\x4a\x37\x3b\x28\xb7\x55\x6c\x76\x30\xde\xa6\xfe\xbe\x77\x85\xb6\x49\x8b\x36\x97\x0e\x0d\x55\x72\x61\x7b\x35\xb6\x8b\xaa\xf3\x81\x59\xbf\x41\xb2\x7a\xe2\xe9\x5b\x56\x55\x8b\xaa\x85\x79\x7c\xf2\x6d\x4d\xda\xb5\xb9\xaf\x54\x78\x8e\xfa\xae\x63\xfb\x90\x0d\xea\xa8\xeb\xee\x68\x76\x9c\x97\xa3\x3b\x7c\x9c\x7d\x45\x6c\x9c\xa3\xd5\xf4\xdb\xa2\x8c\xae\x5d\x85\xab\x96\x73\xd6\x29\x5b\xd7\x71\xf5\x2a\xce\x91\x8c\x3b\xf7\x77\x9b\xe2\xad\xee\x5f\x2d\x35\x6c\x57\xda\x3d\xae\x96\x6a\x95\x14\x60\xa0\xfd\x3b\x67\x81\x8a\xbb\xec\x3e\x66\x34\xc7\x78\x77\x27\xae\x4f\x7c\xaf\x77\xef\xda\x62\x7c\x5c\x1b\xdd\x3f\xce\x37\xc9\xd6\xe8\x2b\x96\x9f\xd4\xf9\x74\xda\x4c\xcd\x4b\xda\x23\xbd\x5e\x02\x55\x9a\x97\x75\xb1\xba\x85\xeb\x12\xb2\x5b\xda\xbe\x62\xab\xcb\xe1\xd5\x3f\x60\x1e\x68\x6e\x20\x5b\xd9\xc0\x91\x0b\x5c\xa8\xdc\x3f\x1b\x18\x80\x97\x19\xa1\x2a\xde\x7d\x2b\x98\x16\x7d\x77\x2a\xba\x9f\x85\x77\x66\x81\x2e\x6b\xb9\x4f\x06\x70\xc4\xff\x4e\xa5\x6c\x32\x80\x23\x8c\xdc\x7b\x2b\xfa\xde\xf0\xe0\xc6\x1c\xa0\x0e\x0e\x1e\x1c\xfc\xad\x68\xea\x68\x40\x2b\x08\xd5\x42\x95\x1d\xe5\x6e\x0a\x61\x77\xe8\x6f\x3a\xd3\xe8\x2e\x80\xbf\x7d\x72\xaa\x72\xf9\xa8\x81\x67\xb7\x7b\x2a\x5b\xb4\x9a\xe1\xd9\x21\x77\x27\xd5\xc7\x63\x85\xea\xaa\x12\xed\x40\xed\x88\xc0\x66\x9c\x55\x60\xe4\xbe\xa1\xdf\x13\xd6\xa8\x34\x47\xdc\x3e\xdc\xb9\xb9\xaa\x05\x2b\x47\x3b\x08\xb7\x68\x8d\x71\x49\xe7\xf9\xc2\xbb\xac\x19\x2b\x9c\xbc\x26\x32\xcb\x50\xf9\x1b\x88\xd6\xb2\xfb\xea\x51\x02\x7c\x0a\x82\x62\xc2\x02\x05\x20\xdd\x9c\x0b\x26\x48\xbd\x87\x1d\x83\x19\x43\x46\x4b\xbe\x73\x37\x42\x26\xe3\xb3\x96\xd3\x4e\xeb\x25\x4d\x27\x5f\x99\xbc\x0f\xa0\x51\x1c\x48\xe6\x27\x97\x40\xca\x7d\xa4\x99\x1d\xcc\x9a\x46\x51\xcc\xdc\xa5\x41\x38\xcd\x61\xb3\x10\xba\x5d\x42\xa9\xba\x79\x93\x5c\x65\xe6\x49\xf1\xaa\xae\x3a\x3d\x05\xd8\x87\xe8\x9d\x08\xe0\x91\x22\x94\x1b\x89\xb7\xd6\xef\x6f\x15\x7e\xd5\xd8\x51\xcb\xbf\x2b\x78\xa9\xdf\xdb\x09\x2a\x9d\x36\xed\x56\xd5\x17\x6d\x6b\x1c\x9f\xe6\x9f\x26\x28\x86\xb2\xf7\x7f\x82\x92\xfb\x7d\xcd\x09\x99\xe3\x34\x04\xeb\x66\xe1\x3a\xeb\xc0\xfa\x92\xae\x4c\x19\x95\x7d\x0b\x22\x53\xc1\xaa\x6d\x76\xf5\xfa\xad\x66\x0d\xcd\x41\xe7\xe5\x0b\x69\x89\x04\xd9\x5d\xfc\x52\x26\xc9\xa2\x52\xc7\x5b\xfc\x5e\xa8\x99\x80\xe0\x3c\x21\x72\x5f\x61\x3a\x4f\x43\x34\x07\x4f\x8a\xf1\x02\xa0\x1b\x42\x6c\xc8\xd8\x05\xa4\x7f\x1b\xff\xd6\x8f\x9d\x08\xdf\xdd\x8b\x99\x73\x7c\xa7\xd6\x25\x28\xa1\x9f\x49\x27\x37\x47\x7d\xd9\xc9\x59\xa2\x91\x3a\xc1\x9f\x1e\x8d\x6b\x1d\x51\xf3\x03\x8f\x1d\x07\xb7\x4a\x23\xfa\x38\x0c\xad\xcf\x49\x92\x7e\x61\xd0\xe6\x70\xf8\xc8\x19\xcf\x92\x20\x0f\x2e\xa3\x2f\x9b\xcf\x49\xdc\xfb\xa8\x1a\x12\x26\x91\x76\x14\x2c\xe9\xb5\x39\x60\x94\xc4\xc4\x57\x99\xc1\x7a\xe9\xe3\xbb\x02\xa6\xff\x2e\xa1\x07\x14\xd9\x3e\xa1\x09\x0d\x66\xa1\xb0\x6f\x7f\xb8\x60\xbe\xa6\x7f\x4b\xc3\x10\x72\x2a\x0a\x39\x03\x47\x44\x4b\xbc\x22\x9b\xef\x74\x9c\x1f\xe7\x0c\x7b\xee\x3e\x7b\x88\x70\xce\x03\x3a\x5f\x43\x00\xa7\xfe\xd2\x5c\xa2\xca\xbe\xde\x6d\x79\x21\xd1\x5f\x0e\x11\xb2\x8b\x62\xc8\xe6\xee\xbf\x01\x00\x00\xff\xff\xda\xc6\x7b\xc5\x9e\x36\x00\x00")

func usersRamlBytes() ([]byte, error) {
	return bindataRead(
		_usersRaml,
		"users.raml",
	)
}

func usersRaml() (*asset, error) {
	bytes, err := usersRamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "users.raml", size: 13982, mode: os.FileMode(436), modTime: time.Unix(1461225395, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"companies.raml": companiesRaml,
	"contracts.raml": contractsRaml,
	"organizations.raml": organizationsRaml,
	"securitySchemes/oauth_2_0.raml": securityschemesOauth_2_0Raml,
	"userorganizations.raml": userorganizationsRaml,
	"users.raml": usersRaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"companies.raml": &bintree{companiesRaml, map[string]*bintree{}},
	"contracts.raml": &bintree{contractsRaml, map[string]*bintree{}},
	"organizations.raml": &bintree{organizationsRaml, map[string]*bintree{}},
	"securitySchemes": &bintree{nil, map[string]*bintree{
		"oauth_2_0.raml": &bintree{securityschemesOauth_2_0Raml, map[string]*bintree{}},
	}},
	"userorganizations.raml": &bintree{userorganizationsRaml, map[string]*bintree{}},
	"users.raml": &bintree{usersRaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

